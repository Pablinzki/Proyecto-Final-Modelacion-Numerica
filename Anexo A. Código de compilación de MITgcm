Last login: Wed Jun  1 00:31:40 on ttys000
(base) Macs-MacBook-Pro:~ mac$ conda create -n MITgcm
Collecting package metadata (current_repodata.json): done
Solving environment: done


==> WARNING: A newer version of conda exists. <==
  current version: 4.12.0
  latest version: 4.13.0

Please update conda by running

    $ conda update -n base -c defaults conda



## Package Plan ##

  environment location: /opt/anaconda3/envs/MITgcm



Proceed ([y]/n)? y

Preparing transaction: done
Verifying transaction: done
Executing transaction: done
#
# To activate this environment, use
#
#     $ conda activate MITgcm
#
# To deactivate an active environment, use
#
#     $ conda deactivate

(base) Macs-MacBook-Pro:~ mac$ conda activate MITgcm
(MITgcm) Macs-MacBook-Pro:~ mac$ git clone https://github.com/MITgcm/MITgcm.git
Cloning into 'MITgcm'...
remote: Enumerating objects: 147868, done.
remote: Counting objects: 100% (2308/2308), done.
remote: Compressing objects: 100% (1288/1288), done.
remote: Total 147868 (delta 1318), reused 1629 (delta 1008), pack-reused 145560
Receiving objects: 100% (147868/147868), 356.93 MiB | 2.31 MiB/s, done.
Resolving deltas: 100% (112280/112280), done.
Checking out files: 100% (6432/6432), done.
(MITgcm) Macs-MacBook-Pro:~ mac$ cd MITgcm/verification/tutorial_held_suarez_cs/
(MITgcm) Macs-MacBook-Pro:tutorial_held_suarez_cs mac$ python input/data
  File "input/data", line 6
    &PARM01
    ^
IndentationError: unexpected indent
(MITgcm) Macs-MacBook-Pro:tutorial_held_suarez_cs mac$ cd input/
(MITgcm) Macs-MacBook-Pro:input mac$ data
-bash: data: command not found
(MITgcm) Macs-MacBook-Pro:input mac$ python data
  File "data", line 6
    &PARM01
    ^
IndentationError: unexpected indent
(MITgcm) Macs-MacBook-Pro:input mac$ cd
(MITgcm) Macs-MacBook-Pro:~ mac$ cd verification/exp2/build
-bash: cd: verification/exp2/build: No such file or directory
(MITgcm) Macs-MacBook-Pro:~ mac$ cd MITgcm/verification/exp2/build
(MITgcm) Macs-MacBook-Pro:build mac$ ../../../tools/genmake2 -mods ../code -optfile «/PATH/TO/OPTFILE»

GENMAKE :

A program for GENerating MAKEfiles for the MITgcm project.
   For a quick list of options, use "genmake2 -h"
or for more detail see the documentation, section "Building the model"
   (under "Getting Started") at:  https://mitgcm.readthedocs.io/

===  Processing options files and arguments  ===
  getting local config information:  none found
Warning: ROOTDIR was not specified ; try using a local copy of MITgcm found at "../../.."
  getting OPTFILE information:
Error: can't read OPTFILE="«/PATH/TO/OPTFILE»"
(MITgcm) Macs-MacBook-Pro:build mac$ ../../../tools/genmake2 -mods ../code -optfile ../../../tools/build_options/darwin_amd64_gfortran 

GENMAKE :

A program for GENerating MAKEfiles for the MITgcm project.
   For a quick list of options, use "genmake2 -h"
or for more detail see the documentation, section "Building the model"
   (under "Getting Started") at:  https://mitgcm.readthedocs.io/

===  Processing options files and arguments  ===
  getting local config information:  none found
Warning: ROOTDIR was not specified ; try using a local copy of MITgcm found at "../../.."
  getting OPTFILE information:
    using OPTFILE="../../../tools/build_options/darwin_amd64_gfortran"
../../../tools/build_options/darwin_amd64_gfortran: line 64: gfortran: command not found
    un-recognized Compiler-version '' ; ignored (-> set to 0)
../../../tools/build_options/darwin_amd64_gfortran: line 118: nf-config: command not found
  getting AD_OPTFILE information:
    using AD_OPTFILE="../../../tools/adjoint_options/adjoint_default"
  check Fortran Compiler...  fail to compile  (set FC_CHECK=0/5)
  check makedepend (local: 0, system: 0, 0)

===  Checking system libraries  ===
  Do we have the system() command using gfortran...  no
  Do we have the fdate() command using gfortran...  no
  Do we have the etime() command using gfortran...  no
  Can we call simple C routines (here, "cloc()") using gfortran...  no
  Can we unlimit the stack size using gfortran...  no
  Can we register a signal handler using gfortran...  no
  Can we use stat() through C calls...  no
  Can we create NetCDF-enabled binaries...  no
    skip check for LAPACK Libs
  Can we call FLUSH intrinsic subroutine...  no

===  Setting defaults  ===
  Adding MODS directories: ../code 
  Making source files in eesupp from templates
  Making source files in pkg/exch2 from templates
  Making source files in pkg/regrid from templates

===  Determining package settings  ===
  getting package dependency info from  ../../../pkg/pkg_depend
  getting package groups info from      ../../../pkg/pkg_groups
  checking list of packages to compile:
    using PKG_LIST="../code/packages.conf"
    before group expansion packages are: gfd cd_code
    replacing "gfd" with:  mom_common mom_fluxform mom_vecinv generic_advdiff debug mdsio rw monitor
    after group expansion packages are:  mom_common mom_fluxform mom_vecinv generic_advdiff debug mdsio rw monitor cd_code
  applying DISABLE settings
  applying ENABLE settings
    packages are:  cd_code debug generic_advdiff mdsio mom_common mom_fluxform mom_vecinv monitor rw
  applying package dependency rules
    packages are:  cd_code debug generic_advdiff mdsio mom_common mom_fluxform mom_vecinv monitor rw
  Adding STANDARDDIRS='eesupp model'
  Searching for *OPTIONS.h files in order to warn about the presence
    of "#define "-type statements that are no longer allowed:
    found CPP_OPTIONS="../code/CPP_OPTIONS.h"
    found CPP_EEOPTIONS="../../../eesupp/inc/CPP_EEOPTIONS.h"
  Creating the list of files for the adjoint compiler.

===  Creating the Makefile  ===
  setting INCLUDES
  Determining the list of source and include files
  Writing makefile: Makefile
  Add the source list for AD code generation
  Making list of "exceptions" that need ".p" files
  Making list of NOOPTFILES
  Add rules for links
  Adding makedepend marker

===  Done  ===
Warning: FORTRAN compiler test failed (please see 'genmake.log')
Warning: 'Makefile' might be unusable (check your optfile)
(MITgcm) Macs-MacBook-Pro:build mac$ ls
AD_CONFIG.h		Makefile.bak		genmake.log
Makefile		PACKAGES_CONFIG.h
(MITgcm) Macs-MacBook-Pro:build mac$ ls ../
README		code		input.rigidLid	run
build		input		results
(MITgcm) Macs-MacBook-Pro:build mac$ less genmake.log
(MITgcm) Macs-MacBook-Pro:build mac$ which gfortran
(MITgcm) Macs-MacBook-Pro:build mac$ sudo rm -r /usr/local/gfortran /usr/local/bin/gfortran
Password:
(MITgcm) Macs-MacBook-Pro:build mac$ which gfortran
(MITgcm) Macs-MacBook-Pro:build mac$ which gfortran
/usr/local/bin/gfortran
(MITgcm) Macs-MacBook-Pro:build mac$ ../../../tools/genmake2 -mods ../code -optfile ../../../tools/build_options/darwin_amd64_gfortran 

GENMAKE :

A program for GENerating MAKEfiles for the MITgcm project.
   For a quick list of options, use "genmake2 -h"
or for more detail see the documentation, section "Building the model"
   (under "Getting Started") at:  https://mitgcm.readthedocs.io/

===  Processing options files and arguments  ===
  getting local config information:  none found
Warning: ROOTDIR was not specified ; try using a local copy of MITgcm found at "../../.."
  getting OPTFILE information:
    using OPTFILE="../../../tools/build_options/darwin_amd64_gfortran"
    get Compiler-version: '6'
../../../tools/build_options/darwin_amd64_gfortran: line 118: nf-config: command not found
  getting AD_OPTFILE information:
    using AD_OPTFILE="../../../tools/adjoint_options/adjoint_default"
  check Fortran Compiler...  pass  (set FC_CHECK=5/5)
  check makedepend (local: 0, system: 0, 0)

===  Checking system libraries  ===
  Do we have the system() command using gfortran...  yes
  Do we have the fdate() command using gfortran...  yes
  Do we have the etime() command using gfortran... c,r: yes (SbR)
  Can we call simple C routines (here, "cloc()") using gfortran...  yes
  Can we unlimit the stack size using gfortran...  yes
  Can we register a signal handler using gfortran...  no
  Can we use stat() through C calls...  yes
  Can we create NetCDF-enabled binaries...  no
    skip check for LAPACK Libs
  Can we call FLUSH intrinsic subroutine...  yes

===  Setting defaults  ===
  Adding MODS directories: ../code 
  Making source files in eesupp from templates
  Making source files in pkg/exch2 from templates
  Making source files in pkg/regrid from templates

===  Determining package settings  ===
  getting package dependency info from  ../../../pkg/pkg_depend
  getting package groups info from      ../../../pkg/pkg_groups
  checking list of packages to compile:
    using PKG_LIST="../code/packages.conf"
    before group expansion packages are: gfd cd_code
    replacing "gfd" with:  mom_common mom_fluxform mom_vecinv generic_advdiff debug mdsio rw monitor
    after group expansion packages are:  mom_common mom_fluxform mom_vecinv generic_advdiff debug mdsio rw monitor cd_code
  applying DISABLE settings
  applying ENABLE settings
    packages are:  cd_code debug generic_advdiff mdsio mom_common mom_fluxform mom_vecinv monitor rw
  applying package dependency rules
    packages are:  cd_code debug generic_advdiff mdsio mom_common mom_fluxform mom_vecinv monitor rw
  Adding STANDARDDIRS='eesupp model'
  Searching for *OPTIONS.h files in order to warn about the presence
    of "#define "-type statements that are no longer allowed:
    found CPP_OPTIONS="../code/CPP_OPTIONS.h"
    found CPP_EEOPTIONS="../../../eesupp/inc/CPP_EEOPTIONS.h"
  Creating the list of files for the adjoint compiler.

===  Creating the Makefile  ===
  setting INCLUDES
  Determining the list of source and include files
  Writing makefile: Makefile
  Add the source list for AD code generation
  Making list of "exceptions" that need ".p" files
  Making list of NOOPTFILES
  Add rules for links
  Adding makedepend marker

===  Done  ===
  original 'Makefile' generated successfully
=> next steps:
  > make depend
  > make       (<-- to generate executable)
(MITgcm) Macs-MacBook-Pro:build mac$ make depend
if [ ! -L cd_code_ini_vars.F ]; then ln -s ../../../pkg/cd_code/cd_code_ini_vars.F cd_code_ini_vars.F; fi
if [ ! -L cd_code_init_fixed.F ]; then ln -s ../../../pkg/cd_code/cd_code_init_fixed.F cd_code_init_fixed.F; fi
if [ ! -L cd_code_read_pickup.F ]; then ln -s ../../../pkg/cd_code/cd_code_read_pickup.F cd_code_read_pickup.F; fi
if [ ! -L cd_code_scheme.F ]; then ln -s ../../../pkg/cd_code/cd_code_scheme.F cd_code_scheme.F; fi
if [ ! -L cd_code_write_pickup.F ]; then ln -s ../../../pkg/cd_code/cd_code_write_pickup.F cd_code_write_pickup.F; fi
if [ ! -L chksum_tiled.F ]; then ln -s ../../../pkg/debug/chksum_tiled.F chksum_tiled.F; fi
if [ ! -L debug_call.F ]; then ln -s ../../../pkg/debug/debug_call.F debug_call.F; fi
if [ ! -L debug_cs_corner_uv.F ]; then ln -s ../../../pkg/debug/debug_cs_corner_uv.F debug_cs_corner_uv.F; fi
if [ ! -L debug_enter.F ]; then ln -s ../../../pkg/debug/debug_enter.F debug_enter.F; fi
if [ ! -L debug_fld_stats_rl.F ]; then ln -s ../../../pkg/debug/debug_fld_stats_rl.F debug_fld_stats_rl.F; fi
if [ ! -L debug_fld_stats_rs.F ]; then ln -s ../../../pkg/debug/debug_fld_stats_rs.F debug_fld_stats_rs.F; fi
if [ ! -L debug_leave.F ]; then ln -s ../../../pkg/debug/debug_leave.F debug_leave.F; fi
if [ ! -L debug_msg.F ]; then ln -s ../../../pkg/debug/debug_msg.F debug_msg.F; fi
if [ ! -L debug_stats_rl.F ]; then ln -s ../../../pkg/debug/debug_stats_rl.F debug_stats_rl.F; fi
if [ ! -L debug_stats_rs.F ]; then ln -s ../../../pkg/debug/debug_stats_rs.F debug_stats_rs.F; fi
if [ ! -L fill_in_corners_rl.F ]; then ln -s ../../../pkg/debug/fill_in_corners_rl.F fill_in_corners_rl.F; fi
if [ ! -L write_fullarray_rl.F ]; then ln -s ../../../pkg/debug/write_fullarray_rl.F write_fullarray_rl.F; fi
if [ ! -L write_fullarray_rs.F ]; then ln -s ../../../pkg/debug/write_fullarray_rs.F write_fullarray_rs.F; fi
if [ ! -L gad_advection.F ]; then ln -s ../../../pkg/generic_advdiff/gad_advection.F gad_advection.F; fi
if [ ! -L gad_advscheme.F ]; then ln -s ../../../pkg/generic_advdiff/gad_advscheme.F gad_advscheme.F; fi
if [ ! -L gad_biharm_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_biharm_r.F gad_biharm_r.F; fi
if [ ! -L gad_biharm_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_biharm_x.F gad_biharm_x.F; fi
if [ ! -L gad_biharm_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_biharm_y.F gad_biharm_y.F; fi
if [ ! -L gad_c2_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_c2_adv_r.F gad_c2_adv_r.F; fi
if [ ! -L gad_c2_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_c2_adv_x.F gad_c2_adv_x.F; fi
if [ ! -L gad_c2_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_c2_adv_y.F gad_c2_adv_y.F; fi
if [ ! -L gad_c2_impl_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_c2_impl_r.F gad_c2_impl_r.F; fi
if [ ! -L gad_c4_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_c4_adv_r.F gad_c4_adv_r.F; fi
if [ ! -L gad_c4_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_c4_adv_x.F gad_c4_adv_x.F; fi
if [ ! -L gad_c4_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_c4_adv_y.F gad_c4_adv_y.F; fi
if [ ! -L gad_calc_rhs.F ]; then ln -s ../../../pkg/generic_advdiff/gad_calc_rhs.F gad_calc_rhs.F; fi
if [ ! -L gad_check.F ]; then ln -s ../../../pkg/generic_advdiff/gad_check.F gad_check.F; fi
if [ ! -L gad_del2.F ]; then ln -s ../../../pkg/generic_advdiff/gad_del2.F gad_del2.F; fi
if [ ! -L gad_diagnostics_init.F ]; then ln -s ../../../pkg/generic_advdiff/gad_diagnostics_init.F gad_diagnostics_init.F; fi
if [ ! -L gad_diagnostics_state.F ]; then ln -s ../../../pkg/generic_advdiff/gad_diagnostics_state.F gad_diagnostics_state.F; fi
if [ ! -L gad_diff_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_diff_r.F gad_diff_r.F; fi
if [ ! -L gad_diff_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_diff_x.F gad_diff_x.F; fi
if [ ! -L gad_diff_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_diff_y.F gad_diff_y.F; fi
if [ ! -L gad_dst2u1_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst2u1_adv_r.F gad_dst2u1_adv_r.F; fi
if [ ! -L gad_dst2u1_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst2u1_adv_x.F gad_dst2u1_adv_x.F; fi
if [ ! -L gad_dst2u1_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst2u1_adv_y.F gad_dst2u1_adv_y.F; fi
if [ ! -L gad_dst2u1_impl_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst2u1_impl_r.F gad_dst2u1_impl_r.F; fi
if [ ! -L gad_dst3_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst3_adv_r.F gad_dst3_adv_r.F; fi
if [ ! -L gad_dst3_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst3_adv_x.F gad_dst3_adv_x.F; fi
if [ ! -L gad_dst3_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst3_adv_y.F gad_dst3_adv_y.F; fi
if [ ! -L gad_dst3fl_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst3fl_adv_r.F gad_dst3fl_adv_r.F; fi
if [ ! -L gad_dst3fl_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst3fl_adv_x.F gad_dst3fl_adv_x.F; fi
if [ ! -L gad_dst3fl_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst3fl_adv_y.F gad_dst3fl_adv_y.F; fi
if [ ! -L gad_dst3fl_impl_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_dst3fl_impl_r.F gad_dst3fl_impl_r.F; fi
if [ ! -L gad_exch_som.F ]; then ln -s ../../../pkg/generic_advdiff/gad_exch_som.F gad_exch_som.F; fi
if [ ! -L gad_fluxlimit_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_fluxlimit_adv_r.F gad_fluxlimit_adv_r.F; fi
if [ ! -L gad_fluxlimit_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_fluxlimit_adv_x.F gad_fluxlimit_adv_x.F; fi
if [ ! -L gad_fluxlimit_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_fluxlimit_adv_y.F gad_fluxlimit_adv_y.F; fi
if [ ! -L gad_fluxlimit_impl_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_fluxlimit_impl_r.F gad_fluxlimit_impl_r.F; fi
if [ ! -L gad_grad_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_grad_x.F gad_grad_x.F; fi
if [ ! -L gad_grad_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_grad_y.F gad_grad_y.F; fi
if [ ! -L gad_implicit_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_implicit_r.F gad_implicit_r.F; fi
if [ ! -L gad_init_fixed.F ]; then ln -s ../../../pkg/generic_advdiff/gad_init_fixed.F gad_init_fixed.F; fi
if [ ! -L gad_init_varia.F ]; then ln -s ../../../pkg/generic_advdiff/gad_init_varia.F gad_init_varia.F; fi
if [ ! -L gad_os7mp_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_os7mp_adv_r.F gad_os7mp_adv_r.F; fi
if [ ! -L gad_os7mp_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_os7mp_adv_x.F gad_os7mp_adv_x.F; fi
if [ ! -L gad_os7mp_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_os7mp_adv_y.F gad_os7mp_adv_y.F; fi
if [ ! -L gad_osc_hat_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_osc_hat_r.F gad_osc_hat_r.F; fi
if [ ! -L gad_osc_hat_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_osc_hat_x.F gad_osc_hat_x.F; fi
if [ ! -L gad_osc_hat_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_osc_hat_y.F gad_osc_hat_y.F; fi
if [ ! -L gad_osc_mul_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_osc_mul_r.F gad_osc_mul_r.F; fi
if [ ! -L gad_osc_mul_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_osc_mul_x.F gad_osc_mul_x.F; fi
if [ ! -L gad_osc_mul_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_osc_mul_y.F gad_osc_mul_y.F; fi
if [ ! -L gad_plm_fun.F ]; then ln -s ../../../pkg/generic_advdiff/gad_plm_fun.F gad_plm_fun.F; fi
if [ ! -L gad_ppm_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_adv_r.F gad_ppm_adv_r.F; fi
if [ ! -L gad_ppm_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_adv_x.F gad_ppm_adv_x.F; fi
if [ ! -L gad_ppm_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_adv_y.F gad_ppm_adv_y.F; fi
if [ ! -L gad_ppm_flx_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_flx_r.F gad_ppm_flx_r.F; fi
if [ ! -L gad_ppm_flx_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_flx_x.F gad_ppm_flx_x.F; fi
if [ ! -L gad_ppm_flx_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_flx_y.F gad_ppm_flx_y.F; fi
if [ ! -L gad_ppm_fun.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_fun.F gad_ppm_fun.F; fi
if [ ! -L gad_ppm_hat_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_hat_r.F gad_ppm_hat_r.F; fi
if [ ! -L gad_ppm_hat_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_hat_x.F gad_ppm_hat_x.F; fi
if [ ! -L gad_ppm_hat_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_hat_y.F gad_ppm_hat_y.F; fi
if [ ! -L gad_ppm_p3e_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_p3e_r.F gad_ppm_p3e_r.F; fi
if [ ! -L gad_ppm_p3e_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_p3e_x.F gad_ppm_p3e_x.F; fi
if [ ! -L gad_ppm_p3e_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_ppm_p3e_y.F gad_ppm_p3e_y.F; fi
if [ ! -L gad_pqm_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_adv_r.F gad_pqm_adv_r.F; fi
if [ ! -L gad_pqm_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_adv_x.F gad_pqm_adv_x.F; fi
if [ ! -L gad_pqm_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_adv_y.F gad_pqm_adv_y.F; fi
if [ ! -L gad_pqm_flx_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_flx_r.F gad_pqm_flx_r.F; fi
if [ ! -L gad_pqm_flx_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_flx_x.F gad_pqm_flx_x.F; fi
if [ ! -L gad_pqm_flx_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_flx_y.F gad_pqm_flx_y.F; fi
if [ ! -L gad_pqm_fun.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_fun.F gad_pqm_fun.F; fi
if [ ! -L gad_pqm_hat_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_hat_r.F gad_pqm_hat_r.F; fi
if [ ! -L gad_pqm_hat_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_hat_x.F gad_pqm_hat_x.F; fi
if [ ! -L gad_pqm_hat_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_hat_y.F gad_pqm_hat_y.F; fi
if [ ! -L gad_pqm_p5e_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_p5e_r.F gad_pqm_p5e_r.F; fi
if [ ! -L gad_pqm_p5e_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_p5e_x.F gad_pqm_p5e_x.F; fi
if [ ! -L gad_pqm_p5e_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_pqm_p5e_y.F gad_pqm_p5e_y.F; fi
if [ ! -L gad_read_pickup.F ]; then ln -s ../../../pkg/generic_advdiff/gad_read_pickup.F gad_read_pickup.F; fi
if [ ! -L gad_som_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_som_adv_r.F gad_som_adv_r.F; fi
if [ ! -L gad_som_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_som_adv_x.F gad_som_adv_x.F; fi
if [ ! -L gad_som_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_som_adv_y.F gad_som_adv_y.F; fi
if [ ! -L gad_som_advect.F ]; then ln -s ../../../pkg/generic_advdiff/gad_som_advect.F gad_som_advect.F; fi
if [ ! -L gad_som_exchanges.F ]; then ln -s ../../../pkg/generic_advdiff/gad_som_exchanges.F gad_som_exchanges.F; fi
if [ ! -L gad_som_fill_cs_corner.F ]; then ln -s ../../../pkg/generic_advdiff/gad_som_fill_cs_corner.F gad_som_fill_cs_corner.F; fi
if [ ! -L gad_som_lim_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_som_lim_r.F gad_som_lim_r.F; fi
if [ ! -L gad_som_prep_cs_corner.F ]; then ln -s ../../../pkg/generic_advdiff/gad_som_prep_cs_corner.F gad_som_prep_cs_corner.F; fi
if [ ! -L gad_u3_adv_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_u3_adv_r.F gad_u3_adv_r.F; fi
if [ ! -L gad_u3_adv_x.F ]; then ln -s ../../../pkg/generic_advdiff/gad_u3_adv_x.F gad_u3_adv_x.F; fi
if [ ! -L gad_u3_adv_y.F ]; then ln -s ../../../pkg/generic_advdiff/gad_u3_adv_y.F gad_u3_adv_y.F; fi
if [ ! -L gad_u3c4_impl_r.F ]; then ln -s ../../../pkg/generic_advdiff/gad_u3c4_impl_r.F gad_u3c4_impl_r.F; fi
if [ ! -L gad_write_pickup.F ]; then ln -s ../../../pkg/generic_advdiff/gad_write_pickup.F gad_write_pickup.F; fi
if [ ! -L salt_fill.F ]; then ln -s ../../../pkg/generic_advdiff/salt_fill.F salt_fill.F; fi
if [ ! -L mdsio_buffertorl.F ]; then ln -s ../../../pkg/mdsio/mdsio_buffertorl.F mdsio_buffertorl.F; fi
if [ ! -L mdsio_buffertors.F ]; then ln -s ../../../pkg/mdsio/mdsio_buffertors.F mdsio_buffertors.F; fi
if [ ! -L mdsio_check4file.F ]; then ln -s ../../../pkg/mdsio/mdsio_check4file.F mdsio_check4file.F; fi
if [ ! -L mdsio_facef_read.F ]; then ln -s ../../../pkg/mdsio/mdsio_facef_read.F mdsio_facef_read.F; fi
if [ ! -L mdsio_gl.F ]; then ln -s ../../../pkg/mdsio/mdsio_gl.F mdsio_gl.F; fi
if [ ! -L mdsio_gl_slice.F ]; then ln -s ../../../pkg/mdsio/mdsio_gl_slice.F mdsio_gl_slice.F; fi
if [ ! -L mdsio_pass_r4torl.F ]; then ln -s ../../../pkg/mdsio/mdsio_pass_r4torl.F mdsio_pass_r4torl.F; fi
if [ ! -L mdsio_pass_r4tors.F ]; then ln -s ../../../pkg/mdsio/mdsio_pass_r4tors.F mdsio_pass_r4tors.F; fi
if [ ! -L mdsio_pass_r8torl.F ]; then ln -s ../../../pkg/mdsio/mdsio_pass_r8torl.F mdsio_pass_r8torl.F; fi
if [ ! -L mdsio_pass_r8tors.F ]; then ln -s ../../../pkg/mdsio/mdsio_pass_r8tors.F mdsio_pass_r8tors.F; fi
if [ ! -L mdsio_rd_rec_rl.F ]; then ln -s ../../../pkg/mdsio/mdsio_rd_rec_rl.F mdsio_rd_rec_rl.F; fi
if [ ! -L mdsio_rd_rec_rs.F ]; then ln -s ../../../pkg/mdsio/mdsio_rd_rec_rs.F mdsio_rd_rec_rs.F; fi
if [ ! -L mdsio_read_field.F ]; then ln -s ../../../pkg/mdsio/mdsio_read_field.F mdsio_read_field.F; fi
if [ ! -L mdsio_read_meta.F ]; then ln -s ../../../pkg/mdsio/mdsio_read_meta.F mdsio_read_meta.F; fi
if [ ! -L mdsio_read_section.F ]; then ln -s ../../../pkg/mdsio/mdsio_read_section.F mdsio_read_section.F; fi
if [ ! -L mdsio_read_tape.F ]; then ln -s ../../../pkg/mdsio/mdsio_read_tape.F mdsio_read_tape.F; fi
if [ ! -L mdsio_read_whalos.F ]; then ln -s ../../../pkg/mdsio/mdsio_read_whalos.F mdsio_read_whalos.F; fi
if [ ! -L mdsio_readvec_loc.F ]; then ln -s ../../../pkg/mdsio/mdsio_readvec_loc.F mdsio_readvec_loc.F; fi
if [ ! -L mdsio_rw_field.F ]; then ln -s ../../../pkg/mdsio/mdsio_rw_field.F mdsio_rw_field.F; fi
if [ ! -L mdsio_rw_slice.F ]; then ln -s ../../../pkg/mdsio/mdsio_rw_slice.F mdsio_rw_slice.F; fi
if [ ! -L mdsio_seg4torl.F ]; then ln -s ../../../pkg/mdsio/mdsio_seg4torl.F mdsio_seg4torl.F; fi
if [ ! -L mdsio_seg4tors.F ]; then ln -s ../../../pkg/mdsio/mdsio_seg4tors.F mdsio_seg4tors.F; fi
if [ ! -L mdsio_seg8torl.F ]; then ln -s ../../../pkg/mdsio/mdsio_seg8torl.F mdsio_seg8torl.F; fi
if [ ! -L mdsio_seg8tors.F ]; then ln -s ../../../pkg/mdsio/mdsio_seg8tors.F mdsio_seg8tors.F; fi
if [ ! -L mdsio_segxtorx_2d.F ]; then ln -s ../../../pkg/mdsio/mdsio_segxtorx_2d.F mdsio_segxtorx_2d.F; fi
if [ ! -L mdsio_wr_metafiles.F ]; then ln -s ../../../pkg/mdsio/mdsio_wr_metafiles.F mdsio_wr_metafiles.F; fi
if [ ! -L mdsio_wr_rec_rl.F ]; then ln -s ../../../pkg/mdsio/mdsio_wr_rec_rl.F mdsio_wr_rec_rl.F; fi
if [ ! -L mdsio_wr_rec_rs.F ]; then ln -s ../../../pkg/mdsio/mdsio_wr_rec_rs.F mdsio_wr_rec_rs.F; fi
if [ ! -L mdsio_write_field.F ]; then ln -s ../../../pkg/mdsio/mdsio_write_field.F mdsio_write_field.F; fi
if [ ! -L mdsio_write_meta.F ]; then ln -s ../../../pkg/mdsio/mdsio_write_meta.F mdsio_write_meta.F; fi
if [ ! -L mdsio_write_section.F ]; then ln -s ../../../pkg/mdsio/mdsio_write_section.F mdsio_write_section.F; fi
if [ ! -L mdsio_write_tape.F ]; then ln -s ../../../pkg/mdsio/mdsio_write_tape.F mdsio_write_tape.F; fi
if [ ! -L mdsio_write_whalos.F ]; then ln -s ../../../pkg/mdsio/mdsio_write_whalos.F mdsio_write_whalos.F; fi
if [ ! -L mdsio_writelocal.F ]; then ln -s ../../../pkg/mdsio/mdsio_writelocal.F mdsio_writelocal.F; fi
if [ ! -L mdsio_writevec_loc.F ]; then ln -s ../../../pkg/mdsio/mdsio_writevec_loc.F mdsio_writevec_loc.F; fi
if [ ! -L mom_calc_3d_strain.F ]; then ln -s ../../../pkg/mom_common/mom_calc_3d_strain.F mom_calc_3d_strain.F; fi
if [ ! -L mom_calc_absvort3.F ]; then ln -s ../../../pkg/mom_common/mom_calc_absvort3.F mom_calc_absvort3.F; fi
if [ ! -L mom_calc_hdiv.F ]; then ln -s ../../../pkg/mom_common/mom_calc_hdiv.F mom_calc_hdiv.F; fi
if [ ! -L mom_calc_hfacz.F ]; then ln -s ../../../pkg/mom_common/mom_calc_hfacz.F mom_calc_hfacz.F; fi
if [ ! -L mom_calc_ke.F ]; then ln -s ../../../pkg/mom_common/mom_calc_ke.F mom_calc_ke.F; fi
if [ ! -L mom_calc_relvort3.F ]; then ln -s ../../../pkg/mom_common/mom_calc_relvort3.F mom_calc_relvort3.F; fi
if [ ! -L mom_calc_smag_3d.F ]; then ln -s ../../../pkg/mom_common/mom_calc_smag_3d.F mom_calc_smag_3d.F; fi
if [ ! -L mom_calc_strain.F ]; then ln -s ../../../pkg/mom_common/mom_calc_strain.F mom_calc_strain.F; fi
if [ ! -L mom_calc_tension.F ]; then ln -s ../../../pkg/mom_common/mom_calc_tension.F mom_calc_tension.F; fi
if [ ! -L mom_calc_visc.F ]; then ln -s ../../../pkg/mom_common/mom_calc_visc.F mom_calc_visc.F; fi
if [ ! -L mom_diagnostics_init.F ]; then ln -s ../../../pkg/mom_common/mom_diagnostics_init.F mom_diagnostics_init.F; fi
if [ ! -L mom_hdissip.F ]; then ln -s ../../../pkg/mom_common/mom_hdissip.F mom_hdissip.F; fi
if [ ! -L mom_init_fixed.F ]; then ln -s ../../../pkg/mom_common/mom_init_fixed.F mom_init_fixed.F; fi
if [ ! -L mom_quasihydrostatic.F ]; then ln -s ../../../pkg/mom_common/mom_quasihydrostatic.F mom_quasihydrostatic.F; fi
if [ ! -L mom_u_botdrag_coeff.F ]; then ln -s ../../../pkg/mom_common/mom_u_botdrag_coeff.F mom_u_botdrag_coeff.F; fi
if [ ! -L mom_u_coriolis_nh.F ]; then ln -s ../../../pkg/mom_common/mom_u_coriolis_nh.F mom_u_coriolis_nh.F; fi
if [ ! -L mom_u_implicit_r.F ]; then ln -s ../../../pkg/mom_common/mom_u_implicit_r.F mom_u_implicit_r.F; fi
if [ ! -L mom_u_metric_nh.F ]; then ln -s ../../../pkg/mom_common/mom_u_metric_nh.F mom_u_metric_nh.F; fi
if [ ! -L mom_u_rviscflux.F ]; then ln -s ../../../pkg/mom_common/mom_u_rviscflux.F mom_u_rviscflux.F; fi
if [ ! -L mom_u_sidedrag.F ]; then ln -s ../../../pkg/mom_common/mom_u_sidedrag.F mom_u_sidedrag.F; fi
if [ ! -L mom_uv_smag_3d.F ]; then ln -s ../../../pkg/mom_common/mom_uv_smag_3d.F mom_uv_smag_3d.F; fi
if [ ! -L mom_v_botdrag_coeff.F ]; then ln -s ../../../pkg/mom_common/mom_v_botdrag_coeff.F mom_v_botdrag_coeff.F; fi
if [ ! -L mom_v_coriolis_nh.F ]; then ln -s ../../../pkg/mom_common/mom_v_coriolis_nh.F mom_v_coriolis_nh.F; fi
if [ ! -L mom_v_implicit_r.F ]; then ln -s ../../../pkg/mom_common/mom_v_implicit_r.F mom_v_implicit_r.F; fi
if [ ! -L mom_v_metric_nh.F ]; then ln -s ../../../pkg/mom_common/mom_v_metric_nh.F mom_v_metric_nh.F; fi
if [ ! -L mom_v_rviscflux.F ]; then ln -s ../../../pkg/mom_common/mom_v_rviscflux.F mom_v_rviscflux.F; fi
if [ ! -L mom_v_sidedrag.F ]; then ln -s ../../../pkg/mom_common/mom_v_sidedrag.F mom_v_sidedrag.F; fi
if [ ! -L mom_visc_qgl_limit.F ]; then ln -s ../../../pkg/mom_common/mom_visc_qgl_limit.F mom_visc_qgl_limit.F; fi
if [ ! -L mom_visc_qgl_stretch.F ]; then ln -s ../../../pkg/mom_common/mom_visc_qgl_stretch.F mom_visc_qgl_stretch.F; fi
if [ ! -L mom_w_coriolis_nh.F ]; then ln -s ../../../pkg/mom_common/mom_w_coriolis_nh.F mom_w_coriolis_nh.F; fi
if [ ! -L mom_w_metric_nh.F ]; then ln -s ../../../pkg/mom_common/mom_w_metric_nh.F mom_w_metric_nh.F; fi
if [ ! -L mom_w_sidedrag.F ]; then ln -s ../../../pkg/mom_common/mom_w_sidedrag.F mom_w_sidedrag.F; fi
if [ ! -L mom_w_smag_3d.F ]; then ln -s ../../../pkg/mom_common/mom_w_smag_3d.F mom_w_smag_3d.F; fi
if [ ! -L mom_calc_rtrans.F ]; then ln -s ../../../pkg/mom_fluxform/mom_calc_rtrans.F mom_calc_rtrans.F; fi
if [ ! -L mom_fluxform.F ]; then ln -s ../../../pkg/mom_fluxform/mom_fluxform.F mom_fluxform.F; fi
if [ ! -L mom_u_adv_uu.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_adv_uu.F mom_u_adv_uu.F; fi
if [ ! -L mom_u_adv_vu.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_adv_vu.F mom_u_adv_vu.F; fi
if [ ! -L mom_u_adv_wu.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_adv_wu.F mom_u_adv_wu.F; fi
if [ ! -L mom_u_coriolis.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_coriolis.F mom_u_coriolis.F; fi
if [ ! -L mom_u_del2u.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_del2u.F mom_u_del2u.F; fi
if [ ! -L mom_u_metric_cylinder.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_metric_cylinder.F mom_u_metric_cylinder.F; fi
if [ ! -L mom_u_metric_sphere.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_metric_sphere.F mom_u_metric_sphere.F; fi
if [ ! -L mom_u_xviscflux.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_xviscflux.F mom_u_xviscflux.F; fi
if [ ! -L mom_u_yviscflux.F ]; then ln -s ../../../pkg/mom_fluxform/mom_u_yviscflux.F mom_u_yviscflux.F; fi
if [ ! -L mom_uv_boundary.F ]; then ln -s ../../../pkg/mom_fluxform/mom_uv_boundary.F mom_uv_boundary.F; fi
if [ ! -L mom_v_adv_uv.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_adv_uv.F mom_v_adv_uv.F; fi
if [ ! -L mom_v_adv_vv.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_adv_vv.F mom_v_adv_vv.F; fi
if [ ! -L mom_v_adv_wv.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_adv_wv.F mom_v_adv_wv.F; fi
if [ ! -L mom_v_coriolis.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_coriolis.F mom_v_coriolis.F; fi
if [ ! -L mom_v_del2v.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_del2v.F mom_v_del2v.F; fi
if [ ! -L mom_v_metric_cylinder.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_metric_cylinder.F mom_v_metric_cylinder.F; fi
if [ ! -L mom_v_metric_sphere.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_metric_sphere.F mom_v_metric_sphere.F; fi
if [ ! -L mom_v_xviscflux.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_xviscflux.F mom_v_xviscflux.F; fi
if [ ! -L mom_v_yviscflux.F ]; then ln -s ../../../pkg/mom_fluxform/mom_v_yviscflux.F mom_v_yviscflux.F; fi
if [ ! -L mom_vecinv.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vecinv.F mom_vecinv.F; fi
if [ ! -L mom_vi_coriolis.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_coriolis.F mom_vi_coriolis.F; fi
if [ ! -L mom_vi_del2uv.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_del2uv.F mom_vi_del2uv.F; fi
if [ ! -L mom_vi_hdissip.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_hdissip.F mom_vi_hdissip.F; fi
if [ ! -L mom_vi_u_coriolis.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_u_coriolis.F mom_vi_u_coriolis.F; fi
if [ ! -L mom_vi_u_coriolis_c4.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_u_coriolis_c4.F mom_vi_u_coriolis_c4.F; fi
if [ ! -L mom_vi_u_grad_ke.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_u_grad_ke.F mom_vi_u_grad_ke.F; fi
if [ ! -L mom_vi_u_vertshear.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_u_vertshear.F mom_vi_u_vertshear.F; fi
if [ ! -L mom_vi_v_coriolis.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_v_coriolis.F mom_vi_v_coriolis.F; fi
if [ ! -L mom_vi_v_coriolis_c4.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_v_coriolis_c4.F mom_vi_v_coriolis_c4.F; fi
if [ ! -L mom_vi_v_grad_ke.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_v_grad_ke.F mom_vi_v_grad_ke.F; fi
if [ ! -L mom_vi_v_vertshear.F ]; then ln -s ../../../pkg/mom_vecinv/mom_vi_v_vertshear.F mom_vi_v_vertshear.F; fi
if [ ! -L mon_advcfl.F ]; then ln -s ../../../pkg/monitor/mon_advcfl.F mon_advcfl.F; fi
if [ ! -L mon_advcflw.F ]; then ln -s ../../../pkg/monitor/mon_advcflw.F mon_advcflw.F; fi
if [ ! -L mon_advcflw2.F ]; then ln -s ../../../pkg/monitor/mon_advcflw2.F mon_advcflw2.F; fi
if [ ! -L mon_calc_advcfl.F ]; then ln -s ../../../pkg/monitor/mon_calc_advcfl.F mon_calc_advcfl.F; fi
if [ ! -L mon_calc_stats_rl.F ]; then ln -s ../../../pkg/monitor/mon_calc_stats_rl.F mon_calc_stats_rl.F; fi
if [ ! -L mon_calc_stats_rs.F ]; then ln -s ../../../pkg/monitor/mon_calc_stats_rs.F mon_calc_stats_rs.F; fi
if [ ! -L mon_init.F ]; then ln -s ../../../pkg/monitor/mon_init.F mon_init.F; fi
if [ ! -L mon_ke.F ]; then ln -s ../../../pkg/monitor/mon_ke.F mon_ke.F; fi
if [ ! -L mon_out.F ]; then ln -s ../../../pkg/monitor/mon_out.F mon_out.F; fi
if [ ! -L mon_printstats_rl.F ]; then ln -s ../../../pkg/monitor/mon_printstats_rl.F mon_printstats_rl.F; fi
if [ ! -L mon_printstats_rs.F ]; then ln -s ../../../pkg/monitor/mon_printstats_rs.F mon_printstats_rs.F; fi
if [ ! -L mon_set_iounit.F ]; then ln -s ../../../pkg/monitor/mon_set_iounit.F mon_set_iounit.F; fi
if [ ! -L mon_set_pref.F ]; then ln -s ../../../pkg/monitor/mon_set_pref.F mon_set_pref.F; fi
if [ ! -L mon_solution.F ]; then ln -s ../../../pkg/monitor/mon_solution.F mon_solution.F; fi
if [ ! -L mon_stats_latbnd_rl.F ]; then ln -s ../../../pkg/monitor/mon_stats_latbnd_rl.F mon_stats_latbnd_rl.F; fi
if [ ! -L mon_stats_rl.F ]; then ln -s ../../../pkg/monitor/mon_stats_rl.F mon_stats_rl.F; fi
if [ ! -L mon_stats_rs.F ]; then ln -s ../../../pkg/monitor/mon_stats_rs.F mon_stats_rs.F; fi
if [ ! -L mon_surfcor.F ]; then ln -s ../../../pkg/monitor/mon_surfcor.F mon_surfcor.F; fi
if [ ! -L mon_vort3.F ]; then ln -s ../../../pkg/monitor/mon_vort3.F mon_vort3.F; fi
if [ ! -L mon_writestats_rl.F ]; then ln -s ../../../pkg/monitor/mon_writestats_rl.F mon_writestats_rl.F; fi
if [ ! -L mon_writestats_rs.F ]; then ln -s ../../../pkg/monitor/mon_writestats_rs.F mon_writestats_rs.F; fi
if [ ! -L monitor.F ]; then ln -s ../../../pkg/monitor/monitor.F monitor.F; fi
if [ ! -L monitor_ad.F ]; then ln -s ../../../pkg/monitor/monitor_ad.F monitor_ad.F; fi
if [ ! -L monitor_g.F ]; then ln -s ../../../pkg/monitor/monitor_g.F monitor_g.F; fi
if [ ! -L get_write_global_fld.F ]; then ln -s ../../../pkg/rw/get_write_global_fld.F get_write_global_fld.F; fi
if [ ! -L read_fld_xy_rl.F ]; then ln -s ../../../pkg/rw/read_fld_xy_rl.F read_fld_xy_rl.F; fi
if [ ! -L read_fld_xy_rs.F ]; then ln -s ../../../pkg/rw/read_fld_xy_rs.F read_fld_xy_rs.F; fi
if [ ! -L read_fld_xyz_rl.F ]; then ln -s ../../../pkg/rw/read_fld_xyz_rl.F read_fld_xyz_rl.F; fi
if [ ! -L read_fld_xyz_rs.F ]; then ln -s ../../../pkg/rw/read_fld_xyz_rs.F read_fld_xyz_rs.F; fi
if [ ! -L read_glvec_rl.F ]; then ln -s ../../../pkg/rw/read_glvec_rl.F read_glvec_rl.F; fi
if [ ! -L read_glvec_rs.F ]; then ln -s ../../../pkg/rw/read_glvec_rs.F read_glvec_rs.F; fi
if [ ! -L read_mflds.F ]; then ln -s ../../../pkg/rw/read_mflds.F read_mflds.F; fi
if [ ! -L read_rec.F ]; then ln -s ../../../pkg/rw/read_rec.F read_rec.F; fi
if [ ! -L rw_get_suffix.F ]; then ln -s ../../../pkg/rw/rw_get_suffix.F rw_get_suffix.F; fi
if [ ! -L set_write_global_fld.F ]; then ln -s ../../../pkg/rw/set_write_global_fld.F set_write_global_fld.F; fi
if [ ! -L write_fld_3d_rl.F ]; then ln -s ../../../pkg/rw/write_fld_3d_rl.F write_fld_3d_rl.F; fi
if [ ! -L write_fld_3d_rs.F ]; then ln -s ../../../pkg/rw/write_fld_3d_rs.F write_fld_3d_rs.F; fi
if [ ! -L write_fld_s3d_rl.F ]; then ln -s ../../../pkg/rw/write_fld_s3d_rl.F write_fld_s3d_rl.F; fi
if [ ! -L write_fld_s3d_rs.F ]; then ln -s ../../../pkg/rw/write_fld_s3d_rs.F write_fld_s3d_rs.F; fi
if [ ! -L write_fld_xy_rl.F ]; then ln -s ../../../pkg/rw/write_fld_xy_rl.F write_fld_xy_rl.F; fi
if [ ! -L write_fld_xy_rs.F ]; then ln -s ../../../pkg/rw/write_fld_xy_rs.F write_fld_xy_rs.F; fi
if [ ! -L write_fld_xyz_rl.F ]; then ln -s ../../../pkg/rw/write_fld_xyz_rl.F write_fld_xyz_rl.F; fi
if [ ! -L write_fld_xyz_rs.F ]; then ln -s ../../../pkg/rw/write_fld_xyz_rs.F write_fld_xyz_rs.F; fi
if [ ! -L write_glvec_rl.F ]; then ln -s ../../../pkg/rw/write_glvec_rl.F write_glvec_rl.F; fi
if [ ! -L write_glvec_rs.F ]; then ln -s ../../../pkg/rw/write_glvec_rs.F write_glvec_rs.F; fi
if [ ! -L write_local_rl.F ]; then ln -s ../../../pkg/rw/write_local_rl.F write_local_rl.F; fi
if [ ! -L write_local_rs.F ]; then ln -s ../../../pkg/rw/write_local_rs.F write_local_rs.F; fi
if [ ! -L write_rec.F ]; then ln -s ../../../pkg/rw/write_rec.F write_rec.F; fi
if [ ! -L all_proc_die.F ]; then ln -s ../../../eesupp/src/all_proc_die.F all_proc_die.F; fi
if [ ! -L bar2.F ]; then ln -s ../../../eesupp/src/bar2.F bar2.F; fi
if [ ! -L bar_check.F ]; then ln -s ../../../eesupp/src/bar_check.F bar_check.F; fi
if [ ! -L barrier.F ]; then ln -s ../../../eesupp/src/barrier.F barrier.F; fi
if [ ! -L check_threads.F ]; then ln -s ../../../eesupp/src/check_threads.F check_threads.F; fi
if [ ! -L comm_stats.F ]; then ln -s ../../../eesupp/src/comm_stats.F comm_stats.F; fi
if [ ! -L cumulsum_z_tile.F ]; then ln -s ../../../eesupp/src/cumulsum_z_tile.F cumulsum_z_tile.F; fi
if [ ! -L diff_phase_multiple.F ]; then ln -s ../../../eesupp/src/diff_phase_multiple.F diff_phase_multiple.F; fi
if [ ! -L different_multiple.F ]; then ln -s ../../../eesupp/src/different_multiple.F different_multiple.F; fi
if [ ! -L eeboot.F ]; then ln -s ../../../eesupp/src/eeboot.F eeboot.F; fi
if [ ! -L eeboot_minimal.F ]; then ln -s ../../../eesupp/src/eeboot_minimal.F eeboot_minimal.F; fi
if [ ! -L eedata_example.F ]; then ln -s ../../../eesupp/src/eedata_example.F eedata_example.F; fi
if [ ! -L eedie.F ]; then ln -s ../../../eesupp/src/eedie.F eedie.F; fi
if [ ! -L eeintro_msg.F ]; then ln -s ../../../eesupp/src/eeintro_msg.F eeintro_msg.F; fi
if [ ! -L eeset_parms.F ]; then ln -s ../../../eesupp/src/eeset_parms.F eeset_parms.F; fi
if [ ! -L eewrite_eeenv.F ]; then ln -s ../../../eesupp/src/eewrite_eeenv.F eewrite_eeenv.F; fi
if [ ! -L exch0_r4.F ]; then ln -s ../../../eesupp/src/exch0_r4.F exch0_r4.F; fi
if [ ! -L exch0_r8.F ]; then ln -s ../../../eesupp/src/exch0_r8.F exch0_r8.F; fi
if [ ! -L exch0_rl.F ]; then ln -s ../../../eesupp/src/exch0_rl.F exch0_rl.F; fi
if [ ! -L exch0_rs.F ]; then ln -s ../../../eesupp/src/exch0_rs.F exch0_rs.F; fi
if [ ! -L exch1_bg_r4_cube.F ]; then ln -s ../../../eesupp/src/exch1_bg_r4_cube.F exch1_bg_r4_cube.F; fi
if [ ! -L exch1_bg_r8_cube.F ]; then ln -s ../../../eesupp/src/exch1_bg_r8_cube.F exch1_bg_r8_cube.F; fi
if [ ! -L exch1_bg_rl_cube.F ]; then ln -s ../../../eesupp/src/exch1_bg_rl_cube.F exch1_bg_rl_cube.F; fi
if [ ! -L exch1_bg_rs_cube.F ]; then ln -s ../../../eesupp/src/exch1_bg_rs_cube.F exch1_bg_rs_cube.F; fi
if [ ! -L exch1_r4.F ]; then ln -s ../../../eesupp/src/exch1_r4.F exch1_r4.F; fi
if [ ! -L exch1_r4_cube.F ]; then ln -s ../../../eesupp/src/exch1_r4_cube.F exch1_r4_cube.F; fi
if [ ! -L exch1_r8.F ]; then ln -s ../../../eesupp/src/exch1_r8.F exch1_r8.F; fi
if [ ! -L exch1_r8_cube.F ]; then ln -s ../../../eesupp/src/exch1_r8_cube.F exch1_r8_cube.F; fi
if [ ! -L exch1_rl.F ]; then ln -s ../../../eesupp/src/exch1_rl.F exch1_rl.F; fi
if [ ! -L exch1_rl_ad.F ]; then ln -s ../../../eesupp/src/exch1_rl_ad.F exch1_rl_ad.F; fi
if [ ! -L exch1_rl_cube.F ]; then ln -s ../../../eesupp/src/exch1_rl_cube.F exch1_rl_cube.F; fi
if [ ! -L exch1_rl_cube_ad.F ]; then ln -s ../../../eesupp/src/exch1_rl_cube_ad.F exch1_rl_cube_ad.F; fi
if [ ! -L exch1_rs.F ]; then ln -s ../../../eesupp/src/exch1_rs.F exch1_rs.F; fi
if [ ! -L exch1_rs_ad.F ]; then ln -s ../../../eesupp/src/exch1_rs_ad.F exch1_rs_ad.F; fi
if [ ! -L exch1_rs_cube.F ]; then ln -s ../../../eesupp/src/exch1_rs_cube.F exch1_rs_cube.F; fi
if [ ! -L exch1_rs_cube_ad.F ]; then ln -s ../../../eesupp/src/exch1_rs_cube_ad.F exch1_rs_cube_ad.F; fi
if [ ! -L exch1_uv_r4_cube.F ]; then ln -s ../../../eesupp/src/exch1_uv_r4_cube.F exch1_uv_r4_cube.F; fi
if [ ! -L exch1_uv_r8_cube.F ]; then ln -s ../../../eesupp/src/exch1_uv_r8_cube.F exch1_uv_r8_cube.F; fi
if [ ! -L exch1_uv_rl_cube.F ]; then ln -s ../../../eesupp/src/exch1_uv_rl_cube.F exch1_uv_rl_cube.F; fi
if [ ! -L exch1_uv_rs_cube.F ]; then ln -s ../../../eesupp/src/exch1_uv_rs_cube.F exch1_uv_rs_cube.F; fi
if [ ! -L exch1_z_r4_cube.F ]; then ln -s ../../../eesupp/src/exch1_z_r4_cube.F exch1_z_r4_cube.F; fi
if [ ! -L exch1_z_r8_cube.F ]; then ln -s ../../../eesupp/src/exch1_z_r8_cube.F exch1_z_r8_cube.F; fi
if [ ! -L exch1_z_rl_cube.F ]; then ln -s ../../../eesupp/src/exch1_z_rl_cube.F exch1_z_rl_cube.F; fi
if [ ! -L exch1_z_rs_cube.F ]; then ln -s ../../../eesupp/src/exch1_z_rs_cube.F exch1_z_rs_cube.F; fi
if [ ! -L exch_3d_r4.F ]; then ln -s ../../../eesupp/src/exch_3d_r4.F exch_3d_r4.F; fi
if [ ! -L exch_3d_r8.F ]; then ln -s ../../../eesupp/src/exch_3d_r8.F exch_3d_r8.F; fi
if [ ! -L exch_3d_rl.F ]; then ln -s ../../../eesupp/src/exch_3d_rl.F exch_3d_rl.F; fi
if [ ! -L exch_3d_rs.F ]; then ln -s ../../../eesupp/src/exch_3d_rs.F exch_3d_rs.F; fi
if [ ! -L exch_cycle_ebl.F ]; then ln -s ../../../eesupp/src/exch_cycle_ebl.F exch_cycle_ebl.F; fi
if [ ! -L exch_init.F ]; then ln -s ../../../eesupp/src/exch_init.F exch_init.F; fi
if [ ! -L exch_r4_recv_get_x.F ]; then ln -s ../../../eesupp/src/exch_r4_recv_get_x.F exch_r4_recv_get_x.F; fi
if [ ! -L exch_r4_recv_get_y.F ]; then ln -s ../../../eesupp/src/exch_r4_recv_get_y.F exch_r4_recv_get_y.F; fi
if [ ! -L exch_r4_send_put_x.F ]; then ln -s ../../../eesupp/src/exch_r4_send_put_x.F exch_r4_send_put_x.F; fi
if [ ! -L exch_r4_send_put_y.F ]; then ln -s ../../../eesupp/src/exch_r4_send_put_y.F exch_r4_send_put_y.F; fi
if [ ! -L exch_r8_recv_get_x.F ]; then ln -s ../../../eesupp/src/exch_r8_recv_get_x.F exch_r8_recv_get_x.F; fi
if [ ! -L exch_r8_recv_get_y.F ]; then ln -s ../../../eesupp/src/exch_r8_recv_get_y.F exch_r8_recv_get_y.F; fi
if [ ! -L exch_r8_send_put_x.F ]; then ln -s ../../../eesupp/src/exch_r8_send_put_x.F exch_r8_send_put_x.F; fi
if [ ! -L exch_r8_send_put_y.F ]; then ln -s ../../../eesupp/src/exch_r8_send_put_y.F exch_r8_send_put_y.F; fi
if [ ! -L exch_rl_recv_get_x.F ]; then ln -s ../../../eesupp/src/exch_rl_recv_get_x.F exch_rl_recv_get_x.F; fi
if [ ! -L exch_rl_recv_get_y.F ]; then ln -s ../../../eesupp/src/exch_rl_recv_get_y.F exch_rl_recv_get_y.F; fi
if [ ! -L exch_rl_send_put_x.F ]; then ln -s ../../../eesupp/src/exch_rl_send_put_x.F exch_rl_send_put_x.F; fi
if [ ! -L exch_rl_send_put_y.F ]; then ln -s ../../../eesupp/src/exch_rl_send_put_y.F exch_rl_send_put_y.F; fi
if [ ! -L exch_rs_recv_get_x.F ]; then ln -s ../../../eesupp/src/exch_rs_recv_get_x.F exch_rs_recv_get_x.F; fi
if [ ! -L exch_rs_recv_get_y.F ]; then ln -s ../../../eesupp/src/exch_rs_recv_get_y.F exch_rs_recv_get_y.F; fi
if [ ! -L exch_rs_send_put_x.F ]; then ln -s ../../../eesupp/src/exch_rs_send_put_x.F exch_rs_send_put_x.F; fi
if [ ! -L exch_rs_send_put_y.F ]; then ln -s ../../../eesupp/src/exch_rs_send_put_y.F exch_rs_send_put_y.F; fi
if [ ! -L exch_s3d_r4.F ]; then ln -s ../../../eesupp/src/exch_s3d_r4.F exch_s3d_r4.F; fi
if [ ! -L exch_s3d_r8.F ]; then ln -s ../../../eesupp/src/exch_s3d_r8.F exch_s3d_r8.F; fi
if [ ! -L exch_s3d_rl.F ]; then ln -s ../../../eesupp/src/exch_s3d_rl.F exch_s3d_rl.F; fi
if [ ! -L exch_s3d_rs.F ]; then ln -s ../../../eesupp/src/exch_s3d_rs.F exch_s3d_rs.F; fi
if [ ! -L exch_sm_3d_r4.F ]; then ln -s ../../../eesupp/src/exch_sm_3d_r4.F exch_sm_3d_r4.F; fi
if [ ! -L exch_sm_3d_r8.F ]; then ln -s ../../../eesupp/src/exch_sm_3d_r8.F exch_sm_3d_r8.F; fi
if [ ! -L exch_sm_3d_rl.F ]; then ln -s ../../../eesupp/src/exch_sm_3d_rl.F exch_sm_3d_rl.F; fi
if [ ! -L exch_sm_3d_rs.F ]; then ln -s ../../../eesupp/src/exch_sm_3d_rs.F exch_sm_3d_rs.F; fi
if [ ! -L exch_uv_3d_r4.F ]; then ln -s ../../../eesupp/src/exch_uv_3d_r4.F exch_uv_3d_r4.F; fi
if [ ! -L exch_uv_3d_r8.F ]; then ln -s ../../../eesupp/src/exch_uv_3d_r8.F exch_uv_3d_r8.F; fi
if [ ! -L exch_uv_3d_rl.F ]; then ln -s ../../../eesupp/src/exch_uv_3d_rl.F exch_uv_3d_rl.F; fi
if [ ! -L exch_uv_3d_rs.F ]; then ln -s ../../../eesupp/src/exch_uv_3d_rs.F exch_uv_3d_rs.F; fi
if [ ! -L exch_uv_agrid_3d_r4.F ]; then ln -s ../../../eesupp/src/exch_uv_agrid_3d_r4.F exch_uv_agrid_3d_r4.F; fi
if [ ! -L exch_uv_agrid_3d_r8.F ]; then ln -s ../../../eesupp/src/exch_uv_agrid_3d_r8.F exch_uv_agrid_3d_r8.F; fi
if [ ! -L exch_uv_agrid_3d_rl.F ]; then ln -s ../../../eesupp/src/exch_uv_agrid_3d_rl.F exch_uv_agrid_3d_rl.F; fi
if [ ! -L exch_uv_agrid_3d_rs.F ]; then ln -s ../../../eesupp/src/exch_uv_agrid_3d_rs.F exch_uv_agrid_3d_rs.F; fi
if [ ! -L exch_uv_bgrid_3d_r4.F ]; then ln -s ../../../eesupp/src/exch_uv_bgrid_3d_r4.F exch_uv_bgrid_3d_r4.F; fi
if [ ! -L exch_uv_bgrid_3d_r8.F ]; then ln -s ../../../eesupp/src/exch_uv_bgrid_3d_r8.F exch_uv_bgrid_3d_r8.F; fi
if [ ! -L exch_uv_bgrid_3d_rl.F ]; then ln -s ../../../eesupp/src/exch_uv_bgrid_3d_rl.F exch_uv_bgrid_3d_rl.F; fi
if [ ! -L exch_uv_bgrid_3d_rs.F ]; then ln -s ../../../eesupp/src/exch_uv_bgrid_3d_rs.F exch_uv_bgrid_3d_rs.F; fi
if [ ! -L exch_uv_dgrid_3d_r4.F ]; then ln -s ../../../eesupp/src/exch_uv_dgrid_3d_r4.F exch_uv_dgrid_3d_r4.F; fi
if [ ! -L exch_uv_dgrid_3d_r8.F ]; then ln -s ../../../eesupp/src/exch_uv_dgrid_3d_r8.F exch_uv_dgrid_3d_r8.F; fi
if [ ! -L exch_uv_dgrid_3d_rl.F ]; then ln -s ../../../eesupp/src/exch_uv_dgrid_3d_rl.F exch_uv_dgrid_3d_rl.F; fi
if [ ! -L exch_uv_dgrid_3d_rs.F ]; then ln -s ../../../eesupp/src/exch_uv_dgrid_3d_rs.F exch_uv_dgrid_3d_rs.F; fi
if [ ! -L exch_uv_xy_r4.F ]; then ln -s ../../../eesupp/src/exch_uv_xy_r4.F exch_uv_xy_r4.F; fi
if [ ! -L exch_uv_xy_r8.F ]; then ln -s ../../../eesupp/src/exch_uv_xy_r8.F exch_uv_xy_r8.F; fi
if [ ! -L exch_uv_xy_rl.F ]; then ln -s ../../../eesupp/src/exch_uv_xy_rl.F exch_uv_xy_rl.F; fi
if [ ! -L exch_uv_xy_rs.F ]; then ln -s ../../../eesupp/src/exch_uv_xy_rs.F exch_uv_xy_rs.F; fi
if [ ! -L exch_uv_xyz_r4.F ]; then ln -s ../../../eesupp/src/exch_uv_xyz_r4.F exch_uv_xyz_r4.F; fi
if [ ! -L exch_uv_xyz_r8.F ]; then ln -s ../../../eesupp/src/exch_uv_xyz_r8.F exch_uv_xyz_r8.F; fi
if [ ! -L exch_uv_xyz_rl.F ]; then ln -s ../../../eesupp/src/exch_uv_xyz_rl.F exch_uv_xyz_rl.F; fi
if [ ! -L exch_uv_xyz_rs.F ]; then ln -s ../../../eesupp/src/exch_uv_xyz_rs.F exch_uv_xyz_rs.F; fi
if [ ! -L exch_xy_r4.F ]; then ln -s ../../../eesupp/src/exch_xy_r4.F exch_xy_r4.F; fi
if [ ! -L exch_xy_r8.F ]; then ln -s ../../../eesupp/src/exch_xy_r8.F exch_xy_r8.F; fi
if [ ! -L exch_xy_rl.F ]; then ln -s ../../../eesupp/src/exch_xy_rl.F exch_xy_rl.F; fi
if [ ! -L exch_xy_rs.F ]; then ln -s ../../../eesupp/src/exch_xy_rs.F exch_xy_rs.F; fi
if [ ! -L exch_xyz_r4.F ]; then ln -s ../../../eesupp/src/exch_xyz_r4.F exch_xyz_r4.F; fi
if [ ! -L exch_xyz_r8.F ]; then ln -s ../../../eesupp/src/exch_xyz_r8.F exch_xyz_r8.F; fi
if [ ! -L exch_xyz_rl.F ]; then ln -s ../../../eesupp/src/exch_xyz_rl.F exch_xyz_rl.F; fi
if [ ! -L exch_xyz_rs.F ]; then ln -s ../../../eesupp/src/exch_xyz_rs.F exch_xyz_rs.F; fi
if [ ! -L exch_z_3d_r4.F ]; then ln -s ../../../eesupp/src/exch_z_3d_r4.F exch_z_3d_r4.F; fi
if [ ! -L exch_z_3d_r8.F ]; then ln -s ../../../eesupp/src/exch_z_3d_r8.F exch_z_3d_r8.F; fi
if [ ! -L exch_z_3d_rl.F ]; then ln -s ../../../eesupp/src/exch_z_3d_rl.F exch_z_3d_rl.F; fi
if [ ! -L exch_z_3d_rs.F ]; then ln -s ../../../eesupp/src/exch_z_3d_rs.F exch_z_3d_rs.F; fi
if [ ! -L fill_cs_corner_ag_rl.F ]; then ln -s ../../../eesupp/src/fill_cs_corner_ag_rl.F fill_cs_corner_ag_rl.F; fi
if [ ! -L fill_cs_corner_tr_rl.F ]; then ln -s ../../../eesupp/src/fill_cs_corner_tr_rl.F fill_cs_corner_tr_rl.F; fi
if [ ! -L fill_cs_corner_uv_rl.F ]; then ln -s ../../../eesupp/src/fill_cs_corner_uv_rl.F fill_cs_corner_uv_rl.F; fi
if [ ! -L fill_cs_corner_uv_rs.F ]; then ln -s ../../../eesupp/src/fill_cs_corner_uv_rs.F fill_cs_corner_uv_rs.F; fi
if [ ! -L fool_the_compiler.F ]; then ln -s ../../../eesupp/src/fool_the_compiler.F fool_the_compiler.F; fi
if [ ! -L gather_2d_r4.F ]; then ln -s ../../../eesupp/src/gather_2d_r4.F gather_2d_r4.F; fi
if [ ! -L gather_2d_r8.F ]; then ln -s ../../../eesupp/src/gather_2d_r8.F gather_2d_r8.F; fi
if [ ! -L gather_2d_wh_r4.F ]; then ln -s ../../../eesupp/src/gather_2d_wh_r4.F gather_2d_wh_r4.F; fi
if [ ! -L gather_2d_wh_r8.F ]; then ln -s ../../../eesupp/src/gather_2d_wh_r8.F gather_2d_wh_r8.F; fi
if [ ! -L gather_vec_r4.F ]; then ln -s ../../../eesupp/src/gather_vec_r4.F gather_vec_r4.F; fi
if [ ! -L gather_vec_r8.F ]; then ln -s ../../../eesupp/src/gather_vec_r8.F gather_vec_r8.F; fi
if [ ! -L gather_xz.F ]; then ln -s ../../../eesupp/src/gather_xz.F gather_xz.F; fi
if [ ! -L gather_yz.F ]; then ln -s ../../../eesupp/src/gather_yz.F gather_yz.F; fi
if [ ! -L get_periodic_interval.F ]; then ln -s ../../../eesupp/src/get_periodic_interval.F get_periodic_interval.F; fi
if [ ! -L global_max.F ]; then ln -s ../../../eesupp/src/global_max.F global_max.F; fi
if [ ! -L global_sum.F ]; then ln -s ../../../eesupp/src/global_sum.F global_sum.F; fi
if [ ! -L global_sum_singlecpu.F ]; then ln -s ../../../eesupp/src/global_sum_singlecpu.F global_sum_singlecpu.F; fi
if [ ! -L global_sum_tile.F ]; then ln -s ../../../eesupp/src/global_sum_tile.F global_sum_tile.F; fi
if [ ! -L global_vec_sum.F ]; then ln -s ../../../eesupp/src/global_vec_sum.F global_vec_sum.F; fi
if [ ! -L gsum.F ]; then ln -s ../../../eesupp/src/gsum.F gsum.F; fi
if [ ! -L ini_communication_patterns.F ]; then ln -s ../../../eesupp/src/ini_communication_patterns.F ini_communication_patterns.F; fi
if [ ! -L ini_procs.F ]; then ln -s ../../../eesupp/src/ini_procs.F ini_procs.F; fi
if [ ! -L ini_threading_environment.F ]; then ln -s ../../../eesupp/src/ini_threading_environment.F ini_threading_environment.F; fi
if [ ! -L lef_zero.F ]; then ln -s ../../../eesupp/src/lef_zero.F lef_zero.F; fi
if [ ! -L main.F ]; then ln -s ../../../eesupp/src/main.F main.F; fi
if [ ! -L master_cpu_io.F ]; then ln -s ../../../eesupp/src/master_cpu_io.F master_cpu_io.F; fi
if [ ! -L master_cpu_thread.F ]; then ln -s ../../../eesupp/src/master_cpu_thread.F master_cpu_thread.F; fi
if [ ! -L mds_byteswapi4.F ]; then ln -s ../../../eesupp/src/mds_byteswapi4.F mds_byteswapi4.F; fi
if [ ! -L mds_byteswapr4.F ]; then ln -s ../../../eesupp/src/mds_byteswapr4.F mds_byteswapr4.F; fi
if [ ! -L mds_byteswapr8.F ]; then ln -s ../../../eesupp/src/mds_byteswapr8.F mds_byteswapr8.F; fi
if [ ! -L mds_flush.F ]; then ln -s ../../../eesupp/src/mds_flush.F mds_flush.F; fi
if [ ! -L mds_reclen.F ]; then ln -s ../../../eesupp/src/mds_reclen.F mds_reclen.F; fi
if [ ! -L mdsfindunit.F ]; then ln -s ../../../eesupp/src/mdsfindunit.F mdsfindunit.F; fi
if [ ! -L memsync.F ]; then ln -s ../../../eesupp/src/memsync.F memsync.F; fi
if [ ! -L nml_change_syntax.F ]; then ln -s ../../../eesupp/src/nml_change_syntax.F nml_change_syntax.F; fi
if [ ! -L nml_set_terminator.F ]; then ln -s ../../../eesupp/src/nml_set_terminator.F nml_set_terminator.F; fi
if [ ! -L open_copy_data_file.F ]; then ln -s ../../../eesupp/src/open_copy_data_file.F open_copy_data_file.F; fi
if [ ! -L print.F ]; then ln -s ../../../eesupp/src/print.F print.F; fi
if [ ! -L reset_halo.F ]; then ln -s ../../../eesupp/src/reset_halo.F reset_halo.F; fi
if [ ! -L scatter_2d_r4.F ]; then ln -s ../../../eesupp/src/scatter_2d_r4.F scatter_2d_r4.F; fi
if [ ! -L scatter_2d_r8.F ]; then ln -s ../../../eesupp/src/scatter_2d_r8.F scatter_2d_r8.F; fi
if [ ! -L scatter_2d_wh_r4.F ]; then ln -s ../../../eesupp/src/scatter_2d_wh_r4.F scatter_2d_wh_r4.F; fi
if [ ! -L scatter_2d_wh_r8.F ]; then ln -s ../../../eesupp/src/scatter_2d_wh_r8.F scatter_2d_wh_r8.F; fi
if [ ! -L scatter_vec_r4.F ]; then ln -s ../../../eesupp/src/scatter_vec_r4.F scatter_vec_r4.F; fi
if [ ! -L scatter_vec_r8.F ]; then ln -s ../../../eesupp/src/scatter_vec_r8.F scatter_vec_r8.F; fi
if [ ! -L scatter_xz.F ]; then ln -s ../../../eesupp/src/scatter_xz.F scatter_xz.F; fi
if [ ! -L scatter_yz.F ]; then ln -s ../../../eesupp/src/scatter_yz.F scatter_yz.F; fi
if [ ! -L stop_if_error.F ]; then ln -s ../../../eesupp/src/stop_if_error.F stop_if_error.F; fi
if [ ! -L timers.F ]; then ln -s ../../../eesupp/src/timers.F timers.F; fi
if [ ! -L utils.F ]; then ln -s ../../../eesupp/src/utils.F utils.F; fi
if [ ! -L write_utils.F ]; then ln -s ../../../eesupp/src/write_utils.F write_utils.F; fi
if [ ! -L adams_bashforth2.F ]; then ln -s ../../../model/src/adams_bashforth2.F adams_bashforth2.F; fi
if [ ! -L adams_bashforth3.F ]; then ln -s ../../../model/src/adams_bashforth3.F adams_bashforth3.F; fi
if [ ! -L add_walls2masks.F ]; then ln -s ../../../model/src/add_walls2masks.F add_walls2masks.F; fi
if [ ! -L apply_forcing.F ]; then ln -s ../../../model/src/apply_forcing.F apply_forcing.F; fi
if [ ! -L calc_3d_diffusivity.F ]; then ln -s ../../../model/src/calc_3d_diffusivity.F calc_3d_diffusivity.F; fi
if [ ! -L calc_adv_flow.F ]; then ln -s ../../../model/src/calc_adv_flow.F calc_adv_flow.F; fi
if [ ! -L calc_div_ghat.F ]; then ln -s ../../../model/src/calc_div_ghat.F calc_div_ghat.F; fi
if [ ! -L calc_eddy_stress.F ]; then ln -s ../../../model/src/calc_eddy_stress.F calc_eddy_stress.F; fi
if [ ! -L calc_grad_phi_fv.F ]; then ln -s ../../../model/src/calc_grad_phi_fv.F calc_grad_phi_fv.F; fi
if [ ! -L calc_grad_phi_hyd.F ]; then ln -s ../../../model/src/calc_grad_phi_hyd.F calc_grad_phi_hyd.F; fi
if [ ! -L calc_grad_phi_surf.F ]; then ln -s ../../../model/src/calc_grad_phi_surf.F calc_grad_phi_surf.F; fi
if [ ! -L calc_grid_angles.F ]; then ln -s ../../../model/src/calc_grid_angles.F calc_grid_angles.F; fi
if [ ! -L calc_gw.F ]; then ln -s ../../../model/src/calc_gw.F calc_gw.F; fi
if [ ! -L calc_ivdc.F ]; then ln -s ../../../model/src/calc_ivdc.F calc_ivdc.F; fi
if [ ! -L calc_oce_mxlayer.F ]; then ln -s ../../../model/src/calc_oce_mxlayer.F calc_oce_mxlayer.F; fi
if [ ! -L calc_phi_hyd.F ]; then ln -s ../../../model/src/calc_phi_hyd.F calc_phi_hyd.F; fi
if [ ! -L calc_r_star.F ]; then ln -s ../../../model/src/calc_r_star.F calc_r_star.F; fi
if [ ! -L calc_surf_dr.F ]; then ln -s ../../../model/src/calc_surf_dr.F calc_surf_dr.F; fi
if [ ! -L calc_viscosity.F ]; then ln -s ../../../model/src/calc_viscosity.F calc_viscosity.F; fi
if [ ! -L calc_wsurf_tr.F ]; then ln -s ../../../model/src/calc_wsurf_tr.F calc_wsurf_tr.F; fi
if [ ! -L cg2d.F ]; then ln -s ../../../model/src/cg2d.F cg2d.F; fi
if [ ! -L cg2d_ex0.F ]; then ln -s ../../../model/src/cg2d_ex0.F cg2d_ex0.F; fi
if [ ! -L cg2d_nsa.F ]; then ln -s ../../../model/src/cg2d_nsa.F cg2d_nsa.F; fi
if [ ! -L cg2d_sr.F ]; then ln -s ../../../model/src/cg2d_sr.F cg2d_sr.F; fi
if [ ! -L cg3d.F ]; then ln -s ../../../model/src/cg3d.F cg3d.F; fi
if [ ! -L cg3d_ex0.F ]; then ln -s ../../../model/src/cg3d_ex0.F cg3d_ex0.F; fi
if [ ! -L check_pickup.F ]; then ln -s ../../../model/src/check_pickup.F check_pickup.F; fi
if [ ! -L config_check.F ]; then ln -s ../../../model/src/config_check.F config_check.F; fi
if [ ! -L config_summary.F ]; then ln -s ../../../model/src/config_summary.F config_summary.F; fi
if [ ! -L convective_adjustment.F ]; then ln -s ../../../model/src/convective_adjustment.F convective_adjustment.F; fi
if [ ! -L convective_adjustment_ini.F ]; then ln -s ../../../model/src/convective_adjustment_ini.F convective_adjustment_ini.F; fi
if [ ! -L convective_weights.F ]; then ln -s ../../../model/src/convective_weights.F convective_weights.F; fi
if [ ! -L convectively_mixtracer.F ]; then ln -s ../../../model/src/convectively_mixtracer.F convectively_mixtracer.F; fi
if [ ! -L correction_step.F ]; then ln -s ../../../model/src/correction_step.F correction_step.F; fi
if [ ! -L cycle_ab_tracer.F ]; then ln -s ../../../model/src/cycle_ab_tracer.F cycle_ab_tracer.F; fi
if [ ! -L cycle_tracer.F ]; then ln -s ../../../model/src/cycle_tracer.F cycle_tracer.F; fi
if [ ! -L diags_oceanic_surf_flux.F ]; then ln -s ../../../model/src/diags_oceanic_surf_flux.F diags_oceanic_surf_flux.F; fi
if [ ! -L diags_phi_hyd.F ]; then ln -s ../../../model/src/diags_phi_hyd.F diags_phi_hyd.F; fi
if [ ! -L diags_phi_rlow.F ]; then ln -s ../../../model/src/diags_phi_rlow.F diags_phi_rlow.F; fi
if [ ! -L diags_rho.F ]; then ln -s ../../../model/src/diags_rho.F diags_rho.F; fi
if [ ! -L diags_sound_speed.F ]; then ln -s ../../../model/src/diags_sound_speed.F diags_sound_speed.F; fi
if [ ! -L do_atmospheric_phys.F ]; then ln -s ../../../model/src/do_atmospheric_phys.F do_atmospheric_phys.F; fi
if [ ! -L do_fields_blocking_exchanges.F ]; then ln -s ../../../model/src/do_fields_blocking_exchanges.F do_fields_blocking_exchanges.F; fi
if [ ! -L do_oceanic_phys.F ]; then ln -s ../../../model/src/do_oceanic_phys.F do_oceanic_phys.F; fi
if [ ! -L do_stagger_fields_exchanges.F ]; then ln -s ../../../model/src/do_stagger_fields_exchanges.F do_stagger_fields_exchanges.F; fi
if [ ! -L do_statevars_diags.F ]; then ln -s ../../../model/src/do_statevars_diags.F do_statevars_diags.F; fi
if [ ! -L do_statevars_tave.F ]; then ln -s ../../../model/src/do_statevars_tave.F do_statevars_tave.F; fi
if [ ! -L do_the_model_io.F ]; then ln -s ../../../model/src/do_the_model_io.F do_the_model_io.F; fi
if [ ! -L do_write_pickup.F ]; then ln -s ../../../model/src/do_write_pickup.F do_write_pickup.F; fi
if [ ! -L dynamics.F ]; then ln -s ../../../model/src/dynamics.F dynamics.F; fi
if [ ! -L external_fields_load.F ]; then ln -s ../../../model/src/external_fields_load.F external_fields_load.F; fi
if [ ! -L external_forcing.F ]; then ln -s ../../../model/src/external_forcing.F external_forcing.F; fi
if [ ! -L external_forcing_surf.F ]; then ln -s ../../../model/src/external_forcing_surf.F external_forcing_surf.F; fi
if [ ! -L find_alpha.F ]; then ln -s ../../../model/src/find_alpha.F find_alpha.F; fi
if [ ! -L find_hyd_press_1d.F ]; then ln -s ../../../model/src/find_hyd_press_1d.F find_hyd_press_1d.F; fi
if [ ! -L find_rho.F ]; then ln -s ../../../model/src/find_rho.F find_rho.F; fi
if [ ! -L forcing_surf_relax.F ]; then ln -s ../../../model/src/forcing_surf_relax.F forcing_surf_relax.F; fi
if [ ! -L forward_step.F ]; then ln -s ../../../model/src/forward_step.F forward_step.F; fi
if [ ! -L freesurf_rescale_g.F ]; then ln -s ../../../model/src/freesurf_rescale_g.F freesurf_rescale_g.F; fi
if [ ! -L freeze_surface.F ]; then ln -s ../../../model/src/freeze_surface.F freeze_surface.F; fi
if [ ! -L grad_sigma.F ]; then ln -s ../../../model/src/grad_sigma.F grad_sigma.F; fi
if [ ! -L gsw_teos10.F ]; then ln -s ../../../model/src/gsw_teos10.F gsw_teos10.F; fi
if [ ! -L impldiff.F ]; then ln -s ../../../model/src/impldiff.F impldiff.F; fi
if [ ! -L ini_cartesian_grid.F ]; then ln -s ../../../model/src/ini_cartesian_grid.F ini_cartesian_grid.F; fi
if [ ! -L ini_cg2d.F ]; then ln -s ../../../model/src/ini_cg2d.F ini_cg2d.F; fi
if [ ! -L ini_cg3d.F ]; then ln -s ../../../model/src/ini_cg3d.F ini_cg3d.F; fi
if [ ! -L ini_cori.F ]; then ln -s ../../../model/src/ini_cori.F ini_cori.F; fi
if [ ! -L ini_curvilinear_grid.F ]; then ln -s ../../../model/src/ini_curvilinear_grid.F ini_curvilinear_grid.F; fi
if [ ! -L ini_cylinder_grid.F ]; then ln -s ../../../model/src/ini_cylinder_grid.F ini_cylinder_grid.F; fi
if [ ! -L ini_depths.F ]; then ln -s ../../../model/src/ini_depths.F ini_depths.F; fi
if [ ! -L ini_dynvars.F ]; then ln -s ../../../model/src/ini_dynvars.F ini_dynvars.F; fi
if [ ! -L ini_eos.F ]; then ln -s ../../../model/src/ini_eos.F ini_eos.F; fi
if [ ! -L ini_ffields.F ]; then ln -s ../../../model/src/ini_ffields.F ini_ffields.F; fi
if [ ! -L ini_fields.F ]; then ln -s ../../../model/src/ini_fields.F ini_fields.F; fi
if [ ! -L ini_forcing.F ]; then ln -s ../../../model/src/ini_forcing.F ini_forcing.F; fi
if [ ! -L ini_global_domain.F ]; then ln -s ../../../model/src/ini_global_domain.F ini_global_domain.F; fi
if [ ! -L ini_grid.F ]; then ln -s ../../../model/src/ini_grid.F ini_grid.F; fi
if [ ! -L ini_linear_phisurf.F ]; then ln -s ../../../model/src/ini_linear_phisurf.F ini_linear_phisurf.F; fi
if [ ! -L ini_local_grid.F ]; then ln -s ../../../model/src/ini_local_grid.F ini_local_grid.F; fi
if [ ! -L ini_masks_etc.F ]; then ln -s ../../../model/src/ini_masks_etc.F ini_masks_etc.F; fi
if [ ! -L ini_mixing.F ]; then ln -s ../../../model/src/ini_mixing.F ini_mixing.F; fi
if [ ! -L ini_mnc_vars.F ]; then ln -s ../../../model/src/ini_mnc_vars.F ini_mnc_vars.F; fi
if [ ! -L ini_model_io.F ]; then ln -s ../../../model/src/ini_model_io.F ini_model_io.F; fi
if [ ! -L ini_nh_fields.F ]; then ln -s ../../../model/src/ini_nh_fields.F ini_nh_fields.F; fi
if [ ! -L ini_nh_vars.F ]; then ln -s ../../../model/src/ini_nh_vars.F ini_nh_vars.F; fi
if [ ! -L ini_nlfs_vars.F ]; then ln -s ../../../model/src/ini_nlfs_vars.F ini_nlfs_vars.F; fi
if [ ! -L ini_p_ground.F ]; then ln -s ../../../model/src/ini_p_ground.F ini_p_ground.F; fi
if [ ! -L ini_parms.F ]; then ln -s ../../../model/src/ini_parms.F ini_parms.F; fi
if [ ! -L ini_pressure.F ]; then ln -s ../../../model/src/ini_pressure.F ini_pressure.F; fi
if [ ! -L ini_psurf.F ]; then ln -s ../../../model/src/ini_psurf.F ini_psurf.F; fi
if [ ! -L ini_salt.F ]; then ln -s ../../../model/src/ini_salt.F ini_salt.F; fi
if [ ! -L ini_sigma_hfac.F ]; then ln -s ../../../model/src/ini_sigma_hfac.F ini_sigma_hfac.F; fi
if [ ! -L ini_spherical_polar_grid.F ]; then ln -s ../../../model/src/ini_spherical_polar_grid.F ini_spherical_polar_grid.F; fi
if [ ! -L ini_theta.F ]; then ln -s ../../../model/src/ini_theta.F ini_theta.F; fi
if [ ! -L ini_vel.F ]; then ln -s ../../../model/src/ini_vel.F ini_vel.F; fi
if [ ! -L ini_vertical_grid.F ]; then ln -s ../../../model/src/ini_vertical_grid.F ini_vertical_grid.F; fi
if [ ! -L initialise_fixed.F ]; then ln -s ../../../model/src/initialise_fixed.F initialise_fixed.F; fi
if [ ! -L initialise_varia.F ]; then ln -s ../../../model/src/initialise_varia.F initialise_varia.F; fi
if [ ! -L integr_continuity.F ]; then ln -s ../../../model/src/integr_continuity.F integr_continuity.F; fi
if [ ! -L integrate_for_w.F ]; then ln -s ../../../model/src/integrate_for_w.F integrate_for_w.F; fi
if [ ! -L load_fields_driver.F ]; then ln -s ../../../model/src/load_fields_driver.F load_fields_driver.F; fi
if [ ! -L load_grid_spacing.F ]; then ln -s ../../../model/src/load_grid_spacing.F load_grid_spacing.F; fi
if [ ! -L load_ref_files.F ]; then ln -s ../../../model/src/load_ref_files.F load_ref_files.F; fi
if [ ! -L main_do_loop.F ]; then ln -s ../../../model/src/main_do_loop.F main_do_loop.F; fi
if [ ! -L momentum_correction_step.F ]; then ln -s ../../../model/src/momentum_correction_step.F momentum_correction_step.F; fi
if [ ! -L packages_boot.F ]; then ln -s ../../../model/src/packages_boot.F packages_boot.F; fi
if [ ! -L packages_check.F ]; then ln -s ../../../model/src/packages_check.F packages_check.F; fi
if [ ! -L packages_error_msg.F ]; then ln -s ../../../model/src/packages_error_msg.F packages_error_msg.F; fi
if [ ! -L packages_init_fixed.F ]; then ln -s ../../../model/src/packages_init_fixed.F packages_init_fixed.F; fi
if [ ! -L packages_init_variables.F ]; then ln -s ../../../model/src/packages_init_variables.F packages_init_variables.F; fi
if [ ! -L packages_print_msg.F ]; then ln -s ../../../model/src/packages_print_msg.F packages_print_msg.F; fi
if [ ! -L packages_readparms.F ]; then ln -s ../../../model/src/packages_readparms.F packages_readparms.F; fi
if [ ! -L packages_unused_msg.F ]; then ln -s ../../../model/src/packages_unused_msg.F packages_unused_msg.F; fi
if [ ! -L packages_write_pickup.F ]; then ln -s ../../../model/src/packages_write_pickup.F packages_write_pickup.F; fi
if [ ! -L plot_field.F ]; then ln -s ../../../model/src/plot_field.F plot_field.F; fi
if [ ! -L port_rand.F ]; then ln -s ../../../model/src/port_rand.F port_rand.F; fi
if [ ! -L post_cg3d.F ]; then ln -s ../../../model/src/post_cg3d.F post_cg3d.F; fi
if [ ! -L pre_cg3d.F ]; then ln -s ../../../model/src/pre_cg3d.F pre_cg3d.F; fi
if [ ! -L pressure_for_eos.F ]; then ln -s ../../../model/src/pressure_for_eos.F pressure_for_eos.F; fi
if [ ! -L read_pickup.F ]; then ln -s ../../../model/src/read_pickup.F read_pickup.F; fi
if [ ! -L remove_mean.F ]; then ln -s ../../../model/src/remove_mean.F remove_mean.F; fi
if [ ! -L reset_nlfs_vars.F ]; then ln -s ../../../model/src/reset_nlfs_vars.F reset_nlfs_vars.F; fi
if [ ! -L rotate_spherical_polar_grid.F ]; then ln -s ../../../model/src/rotate_spherical_polar_grid.F rotate_spherical_polar_grid.F; fi
if [ ! -L rotate_uv2en.F ]; then ln -s ../../../model/src/rotate_uv2en.F rotate_uv2en.F; fi
if [ ! -L salt_integrate.F ]; then ln -s ../../../model/src/salt_integrate.F salt_integrate.F; fi
if [ ! -L seawater.F ]; then ln -s ../../../model/src/seawater.F seawater.F; fi
if [ ! -L set_defaults.F ]; then ln -s ../../../model/src/set_defaults.F set_defaults.F; fi
if [ ! -L set_grid_factors.F ]; then ln -s ../../../model/src/set_grid_factors.F set_grid_factors.F; fi
if [ ! -L set_parms.F ]; then ln -s ../../../model/src/set_parms.F set_parms.F; fi
if [ ! -L set_ref_state.F ]; then ln -s ../../../model/src/set_ref_state.F set_ref_state.F; fi
if [ ! -L solve_for_pressure.F ]; then ln -s ../../../model/src/solve_for_pressure.F solve_for_pressure.F; fi
if [ ! -L solve_pentadiagonal.F ]; then ln -s ../../../model/src/solve_pentadiagonal.F solve_pentadiagonal.F; fi
if [ ! -L solve_tridiagonal.F ]; then ln -s ../../../model/src/solve_tridiagonal.F solve_tridiagonal.F; fi
if [ ! -L solve_uv_tridiago.F ]; then ln -s ../../../model/src/solve_uv_tridiago.F solve_uv_tridiago.F; fi
if [ ! -L state_summary.F ]; then ln -s ../../../model/src/state_summary.F state_summary.F; fi
if [ ! -L swfrac.F ]; then ln -s ../../../model/src/swfrac.F swfrac.F; fi
if [ ! -L taueddy_init_varia.F ]; then ln -s ../../../model/src/taueddy_init_varia.F taueddy_init_varia.F; fi
if [ ! -L taueddy_tendency_apply.F ]; then ln -s ../../../model/src/taueddy_tendency_apply.F taueddy_tendency_apply.F; fi
if [ ! -L temp_integrate.F ]; then ln -s ../../../model/src/temp_integrate.F temp_integrate.F; fi
if [ ! -L the_main_loop.F ]; then ln -s ../../../model/src/the_main_loop.F the_main_loop.F; fi
if [ ! -L the_model_main.F ]; then ln -s ../../../model/src/the_model_main.F the_model_main.F; fi
if [ ! -L thermodynamics.F ]; then ln -s ../../../model/src/thermodynamics.F thermodynamics.F; fi
if [ ! -L timestep.F ]; then ln -s ../../../model/src/timestep.F timestep.F; fi
if [ ! -L timestep_tracer.F ]; then ln -s ../../../model/src/timestep_tracer.F timestep_tracer.F; fi
if [ ! -L timestep_wvel.F ]; then ln -s ../../../model/src/timestep_wvel.F timestep_wvel.F; fi
if [ ! -L tracers_correction_step.F ]; then ln -s ../../../model/src/tracers_correction_step.F tracers_correction_step.F; fi
if [ ! -L tracers_iigw_correction.F ]; then ln -s ../../../model/src/tracers_iigw_correction.F tracers_iigw_correction.F; fi
if [ ! -L turnoff_model_io.F ]; then ln -s ../../../model/src/turnoff_model_io.F turnoff_model_io.F; fi
if [ ! -L update_cg2d.F ]; then ln -s ../../../model/src/update_cg2d.F update_cg2d.F; fi
if [ ! -L update_etah.F ]; then ln -s ../../../model/src/update_etah.F update_etah.F; fi
if [ ! -L update_etaws.F ]; then ln -s ../../../model/src/update_etaws.F update_etaws.F; fi
if [ ! -L update_masks_etc.F ]; then ln -s ../../../model/src/update_masks_etc.F update_masks_etc.F; fi
if [ ! -L update_r_star.F ]; then ln -s ../../../model/src/update_r_star.F update_r_star.F; fi
if [ ! -L update_sigma.F ]; then ln -s ../../../model/src/update_sigma.F update_sigma.F; fi
if [ ! -L update_surf_dr.F ]; then ln -s ../../../model/src/update_surf_dr.F update_surf_dr.F; fi
if [ ! -L write_grid.F ]; then ln -s ../../../model/src/write_grid.F write_grid.F; fi
if [ ! -L write_pickup.F ]; then ln -s ../../../model/src/write_pickup.F write_pickup.F; fi
if [ ! -L write_state.F ]; then ln -s ../../../model/src/write_state.F write_state.F; fi
if [ ! -L gsl_ieee_env.c ]; then ln -s ../../../eesupp/src/gsl_ieee_env.c gsl_ieee_env.c; fi
if [ ! -L ptwrapper.c ]; then ln -s ../../../eesupp/src/ptwrapper.c ptwrapper.c; fi
if [ ! -L setdir.c ]; then ln -s ../../../eesupp/src/setdir.c setdir.c; fi
if [ ! -L setrlstk.c ]; then ln -s ../../../eesupp/src/setrlstk.c setrlstk.c; fi
if [ ! -L sigreg.c ]; then ln -s ../../../eesupp/src/sigreg.c sigreg.c; fi
if [ ! -L tim.c ]; then ln -s ../../../eesupp/src/tim.c tim.c; fi
if [ ! -L timer_stats.c ]; then ln -s ../../../eesupp/src/timer_stats.c timer_stats.c; fi
if [ ! -L CD_CODE_OPTIONS.h ]; then ln -s ../code/CD_CODE_OPTIONS.h CD_CODE_OPTIONS.h; fi
if [ ! -L CPP_OPTIONS.h ]; then ln -s ../code/CPP_OPTIONS.h CPP_OPTIONS.h; fi
if [ ! -L SIZE.h ]; then ln -s ../code/SIZE.h SIZE.h; fi
if [ ! -L CD_CODE_VARS.h ]; then ln -s ../../../pkg/cd_code/CD_CODE_VARS.h CD_CODE_VARS.h; fi
if [ ! -L cd_code_ad_check_lev1_dir.h ]; then ln -s ../../../pkg/cd_code/cd_code_ad_check_lev1_dir.h cd_code_ad_check_lev1_dir.h; fi
if [ ! -L cd_code_ad_check_lev2_dir.h ]; then ln -s ../../../pkg/cd_code/cd_code_ad_check_lev2_dir.h cd_code_ad_check_lev2_dir.h; fi
if [ ! -L cd_code_ad_check_lev3_dir.h ]; then ln -s ../../../pkg/cd_code/cd_code_ad_check_lev3_dir.h cd_code_ad_check_lev3_dir.h; fi
if [ ! -L cd_code_ad_check_lev4_dir.h ]; then ln -s ../../../pkg/cd_code/cd_code_ad_check_lev4_dir.h cd_code_ad_check_lev4_dir.h; fi
if [ ! -L DEBUG_OPTIONS.h ]; then ln -s ../../../pkg/debug/DEBUG_OPTIONS.h DEBUG_OPTIONS.h; fi
if [ ! -L GAD.h ]; then ln -s ../../../pkg/generic_advdiff/GAD.h GAD.h; fi
if [ ! -L GAD_FLUX_LIMITER.h ]; then ln -s ../../../pkg/generic_advdiff/GAD_FLUX_LIMITER.h GAD_FLUX_LIMITER.h; fi
if [ ! -L GAD_OPTIONS.h ]; then ln -s ../../../pkg/generic_advdiff/GAD_OPTIONS.h GAD_OPTIONS.h; fi
if [ ! -L GAD_SOM_VARS.h ]; then ln -s ../../../pkg/generic_advdiff/GAD_SOM_VARS.h GAD_SOM_VARS.h; fi
if [ ! -L gad_ad_check_lev1_dir.h ]; then ln -s ../../../pkg/generic_advdiff/gad_ad_check_lev1_dir.h gad_ad_check_lev1_dir.h; fi
if [ ! -L gad_ad_check_lev2_dir.h ]; then ln -s ../../../pkg/generic_advdiff/gad_ad_check_lev2_dir.h gad_ad_check_lev2_dir.h; fi
if [ ! -L gad_ad_check_lev3_dir.h ]; then ln -s ../../../pkg/generic_advdiff/gad_ad_check_lev3_dir.h gad_ad_check_lev3_dir.h; fi
if [ ! -L gad_ad_check_lev4_dir.h ]; then ln -s ../../../pkg/generic_advdiff/gad_ad_check_lev4_dir.h gad_ad_check_lev4_dir.h; fi
if [ ! -L MDSIO_BUFF_3D.h ]; then ln -s ../../../pkg/mdsio/MDSIO_BUFF_3D.h MDSIO_BUFF_3D.h; fi
if [ ! -L MDSIO_BUFF_WH.h ]; then ln -s ../../../pkg/mdsio/MDSIO_BUFF_WH.h MDSIO_BUFF_WH.h; fi
if [ ! -L MDSIO_OPTIONS.h ]; then ln -s ../../../pkg/mdsio/MDSIO_OPTIONS.h MDSIO_OPTIONS.h; fi
if [ ! -L MOM_COMMON_OPTIONS.h ]; then ln -s ../../../pkg/mom_common/MOM_COMMON_OPTIONS.h MOM_COMMON_OPTIONS.h; fi
if [ ! -L MOM_VISC.h ]; then ln -s ../../../pkg/mom_common/MOM_VISC.h MOM_VISC.h; fi
if [ ! -L MOM_FLUXFORM.h ]; then ln -s ../../../pkg/mom_fluxform/MOM_FLUXFORM.h MOM_FLUXFORM.h; fi
if [ ! -L MOM_FLUXFORM_OPTIONS.h ]; then ln -s ../../../pkg/mom_fluxform/MOM_FLUXFORM_OPTIONS.h MOM_FLUXFORM_OPTIONS.h; fi
if [ ! -L MOM_VECINV_OPTIONS.h ]; then ln -s ../../../pkg/mom_vecinv/MOM_VECINV_OPTIONS.h MOM_VECINV_OPTIONS.h; fi
if [ ! -L MONITOR.h ]; then ln -s ../../../pkg/monitor/MONITOR.h MONITOR.h; fi
if [ ! -L MONITOR_OPTIONS.h ]; then ln -s ../../../pkg/monitor/MONITOR_OPTIONS.h MONITOR_OPTIONS.h; fi
if [ ! -L RW_MFLDS.h ]; then ln -s ../../../pkg/rw/RW_MFLDS.h RW_MFLDS.h; fi
if [ ! -L RW_OPTIONS.h ]; then ln -s ../../../pkg/rw/RW_OPTIONS.h RW_OPTIONS.h; fi
if [ ! -L BAR2.h ]; then ln -s ../../../eesupp/inc/BAR2.h BAR2.h; fi
if [ ! -L BARRIER.h ]; then ln -s ../../../eesupp/inc/BARRIER.h BARRIER.h; fi
if [ ! -L CPP_EEMACROS.h ]; then ln -s ../../../eesupp/inc/CPP_EEMACROS.h CPP_EEMACROS.h; fi
if [ ! -L CPP_EEOPTIONS.h ]; then ln -s ../../../eesupp/inc/CPP_EEOPTIONS.h CPP_EEOPTIONS.h; fi
if [ ! -L CUMULSUM.h ]; then ln -s ../../../eesupp/inc/CUMULSUM.h CUMULSUM.h; fi
if [ ! -L DEF_IN_MAKEFILE.h ]; then ln -s ../../../eesupp/inc/DEF_IN_MAKEFILE.h DEF_IN_MAKEFILE.h; fi
if [ ! -L EEBUFF_SCPU.h ]; then ln -s ../../../eesupp/inc/EEBUFF_SCPU.h EEBUFF_SCPU.h; fi
if [ ! -L EEPARAMS.h ]; then ln -s ../../../eesupp/inc/EEPARAMS.h EEPARAMS.h; fi
if [ ! -L EESUPPORT.h ]; then ln -s ../../../eesupp/inc/EESUPPORT.h EESUPPORT.h; fi
if [ ! -L EXCH.h ]; then ln -s ../../../eesupp/inc/EXCH.h EXCH.h; fi
if [ ! -L GLOBAL_MAX.h ]; then ln -s ../../../eesupp/inc/GLOBAL_MAX.h GLOBAL_MAX.h; fi
if [ ! -L GLOBAL_SUM.h ]; then ln -s ../../../eesupp/inc/GLOBAL_SUM.h GLOBAL_SUM.h; fi
if [ ! -L MAIN_PDIRECTIVES1.h ]; then ln -s ../../../eesupp/inc/MAIN_PDIRECTIVES1.h MAIN_PDIRECTIVES1.h; fi
if [ ! -L MAIN_PDIRECTIVES2.h ]; then ln -s ../../../eesupp/inc/MAIN_PDIRECTIVES2.h MAIN_PDIRECTIVES2.h; fi
if [ ! -L MPI_INFO.h ]; then ln -s ../../../eesupp/inc/MPI_INFO.h MPI_INFO.h; fi
if [ ! -L SIGREG.h ]; then ln -s ../../../eesupp/inc/SIGREG.h SIGREG.h; fi
if [ ! -L CG2D.h ]; then ln -s ../../../model/inc/CG2D.h CG2D.h; fi
if [ ! -L CG3D.h ]; then ln -s ../../../model/inc/CG3D.h CG3D.h; fi
if [ ! -L DXC_MACROS.h ]; then ln -s ../../../model/inc/DXC_MACROS.h DXC_MACROS.h; fi
if [ ! -L DXF_MACROS.h ]; then ln -s ../../../model/inc/DXF_MACROS.h DXF_MACROS.h; fi
if [ ! -L DXG_MACROS.h ]; then ln -s ../../../model/inc/DXG_MACROS.h DXG_MACROS.h; fi
if [ ! -L DXV_MACROS.h ]; then ln -s ../../../model/inc/DXV_MACROS.h DXV_MACROS.h; fi
if [ ! -L DYC_MACROS.h ]; then ln -s ../../../model/inc/DYC_MACROS.h DYC_MACROS.h; fi
if [ ! -L DYF_MACROS.h ]; then ln -s ../../../model/inc/DYF_MACROS.h DYF_MACROS.h; fi
if [ ! -L DYG_MACROS.h ]; then ln -s ../../../model/inc/DYG_MACROS.h DYG_MACROS.h; fi
if [ ! -L DYNVARS.h ]; then ln -s ../../../model/inc/DYNVARS.h DYNVARS.h; fi
if [ ! -L DYU_MACROS.h ]; then ln -s ../../../model/inc/DYU_MACROS.h DYU_MACROS.h; fi
if [ ! -L EOS.h ]; then ln -s ../../../model/inc/EOS.h EOS.h; fi
if [ ! -L FCORI_MACROS.h ]; then ln -s ../../../model/inc/FCORI_MACROS.h FCORI_MACROS.h; fi
if [ ! -L FFIELDS.h ]; then ln -s ../../../model/inc/FFIELDS.h FFIELDS.h; fi
if [ ! -L GRID.h ]; then ln -s ../../../model/inc/GRID.h GRID.h; fi
if [ ! -L GRID_MACROS.h ]; then ln -s ../../../model/inc/GRID_MACROS.h GRID_MACROS.h; fi
if [ ! -L HFACC_MACROS.h ]; then ln -s ../../../model/inc/HFACC_MACROS.h HFACC_MACROS.h; fi
if [ ! -L HFACS_MACROS.h ]; then ln -s ../../../model/inc/HFACS_MACROS.h HFACS_MACROS.h; fi
if [ ! -L HFACW_MACROS.h ]; then ln -s ../../../model/inc/HFACW_MACROS.h HFACW_MACROS.h; fi
if [ ! -L MASKS_MACROS.h ]; then ln -s ../../../model/inc/MASKS_MACROS.h MASKS_MACROS.h; fi
if [ ! -L MASKW_MACROS.h ]; then ln -s ../../../model/inc/MASKW_MACROS.h MASKW_MACROS.h; fi
if [ ! -L NH_VARS.h ]; then ln -s ../../../model/inc/NH_VARS.h NH_VARS.h; fi
if [ ! -L PARAMS.h ]; then ln -s ../../../model/inc/PARAMS.h PARAMS.h; fi
if [ ! -L RAS_MACROS.h ]; then ln -s ../../../model/inc/RAS_MACROS.h RAS_MACROS.h; fi
if [ ! -L RAW_MACROS.h ]; then ln -s ../../../model/inc/RAW_MACROS.h RAW_MACROS.h; fi
if [ ! -L RA_MACROS.h ]; then ln -s ../../../model/inc/RA_MACROS.h RA_MACROS.h; fi
if [ ! -L RECIP_DXC_MACROS.h ]; then ln -s ../../../model/inc/RECIP_DXC_MACROS.h RECIP_DXC_MACROS.h; fi
if [ ! -L RECIP_DXF_MACROS.h ]; then ln -s ../../../model/inc/RECIP_DXF_MACROS.h RECIP_DXF_MACROS.h; fi
if [ ! -L RECIP_DXG_MACROS.h ]; then ln -s ../../../model/inc/RECIP_DXG_MACROS.h RECIP_DXG_MACROS.h; fi
if [ ! -L RECIP_DXV_MACROS.h ]; then ln -s ../../../model/inc/RECIP_DXV_MACROS.h RECIP_DXV_MACROS.h; fi
if [ ! -L RECIP_DYC_MACROS.h ]; then ln -s ../../../model/inc/RECIP_DYC_MACROS.h RECIP_DYC_MACROS.h; fi
if [ ! -L RECIP_DYF_MACROS.h ]; then ln -s ../../../model/inc/RECIP_DYF_MACROS.h RECIP_DYF_MACROS.h; fi
if [ ! -L RECIP_DYG_MACROS.h ]; then ln -s ../../../model/inc/RECIP_DYG_MACROS.h RECIP_DYG_MACROS.h; fi
if [ ! -L RECIP_DYU_MACROS.h ]; then ln -s ../../../model/inc/RECIP_DYU_MACROS.h RECIP_DYU_MACROS.h; fi
if [ ! -L RECIP_HFACC_MACROS.h ]; then ln -s ../../../model/inc/RECIP_HFACC_MACROS.h RECIP_HFACC_MACROS.h; fi
if [ ! -L RECIP_HFACS_MACROS.h ]; then ln -s ../../../model/inc/RECIP_HFACS_MACROS.h RECIP_HFACS_MACROS.h; fi
if [ ! -L RECIP_HFACW_MACROS.h ]; then ln -s ../../../model/inc/RECIP_HFACW_MACROS.h RECIP_HFACW_MACROS.h; fi
if [ ! -L RESTART.h ]; then ln -s ../../../model/inc/RESTART.h RESTART.h; fi
if [ ! -L SET_GRID.h ]; then ln -s ../../../model/inc/SET_GRID.h SET_GRID.h; fi
if [ ! -L SOLVE_FOR_PRESSURE.h ]; then ln -s ../../../model/inc/SOLVE_FOR_PRESSURE.h SOLVE_FOR_PRESSURE.h; fi
if [ ! -L SOLVE_FOR_PRESSURE3D.h ]; then ln -s ../../../model/inc/SOLVE_FOR_PRESSURE3D.h SOLVE_FOR_PRESSURE3D.h; fi
if [ ! -L SURFACE.h ]; then ln -s ../../../model/inc/SURFACE.h SURFACE.h; fi
if [ ! -L TANPHIATU_MACROS.h ]; then ln -s ../../../model/inc/TANPHIATU_MACROS.h TANPHIATU_MACROS.h; fi
if [ ! -L TANPHIATV_MACROS.h ]; then ln -s ../../../model/inc/TANPHIATV_MACROS.h TANPHIATV_MACROS.h; fi
if [ ! -L THE_MODEL_COMMON_BLOCKS.h ]; then ln -s ../../../model/inc/THE_MODEL_COMMON_BLOCKS.h THE_MODEL_COMMON_BLOCKS.h; fi
if [ ! -L XC_MACROS.h ]; then ln -s ../../../model/inc/XC_MACROS.h XC_MACROS.h; fi
if [ ! -L YC_MACROS.h ]; then ln -s ../../../model/inc/YC_MACROS.h YC_MACROS.h; fi
Creating FC_NAMEMANGLE.h ...
echo "#define FC_NAMEMANGLE(X) X ## _" > FC_NAMEMANGLE.h
Creating BUILD_INFO.h ...
echo "#define THISVER 'checkpoint68i'" > BUILD_INFO.h
echo "#define THISUSER 'mac'" >> BUILD_INFO.h
echo "#define THISDATE 'Wed Jun  1 13:37:35 CDT 2022'" >> BUILD_INFO.h
echo "#define THISHOST 'Macs-MacBook-Pro.local'" >> BUILD_INFO.h
../../../tools/xmakedepend -f Makefile -o .for -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   -I/usr/local/include -I/Library/Developer/CommandLineTools/usr/bin/../lib/clang/8.0.0/include -I/Library/Developer/CommandLineTools/usr/include -I/usr/include -I/System/Library/Frameworks -I/Library/Frameworks cd_code_ini_vars.F cd_code_init_fixed.F cd_code_read_pickup.F cd_code_scheme.F cd_code_write_pickup.F chksum_tiled.F debug_call.F debug_cs_corner_uv.F debug_enter.F debug_fld_stats_rl.F debug_fld_stats_rs.F debug_leave.F debug_msg.F debug_stats_rl.F debug_stats_rs.F fill_in_corners_rl.F write_fullarray_rl.F write_fullarray_rs.F gad_advection.F gad_advscheme.F gad_biharm_r.F gad_biharm_x.F gad_biharm_y.F gad_c2_adv_r.F gad_c2_adv_x.F gad_c2_adv_y.F gad_c2_impl_r.F gad_c4_adv_r.F gad_c4_adv_x.F gad_c4_adv_y.F gad_calc_rhs.F gad_check.F gad_del2.F gad_diagnostics_init.F gad_diagnostics_state.F gad_diff_r.F gad_diff_x.F gad_diff_y.F gad_dst2u1_adv_r.F gad_dst2u1_adv_x.F gad_dst2u1_adv_y.F gad_dst2u1_impl_r.F gad_dst3_adv_r.F gad_dst3_adv_x.F gad_dst3_adv_y.F gad_dst3fl_adv_r.F gad_dst3fl_adv_x.F gad_dst3fl_adv_y.F gad_dst3fl_impl_r.F gad_exch_som.F gad_fluxlimit_adv_r.F gad_fluxlimit_adv_x.F gad_fluxlimit_adv_y.F gad_fluxlimit_impl_r.F gad_grad_x.F gad_grad_y.F gad_implicit_r.F gad_init_fixed.F gad_init_varia.F gad_os7mp_adv_r.F gad_os7mp_adv_x.F gad_os7mp_adv_y.F gad_osc_hat_r.F gad_osc_hat_x.F gad_osc_hat_y.F gad_osc_mul_r.F gad_osc_mul_x.F gad_osc_mul_y.F gad_plm_fun.F gad_ppm_adv_r.F gad_ppm_adv_x.F gad_ppm_adv_y.F gad_ppm_flx_r.F gad_ppm_flx_x.F gad_ppm_flx_y.F gad_ppm_fun.F gad_ppm_hat_r.F gad_ppm_hat_x.F gad_ppm_hat_y.F gad_ppm_p3e_r.F gad_ppm_p3e_x.F gad_ppm_p3e_y.F gad_pqm_adv_r.F gad_pqm_adv_x.F gad_pqm_adv_y.F gad_pqm_flx_r.F gad_pqm_flx_x.F gad_pqm_flx_y.F gad_pqm_fun.F gad_pqm_hat_r.F gad_pqm_hat_x.F gad_pqm_hat_y.F gad_pqm_p5e_r.F gad_pqm_p5e_x.F gad_pqm_p5e_y.F gad_read_pickup.F gad_som_adv_r.F gad_som_adv_x.F gad_som_adv_y.F gad_som_advect.F gad_som_exchanges.F gad_som_fill_cs_corner.F gad_som_lim_r.F gad_som_prep_cs_corner.F gad_u3_adv_r.F gad_u3_adv_x.F gad_u3_adv_y.F gad_u3c4_impl_r.F gad_write_pickup.F salt_fill.F mdsio_buffertorl.F mdsio_buffertors.F mdsio_check4file.F mdsio_facef_read.F mdsio_gl.F mdsio_gl_slice.F mdsio_pass_r4torl.F mdsio_pass_r4tors.F mdsio_pass_r8torl.F mdsio_pass_r8tors.F mdsio_rd_rec_rl.F mdsio_rd_rec_rs.F mdsio_read_field.F mdsio_read_meta.F mdsio_read_section.F mdsio_read_tape.F mdsio_read_whalos.F mdsio_readvec_loc.F mdsio_rw_field.F mdsio_rw_slice.F mdsio_seg4torl.F mdsio_seg4tors.F mdsio_seg8torl.F mdsio_seg8tors.F mdsio_segxtorx_2d.F mdsio_wr_metafiles.F mdsio_wr_rec_rl.F mdsio_wr_rec_rs.F mdsio_write_field.F mdsio_write_meta.F mdsio_write_section.F mdsio_write_tape.F mdsio_write_whalos.F mdsio_writelocal.F mdsio_writevec_loc.F mom_calc_3d_strain.F mom_calc_absvort3.F mom_calc_hdiv.F mom_calc_hfacz.F mom_calc_ke.F mom_calc_relvort3.F mom_calc_smag_3d.F mom_calc_strain.F mom_calc_tension.F mom_calc_visc.F mom_diagnostics_init.F mom_hdissip.F mom_init_fixed.F mom_quasihydrostatic.F mom_u_botdrag_coeff.F mom_u_coriolis_nh.F mom_u_implicit_r.F mom_u_metric_nh.F mom_u_rviscflux.F mom_u_sidedrag.F mom_uv_smag_3d.F mom_v_botdrag_coeff.F mom_v_coriolis_nh.F mom_v_implicit_r.F mom_v_metric_nh.F mom_v_rviscflux.F mom_v_sidedrag.F mom_visc_qgl_limit.F mom_visc_qgl_stretch.F mom_w_coriolis_nh.F mom_w_metric_nh.F mom_w_sidedrag.F mom_w_smag_3d.F mom_calc_rtrans.F mom_fluxform.F mom_u_adv_uu.F mom_u_adv_vu.F mom_u_adv_wu.F mom_u_coriolis.F mom_u_del2u.F mom_u_metric_cylinder.F mom_u_metric_sphere.F mom_u_xviscflux.F mom_u_yviscflux.F mom_uv_boundary.F mom_v_adv_uv.F mom_v_adv_vv.F mom_v_adv_wv.F mom_v_coriolis.F mom_v_del2v.F mom_v_metric_cylinder.F mom_v_metric_sphere.F mom_v_xviscflux.F mom_v_yviscflux.F mom_vecinv.F mom_vi_coriolis.F mom_vi_del2uv.F mom_vi_hdissip.F mom_vi_u_coriolis.F mom_vi_u_coriolis_c4.F mom_vi_u_grad_ke.F mom_vi_u_vertshear.F mom_vi_v_coriolis.F mom_vi_v_coriolis_c4.F mom_vi_v_grad_ke.F mom_vi_v_vertshear.F mon_advcfl.F mon_advcflw.F mon_advcflw2.F mon_calc_advcfl.F mon_calc_stats_rl.F mon_calc_stats_rs.F mon_init.F mon_ke.F mon_out.F mon_printstats_rl.F mon_printstats_rs.F mon_set_iounit.F mon_set_pref.F mon_solution.F mon_stats_latbnd_rl.F mon_stats_rl.F mon_stats_rs.F mon_surfcor.F mon_vort3.F mon_writestats_rl.F mon_writestats_rs.F monitor.F monitor_ad.F monitor_g.F get_write_global_fld.F read_fld_xy_rl.F read_fld_xy_rs.F read_fld_xyz_rl.F read_fld_xyz_rs.F read_glvec_rl.F read_glvec_rs.F read_mflds.F read_rec.F rw_get_suffix.F set_write_global_fld.F write_fld_3d_rl.F write_fld_3d_rs.F write_fld_s3d_rl.F write_fld_s3d_rs.F write_fld_xy_rl.F write_fld_xy_rs.F write_fld_xyz_rl.F write_fld_xyz_rs.F write_glvec_rl.F write_glvec_rs.F write_local_rl.F write_local_rs.F write_rec.F all_proc_die.F bar2.F bar_check.F barrier.F check_threads.F comm_stats.F cumulsum_z_tile.F diff_phase_multiple.F different_multiple.F eeboot.F eeboot_minimal.F eedata_example.F eedie.F eeintro_msg.F eeset_parms.F eewrite_eeenv.F exch0_r4.F exch0_r8.F exch0_rl.F exch0_rs.F exch1_bg_r4_cube.F exch1_bg_r8_cube.F exch1_bg_rl_cube.F exch1_bg_rs_cube.F exch1_r4.F exch1_r4_cube.F exch1_r8.F exch1_r8_cube.F exch1_rl.F exch1_rl_ad.F exch1_rl_cube.F exch1_rl_cube_ad.F exch1_rs.F exch1_rs_ad.F exch1_rs_cube.F exch1_rs_cube_ad.F exch1_uv_r4_cube.F exch1_uv_r8_cube.F exch1_uv_rl_cube.F exch1_uv_rs_cube.F exch1_z_r4_cube.F exch1_z_r8_cube.F exch1_z_rl_cube.F exch1_z_rs_cube.F exch_3d_r4.F exch_3d_r8.F exch_3d_rl.F exch_3d_rs.F exch_cycle_ebl.F exch_init.F exch_r4_recv_get_x.F exch_r4_recv_get_y.F exch_r4_send_put_x.F exch_r4_send_put_y.F exch_r8_recv_get_x.F exch_r8_recv_get_y.F exch_r8_send_put_x.F exch_r8_send_put_y.F exch_rl_recv_get_x.F exch_rl_recv_get_y.F exch_rl_send_put_x.F exch_rl_send_put_y.F exch_rs_recv_get_x.F exch_rs_recv_get_y.F exch_rs_send_put_x.F exch_rs_send_put_y.F exch_s3d_r4.F exch_s3d_r8.F exch_s3d_rl.F exch_s3d_rs.F exch_sm_3d_r4.F exch_sm_3d_r8.F exch_sm_3d_rl.F exch_sm_3d_rs.F exch_uv_3d_r4.F exch_uv_3d_r8.F exch_uv_3d_rl.F exch_uv_3d_rs.F exch_uv_agrid_3d_r4.F exch_uv_agrid_3d_r8.F exch_uv_agrid_3d_rl.F exch_uv_agrid_3d_rs.F exch_uv_bgrid_3d_r4.F exch_uv_bgrid_3d_r8.F exch_uv_bgrid_3d_rl.F exch_uv_bgrid_3d_rs.F exch_uv_dgrid_3d_r4.F exch_uv_dgrid_3d_r8.F exch_uv_dgrid_3d_rl.F exch_uv_dgrid_3d_rs.F exch_uv_xy_r4.F exch_uv_xy_r8.F exch_uv_xy_rl.F exch_uv_xy_rs.F exch_uv_xyz_r4.F exch_uv_xyz_r8.F exch_uv_xyz_rl.F exch_uv_xyz_rs.F exch_xy_r4.F exch_xy_r8.F exch_xy_rl.F exch_xy_rs.F exch_xyz_r4.F exch_xyz_r8.F exch_xyz_rl.F exch_xyz_rs.F exch_z_3d_r4.F exch_z_3d_r8.F exch_z_3d_rl.F exch_z_3d_rs.F fill_cs_corner_ag_rl.F fill_cs_corner_tr_rl.F fill_cs_corner_uv_rl.F fill_cs_corner_uv_rs.F fool_the_compiler.F gather_2d_r4.F gather_2d_r8.F gather_2d_wh_r4.F gather_2d_wh_r8.F gather_vec_r4.F gather_vec_r8.F gather_xz.F gather_yz.F get_periodic_interval.F global_max.F global_sum.F global_sum_singlecpu.F global_sum_tile.F global_vec_sum.F gsum.F ini_communication_patterns.F ini_procs.F ini_threading_environment.F lef_zero.F main.F master_cpu_io.F master_cpu_thread.F mds_byteswapi4.F mds_byteswapr4.F mds_byteswapr8.F mds_flush.F mds_reclen.F mdsfindunit.F memsync.F nml_change_syntax.F nml_set_terminator.F open_copy_data_file.F print.F reset_halo.F scatter_2d_r4.F scatter_2d_r8.F scatter_2d_wh_r4.F scatter_2d_wh_r8.F scatter_vec_r4.F scatter_vec_r8.F scatter_xz.F scatter_yz.F stop_if_error.F timers.F utils.F write_utils.F adams_bashforth2.F adams_bashforth3.F add_walls2masks.F apply_forcing.F calc_3d_diffusivity.F calc_adv_flow.F calc_div_ghat.F calc_eddy_stress.F calc_grad_phi_fv.F calc_grad_phi_hyd.F calc_grad_phi_surf.F calc_grid_angles.F calc_gw.F calc_ivdc.F calc_oce_mxlayer.F calc_phi_hyd.F calc_r_star.F calc_surf_dr.F calc_viscosity.F calc_wsurf_tr.F cg2d.F cg2d_ex0.F cg2d_nsa.F cg2d_sr.F cg3d.F cg3d_ex0.F check_pickup.F config_check.F config_summary.F convective_adjustment.F convective_adjustment_ini.F convective_weights.F convectively_mixtracer.F correction_step.F cycle_ab_tracer.F cycle_tracer.F diags_oceanic_surf_flux.F diags_phi_hyd.F diags_phi_rlow.F diags_rho.F diags_sound_speed.F do_atmospheric_phys.F do_fields_blocking_exchanges.F do_oceanic_phys.F do_stagger_fields_exchanges.F do_statevars_diags.F do_statevars_tave.F do_the_model_io.F do_write_pickup.F dynamics.F external_fields_load.F external_forcing.F external_forcing_surf.F find_alpha.F find_hyd_press_1d.F find_rho.F forcing_surf_relax.F forward_step.F freesurf_rescale_g.F freeze_surface.F grad_sigma.F gsw_teos10.F impldiff.F ini_cartesian_grid.F ini_cg2d.F ini_cg3d.F ini_cori.F ini_curvilinear_grid.F ini_cylinder_grid.F ini_depths.F ini_dynvars.F ini_eos.F ini_ffields.F ini_fields.F ini_forcing.F ini_global_domain.F ini_grid.F ini_linear_phisurf.F ini_local_grid.F ini_masks_etc.F ini_mixing.F ini_mnc_vars.F ini_model_io.F ini_nh_fields.F ini_nh_vars.F ini_nlfs_vars.F ini_p_ground.F ini_parms.F ini_pressure.F ini_psurf.F ini_salt.F ini_sigma_hfac.F ini_spherical_polar_grid.F ini_theta.F ini_vel.F ini_vertical_grid.F initialise_fixed.F initialise_varia.F integr_continuity.F integrate_for_w.F load_fields_driver.F load_grid_spacing.F load_ref_files.F main_do_loop.F momentum_correction_step.F packages_boot.F packages_check.F packages_error_msg.F packages_init_fixed.F packages_init_variables.F packages_print_msg.F packages_readparms.F packages_unused_msg.F packages_write_pickup.F plot_field.F port_rand.F post_cg3d.F pre_cg3d.F pressure_for_eos.F read_pickup.F remove_mean.F reset_nlfs_vars.F rotate_spherical_polar_grid.F rotate_uv2en.F salt_integrate.F seawater.F set_defaults.F set_grid_factors.F set_parms.F set_ref_state.F solve_for_pressure.F solve_pentadiagonal.F solve_tridiagonal.F solve_uv_tridiago.F state_summary.F swfrac.F taueddy_init_varia.F taueddy_tendency_apply.F temp_integrate.F the_main_loop.F the_model_main.F thermodynamics.F timestep.F timestep_tracer.F timestep_wvel.F tracers_correction_step.F tracers_iigw_correction.F turnoff_model_io.F update_cg2d.F update_etah.F update_etaws.F update_masks_etc.F update_r_star.F update_sigma.F update_surf_dr.F write_grid.F write_pickup.F write_state.F
mon_calc_stats_rl.F:13:54: warning: empty character constant [-Winvalid-pp-token]
C     Calculate statistics of global array ``\_RL arr''.
                                                     ^
1 warning generated.
mon_calc_stats_rs.F:13:54: warning: empty character constant [-Winvalid-pp-token]
C     Calculate statistics of global array ``\_RS arr''.
                                                     ^
1 warning generated.
mon_out.F:187:34: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_vname = ''', mon_vname(1:nvname), ''''
                                 ^
mon_out.F:187:59: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_vname = ''', mon_vname(1:nvname), ''''
                                                          ^
mon_out.F:187:61: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_vname = ''', mon_vname(1:nvname), ''''
                                                            ^
mon_out.F:188:38: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_mnc = ''', mon_write_mnc, ''''
                                     ^
mon_out.F:188:57: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_mnc = ''', mon_write_mnc, ''''
                                                        ^
mon_out.F:188:59: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_mnc = ''', mon_write_mnc, ''''
                                                          ^
mon_out.F:189:41: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_stdout = ''', mon_write_stdout, ''''
                                        ^
mon_out.F:189:63: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_stdout = ''', mon_write_stdout, ''''
                                                              ^
mon_out.F:189:65: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_stdout = ''', mon_write_stdout, ''''
                                                                ^
9 warnings generated.
mon_stats_rl.F:13:59: warning: empty character constant [-Winvalid-pp-token]
C     Calculate bare statistics of global array ``\_RL arr''.
                                                          ^
1 warning generated.
mon_stats_rs.F:14:59: warning: empty character constant [-Winvalid-pp-token]
C     Calculate bare statistics of global array ``\_RS arr''.
                                                          ^
1 warning generated.
mon_surfcor.F:13:27: warning: empty character constant [-Winvalid-pp-token]
C     ``surface correction'' with Linear FS).
                          ^
1 warning generated.
diags_sound_speed.F:19:27: warning: missing terminating '"' character [-Winvalid-pp-token]
C     | V. A. Del Grosso, "New equation for the speed of sound in
                          ^
diags_sound_speed.F:20:62: warning: missing terminating '"' character [-Winvalid-pp-token]
C     | natural waters (with comparisons to other equations),"
                                                             ^
2 warnings generated.
do_write_pickup.F:17:28: warning: empty character constant [-Winvalid-pp-token]
C     Both ``rolling-pickup'' files and permanent pickup files
                           ^
1 warning generated.
Appending dependencies to Makefile
../../../tools/f90mkdepend >> Makefile
rm -f makedepend.out
(MITgcm) Macs-MacBook-Pro:build mac$ make
Update AD_CONFIG.h and make ./mitgcmuv
ad_config.template AD_CONFIG.h differ: char 153, line 4
make -f Makefile ./mitgcmuv
cat cd_code_ini_vars.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cd_code_ini_vars.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cd_code_ini_vars.for
cat cd_code_init_fixed.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cd_code_init_fixed.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cd_code_init_fixed.for
cat cd_code_read_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cd_code_read_pickup.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cd_code_read_pickup.for
cat cd_code_scheme.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cd_code_scheme.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cd_code_scheme.for
cat cd_code_write_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cd_code_write_pickup.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cd_code_write_pickup.for
cat chksum_tiled.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > chksum_tiled.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c chksum_tiled.for
cat debug_call.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_call.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_call.for
cat debug_cs_corner_uv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_cs_corner_uv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_cs_corner_uv.for
cat debug_enter.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_enter.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_enter.for
cat debug_fld_stats_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_fld_stats_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_fld_stats_rl.for
cat debug_fld_stats_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_fld_stats_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_fld_stats_rs.for
cat debug_leave.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_leave.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_leave.for
cat debug_msg.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_msg.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_msg.for
cat debug_stats_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_stats_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_stats_rl.for
cat debug_stats_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > debug_stats_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c debug_stats_rs.for
cat fill_in_corners_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > fill_in_corners_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c fill_in_corners_rl.for
cat write_fullarray_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fullarray_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fullarray_rl.for
cat write_fullarray_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fullarray_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fullarray_rs.for
cat gad_advection.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_advection.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_advection.for
cat gad_advscheme.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_advscheme.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_advscheme.for
cat gad_biharm_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_biharm_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_biharm_r.for
cat gad_biharm_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_biharm_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_biharm_x.for
cat gad_biharm_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_biharm_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_biharm_y.for
cat gad_c2_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_c2_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_c2_adv_r.for
cat gad_c2_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_c2_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_c2_adv_x.for
cat gad_c2_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_c2_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_c2_adv_y.for
cat gad_c2_impl_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_c2_impl_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_c2_impl_r.for
cat gad_c4_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_c4_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_c4_adv_r.for
cat gad_c4_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_c4_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_c4_adv_x.for
cat gad_c4_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_c4_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_c4_adv_y.for
cat gad_calc_rhs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_calc_rhs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_calc_rhs.for
cat gad_check.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_check.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_check.for
cat gad_del2.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_del2.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_del2.for
cat gad_diagnostics_init.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_diagnostics_init.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_diagnostics_init.for
cat gad_diagnostics_state.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_diagnostics_state.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_diagnostics_state.for
cat gad_diff_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_diff_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_diff_r.for
cat gad_diff_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_diff_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_diff_x.for
cat gad_diff_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_diff_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_diff_y.for
cat gad_dst2u1_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst2u1_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst2u1_adv_r.for
cat gad_dst2u1_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst2u1_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst2u1_adv_x.for
cat gad_dst2u1_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst2u1_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst2u1_adv_y.for
cat gad_dst2u1_impl_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst2u1_impl_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst2u1_impl_r.for
cat gad_dst3_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst3_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst3_adv_r.for
cat gad_dst3_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst3_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst3_adv_x.for
cat gad_dst3_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst3_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst3_adv_y.for
cat gad_dst3fl_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst3fl_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst3fl_adv_r.for
cat gad_dst3fl_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst3fl_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst3fl_adv_x.for
cat gad_dst3fl_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst3fl_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst3fl_adv_y.for
cat gad_dst3fl_impl_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_dst3fl_impl_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_dst3fl_impl_r.for
cat gad_exch_som.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_exch_som.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_exch_som.for
cat gad_fluxlimit_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_fluxlimit_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_fluxlimit_adv_r.for
cat gad_fluxlimit_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_fluxlimit_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_fluxlimit_adv_x.for
cat gad_fluxlimit_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_fluxlimit_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_fluxlimit_adv_y.for
cat gad_fluxlimit_impl_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_fluxlimit_impl_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_fluxlimit_impl_r.for
cat gad_grad_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_grad_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_grad_x.for
cat gad_grad_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_grad_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_grad_y.for
cat gad_implicit_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_implicit_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_implicit_r.for
cat gad_init_fixed.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_init_fixed.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_init_fixed.for
cat gad_init_varia.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_init_varia.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_init_varia.for
cat gad_os7mp_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_os7mp_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_os7mp_adv_r.for
cat gad_os7mp_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_os7mp_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_os7mp_adv_x.for
cat gad_os7mp_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_os7mp_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_os7mp_adv_y.for
cat gad_osc_hat_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_osc_hat_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_osc_hat_r.for
cat gad_osc_hat_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_osc_hat_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_osc_hat_x.for
cat gad_osc_hat_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_osc_hat_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_osc_hat_y.for
cat gad_osc_mul_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_osc_mul_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_osc_mul_r.for
cat gad_osc_mul_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_osc_mul_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_osc_mul_x.for
cat gad_osc_mul_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_osc_mul_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_osc_mul_y.for
cat gad_plm_fun.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_plm_fun.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_plm_fun.for
cat gad_ppm_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_adv_r.for
cat gad_ppm_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_adv_x.for
cat gad_ppm_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_adv_y.for
cat gad_ppm_flx_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_flx_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_flx_r.for
cat gad_ppm_flx_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_flx_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_flx_x.for
cat gad_ppm_flx_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_flx_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_flx_y.for
cat gad_ppm_fun.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_fun.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_fun.for
cat gad_ppm_hat_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_hat_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_hat_r.for
cat gad_ppm_hat_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_hat_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_hat_x.for
cat gad_ppm_hat_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_hat_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_hat_y.for
cat gad_ppm_p3e_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_p3e_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_p3e_r.for
cat gad_ppm_p3e_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_p3e_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_p3e_x.for
cat gad_ppm_p3e_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_ppm_p3e_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_ppm_p3e_y.for
cat gad_pqm_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_adv_r.for
cat gad_pqm_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_adv_x.for
cat gad_pqm_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_adv_y.for
cat gad_pqm_flx_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_flx_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_flx_r.for
cat gad_pqm_flx_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_flx_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_flx_x.for
cat gad_pqm_flx_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_flx_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_flx_y.for
cat gad_pqm_fun.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_fun.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_fun.for
cat gad_pqm_hat_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_hat_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_hat_r.for
cat gad_pqm_hat_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_hat_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_hat_x.for
cat gad_pqm_hat_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_hat_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_hat_y.for
cat gad_pqm_p5e_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_p5e_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_p5e_r.for
cat gad_pqm_p5e_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_p5e_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_p5e_x.for
cat gad_pqm_p5e_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_pqm_p5e_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_pqm_p5e_y.for
cat gad_read_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_read_pickup.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_read_pickup.for
cat gad_som_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_som_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_som_adv_r.for
cat gad_som_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_som_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_som_adv_x.for
cat gad_som_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_som_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_som_adv_y.for
cat gad_som_advect.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_som_advect.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_som_advect.for
cat gad_som_exchanges.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_som_exchanges.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_som_exchanges.for
cat gad_som_fill_cs_corner.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_som_fill_cs_corner.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_som_fill_cs_corner.for
cat gad_som_lim_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_som_lim_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_som_lim_r.for
cat gad_som_prep_cs_corner.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_som_prep_cs_corner.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_som_prep_cs_corner.for
cat gad_u3_adv_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_u3_adv_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_u3_adv_r.for
cat gad_u3_adv_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_u3_adv_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_u3_adv_x.for
cat gad_u3_adv_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_u3_adv_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_u3_adv_y.for
cat gad_u3c4_impl_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_u3c4_impl_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_u3c4_impl_r.for
cat gad_write_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gad_write_pickup.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gad_write_pickup.for
cat salt_fill.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > salt_fill.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c salt_fill.for
cat mdsio_buffertorl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_buffertorl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_buffertorl.for
cat mdsio_buffertors.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_buffertors.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_buffertors.for
cat mdsio_check4file.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_check4file.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_check4file.for
cat mdsio_facef_read.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_facef_read.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_facef_read.for
cat mdsio_gl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_gl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_gl.for
cat mdsio_gl_slice.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_gl_slice.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_gl_slice.for
cat mdsio_pass_r4torl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_pass_r4torl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_pass_r4torl.for
cat mdsio_pass_r4tors.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_pass_r4tors.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_pass_r4tors.for
cat mdsio_pass_r8torl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_pass_r8torl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_pass_r8torl.for
cat mdsio_pass_r8tors.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_pass_r8tors.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_pass_r8tors.for
cat mdsio_rd_rec_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_rd_rec_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_rd_rec_rl.for
cat mdsio_rd_rec_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_rd_rec_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_rd_rec_rs.for
cat mdsio_read_field.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_read_field.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_read_field.for
cat mdsio_read_meta.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_read_meta.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_read_meta.for
cat mdsio_read_section.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_read_section.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_read_section.for
cat mdsio_read_tape.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_read_tape.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_read_tape.for
cat mdsio_read_whalos.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_read_whalos.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_read_whalos.for
cat mdsio_readvec_loc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_readvec_loc.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_readvec_loc.for
cat mdsio_rw_field.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_rw_field.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_rw_field.for
cat mdsio_rw_slice.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_rw_slice.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_rw_slice.for
cat mdsio_seg4torl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_seg4torl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_seg4torl.for
cat mdsio_seg4tors.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_seg4tors.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_seg4tors.for
cat mdsio_seg8torl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_seg8torl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_seg8torl.for
cat mdsio_seg8tors.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_seg8tors.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_seg8tors.for
cat mdsio_segxtorx_2d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_segxtorx_2d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_segxtorx_2d.for
cat mdsio_wr_metafiles.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_wr_metafiles.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_wr_metafiles.for
cat mdsio_wr_rec_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_wr_rec_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_wr_rec_rl.for
cat mdsio_wr_rec_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_wr_rec_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_wr_rec_rs.for
cat mdsio_write_field.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_write_field.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_write_field.for
cat mdsio_write_meta.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_write_meta.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_write_meta.for
cat mdsio_write_section.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_write_section.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_write_section.for
cat mdsio_write_tape.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_write_tape.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_write_tape.for
cat mdsio_write_whalos.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_write_whalos.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_write_whalos.for
cat mdsio_writelocal.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_writelocal.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_writelocal.for
cat mdsio_writevec_loc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsio_writevec_loc.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsio_writevec_loc.for
cat mom_calc_3d_strain.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_3d_strain.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_3d_strain.for
cat mom_calc_absvort3.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_absvort3.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_absvort3.for
cat mom_calc_hdiv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_hdiv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_hdiv.for
cat mom_calc_hfacz.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_hfacz.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_hfacz.for
cat mom_calc_ke.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_ke.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_ke.for
cat mom_calc_relvort3.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_relvort3.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_relvort3.for
cat mom_calc_smag_3d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_smag_3d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_smag_3d.for
cat mom_calc_strain.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_strain.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_strain.for
cat mom_calc_tension.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_tension.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_tension.for
cat mom_calc_visc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_visc.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_visc.for
cat mom_diagnostics_init.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_diagnostics_init.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_diagnostics_init.for
cat mom_hdissip.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_hdissip.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_hdissip.for
cat mom_init_fixed.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_init_fixed.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_init_fixed.for
cat mom_quasihydrostatic.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_quasihydrostatic.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_quasihydrostatic.for
cat mom_u_botdrag_coeff.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_botdrag_coeff.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_botdrag_coeff.for
cat mom_u_coriolis_nh.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_coriolis_nh.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_coriolis_nh.for
cat mom_u_implicit_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_implicit_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_implicit_r.for
cat mom_u_metric_nh.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_metric_nh.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_metric_nh.for
cat mom_u_rviscflux.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_rviscflux.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_rviscflux.for
cat mom_u_sidedrag.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_sidedrag.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_sidedrag.for
cat mom_uv_smag_3d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_uv_smag_3d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_uv_smag_3d.for
cat mom_v_botdrag_coeff.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_botdrag_coeff.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_botdrag_coeff.for
cat mom_v_coriolis_nh.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_coriolis_nh.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_coriolis_nh.for
cat mom_v_implicit_r.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_implicit_r.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_implicit_r.for
cat mom_v_metric_nh.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_metric_nh.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_metric_nh.for
cat mom_v_rviscflux.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_rviscflux.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_rviscflux.for
cat mom_v_sidedrag.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_sidedrag.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_sidedrag.for
cat mom_visc_qgl_limit.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_visc_qgl_limit.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_visc_qgl_limit.for
cat mom_visc_qgl_stretch.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_visc_qgl_stretch.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_visc_qgl_stretch.for
cat mom_w_coriolis_nh.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_w_coriolis_nh.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_w_coriolis_nh.for
cat mom_w_metric_nh.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_w_metric_nh.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_w_metric_nh.for
cat mom_w_sidedrag.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_w_sidedrag.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_w_sidedrag.for
cat mom_w_smag_3d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_w_smag_3d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_w_smag_3d.for
cat mom_calc_rtrans.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_calc_rtrans.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_calc_rtrans.for
cat mom_fluxform.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_fluxform.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_fluxform.for
cat mom_u_adv_uu.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_adv_uu.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_adv_uu.for
cat mom_u_adv_vu.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_adv_vu.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_adv_vu.for
cat mom_u_adv_wu.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_adv_wu.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_adv_wu.for
cat mom_u_coriolis.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_coriolis.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_coriolis.for
cat mom_u_del2u.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_del2u.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_del2u.for
cat mom_u_metric_cylinder.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_metric_cylinder.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_metric_cylinder.for
cat mom_u_metric_sphere.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_metric_sphere.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_metric_sphere.for
cat mom_u_xviscflux.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_xviscflux.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_xviscflux.for
cat mom_u_yviscflux.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_u_yviscflux.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_u_yviscflux.for
cat mom_uv_boundary.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_uv_boundary.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_uv_boundary.for
cat mom_v_adv_uv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_adv_uv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_adv_uv.for
cat mom_v_adv_vv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_adv_vv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_adv_vv.for
cat mom_v_adv_wv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_adv_wv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_adv_wv.for
cat mom_v_coriolis.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_coriolis.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_coriolis.for
cat mom_v_del2v.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_del2v.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_del2v.for
cat mom_v_metric_cylinder.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_metric_cylinder.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_metric_cylinder.for
cat mom_v_metric_sphere.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_metric_sphere.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_metric_sphere.for
cat mom_v_xviscflux.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_xviscflux.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_xviscflux.for
cat mom_v_yviscflux.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_v_yviscflux.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_v_yviscflux.for
cat mom_vecinv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vecinv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vecinv.for
cat mom_vi_coriolis.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_coriolis.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_coriolis.for
cat mom_vi_del2uv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_del2uv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_del2uv.for
cat mom_vi_hdissip.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_hdissip.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_hdissip.for
cat mom_vi_u_coriolis.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_u_coriolis.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_u_coriolis.for
cat mom_vi_u_coriolis_c4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_u_coriolis_c4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_u_coriolis_c4.for
cat mom_vi_u_grad_ke.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_u_grad_ke.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_u_grad_ke.for
cat mom_vi_u_vertshear.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_u_vertshear.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_u_vertshear.for
cat mom_vi_v_coriolis.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_v_coriolis.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_v_coriolis.for
cat mom_vi_v_coriolis_c4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_v_coriolis_c4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_v_coriolis_c4.for
cat mom_vi_v_grad_ke.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_v_grad_ke.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_v_grad_ke.for
cat mom_vi_v_vertshear.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mom_vi_v_vertshear.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mom_vi_v_vertshear.for
cat mon_advcfl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_advcfl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_advcfl.for
cat mon_advcflw.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_advcflw.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_advcflw.for
cat mon_advcflw2.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_advcflw2.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_advcflw2.for
cat mon_calc_advcfl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_calc_advcfl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_calc_advcfl.for
cat mon_calc_stats_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_calc_stats_rl.for
<stdin>:13:54: warning: empty character constant [-Winvalid-pp-token]
C     Calculate statistics of global array ``\_RL arr''.
                                                     ^
1 warning generated.
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_calc_stats_rl.for
cat mon_calc_stats_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_calc_stats_rs.for
<stdin>:13:54: warning: empty character constant [-Winvalid-pp-token]
C     Calculate statistics of global array ``\_RS arr''.
                                                     ^
1 warning generated.
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_calc_stats_rs.for
cat mon_init.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_init.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_init.for
cat mon_ke.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_ke.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_ke.for
cat mon_out.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_out.for
<stdin>:187:34: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_vname = ''', mon_vname(1:nvname), ''''
                                 ^
<stdin>:187:59: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_vname = ''', mon_vname(1:nvname), ''''
                                                          ^
<stdin>:187:61: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_vname = ''', mon_vname(1:nvname), ''''
                                                            ^
<stdin>:188:38: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_mnc = ''', mon_write_mnc, ''''
                                     ^
<stdin>:188:57: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_mnc = ''', mon_write_mnc, ''''
                                                        ^
<stdin>:188:59: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_mnc = ''', mon_write_mnc, ''''
                                                          ^
<stdin>:189:41: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_stdout = ''', mon_write_stdout, ''''
                                        ^
<stdin>:189:63: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_stdout = ''', mon_write_stdout, ''''
                                                              ^
<stdin>:189:65: warning: empty character constant [-Winvalid-pp-token]
C       write(*,*) 'mon_write_stdout = ''', mon_write_stdout, ''''
                                                                ^
9 warnings generated.
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_out.for
cat mon_printstats_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_printstats_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_printstats_rl.for
cat mon_printstats_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_printstats_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_printstats_rs.for
cat mon_set_iounit.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_set_iounit.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_set_iounit.for
cat mon_set_pref.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_set_pref.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_set_pref.for
cat mon_solution.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_solution.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_solution.for
cat mon_stats_latbnd_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_stats_latbnd_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_stats_latbnd_rl.for
cat mon_stats_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_stats_rl.for
<stdin>:13:59: warning: empty character constant [-Winvalid-pp-token]
C     Calculate bare statistics of global array ``\_RL arr''.
                                                          ^
1 warning generated.
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_stats_rl.for
cat mon_stats_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_stats_rs.for
<stdin>:14:59: warning: empty character constant [-Winvalid-pp-token]
C     Calculate bare statistics of global array ``\_RS arr''.
                                                          ^
1 warning generated.
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_stats_rs.for
cat mon_surfcor.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_surfcor.for
<stdin>:13:27: warning: empty character constant [-Winvalid-pp-token]
C     ``surface correction'' with Linear FS).
                          ^
1 warning generated.
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_surfcor.for
cat mon_vort3.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_vort3.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_vort3.for
cat mon_writestats_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_writestats_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_writestats_rl.for
cat mon_writestats_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mon_writestats_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mon_writestats_rs.for
cat monitor.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > monitor.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c monitor.for
cat monitor_ad.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > monitor_ad.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c monitor_ad.for
cat monitor_g.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > monitor_g.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c monitor_g.for
cat get_write_global_fld.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > get_write_global_fld.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c get_write_global_fld.for
cat read_fld_xy_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_fld_xy_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_fld_xy_rl.for
cat read_fld_xy_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_fld_xy_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_fld_xy_rs.for
cat read_fld_xyz_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_fld_xyz_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_fld_xyz_rl.for
cat read_fld_xyz_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_fld_xyz_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_fld_xyz_rs.for
cat read_glvec_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_glvec_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_glvec_rl.for
cat read_glvec_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_glvec_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_glvec_rs.for
cat read_mflds.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_mflds.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_mflds.for
cat read_rec.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_rec.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_rec.for
cat rw_get_suffix.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > rw_get_suffix.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c rw_get_suffix.for
cat set_write_global_fld.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > set_write_global_fld.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c set_write_global_fld.for
cat write_fld_3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fld_3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fld_3d_rl.for
cat write_fld_3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fld_3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fld_3d_rs.for
cat write_fld_s3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fld_s3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fld_s3d_rl.for
cat write_fld_s3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fld_s3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fld_s3d_rs.for
cat write_fld_xy_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fld_xy_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fld_xy_rl.for
cat write_fld_xy_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fld_xy_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fld_xy_rs.for
cat write_fld_xyz_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fld_xyz_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fld_xyz_rl.for
cat write_fld_xyz_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_fld_xyz_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_fld_xyz_rs.for
cat write_glvec_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_glvec_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_glvec_rl.for
cat write_glvec_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_glvec_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_glvec_rs.for
cat write_local_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_local_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_local_rl.for
cat write_local_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_local_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_local_rs.for
cat write_rec.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_rec.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_rec.for
cat all_proc_die.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > all_proc_die.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c all_proc_die.for
cat bar2.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > bar2.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c bar2.for
cat bar_check.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > bar_check.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c bar_check.for
cat barrier.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > barrier.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c barrier.for
cat check_threads.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > check_threads.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c check_threads.for
cat comm_stats.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > comm_stats.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c comm_stats.for
cat cumulsum_z_tile.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cumulsum_z_tile.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cumulsum_z_tile.for
cat diff_phase_multiple.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > diff_phase_multiple.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c diff_phase_multiple.for
cat different_multiple.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > different_multiple.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c different_multiple.for
cat eeboot.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > eeboot.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c eeboot.for
cat eeboot_minimal.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > eeboot_minimal.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c eeboot_minimal.for
cat eedata_example.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > eedata_example.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c eedata_example.for
cat eedie.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > eedie.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c eedie.for
cat eeintro_msg.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > eeintro_msg.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c eeintro_msg.for
cat eeset_parms.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > eeset_parms.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c eeset_parms.for
cat eewrite_eeenv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > eewrite_eeenv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c eewrite_eeenv.for
cat exch0_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch0_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch0_r4.for
cat exch0_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch0_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch0_r8.for
cat exch0_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch0_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch0_rl.for
cat exch0_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch0_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch0_rs.for
cat exch1_bg_r4_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_bg_r4_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_bg_r4_cube.for
cat exch1_bg_r8_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_bg_r8_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_bg_r8_cube.for
cat exch1_bg_rl_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_bg_rl_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_bg_rl_cube.for
cat exch1_bg_rs_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_bg_rs_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_bg_rs_cube.for
cat exch1_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_r4.for
cat exch1_r4_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_r4_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_r4_cube.for
cat exch1_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_r8.for
cat exch1_r8_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_r8_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_r8_cube.for
cat exch1_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_rl.for
cat exch1_rl_ad.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_rl_ad.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_rl_ad.for
cat exch1_rl_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_rl_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_rl_cube.for
cat exch1_rl_cube_ad.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_rl_cube_ad.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_rl_cube_ad.for
cat exch1_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_rs.for
cat exch1_rs_ad.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_rs_ad.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_rs_ad.for
cat exch1_rs_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_rs_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_rs_cube.for
cat exch1_rs_cube_ad.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_rs_cube_ad.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_rs_cube_ad.for
cat exch1_uv_r4_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_uv_r4_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_uv_r4_cube.for
cat exch1_uv_r8_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_uv_r8_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_uv_r8_cube.for
cat exch1_uv_rl_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_uv_rl_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_uv_rl_cube.for
cat exch1_uv_rs_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_uv_rs_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_uv_rs_cube.for
cat exch1_z_r4_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_z_r4_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_z_r4_cube.for
cat exch1_z_r8_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_z_r8_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_z_r8_cube.for
cat exch1_z_rl_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_z_rl_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_z_rl_cube.for
cat exch1_z_rs_cube.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch1_z_rs_cube.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch1_z_rs_cube.for
cat exch_3d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_3d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_3d_r4.for
cat exch_3d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_3d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_3d_r8.for
cat exch_3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_3d_rl.for
cat exch_3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_3d_rs.for
cat exch_cycle_ebl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_cycle_ebl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_cycle_ebl.for
cat exch_init.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_init.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_init.for
cat exch_r4_recv_get_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_r4_recv_get_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_r4_recv_get_x.for
cat exch_r4_recv_get_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_r4_recv_get_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_r4_recv_get_y.for
cat exch_r4_send_put_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_r4_send_put_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_r4_send_put_x.for
cat exch_r4_send_put_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_r4_send_put_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_r4_send_put_y.for
cat exch_r8_recv_get_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_r8_recv_get_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_r8_recv_get_x.for
cat exch_r8_recv_get_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_r8_recv_get_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_r8_recv_get_y.for
cat exch_r8_send_put_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_r8_send_put_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_r8_send_put_x.for
cat exch_r8_send_put_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_r8_send_put_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_r8_send_put_y.for
cat exch_rl_recv_get_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_rl_recv_get_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_rl_recv_get_x.for
cat exch_rl_recv_get_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_rl_recv_get_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_rl_recv_get_y.for
cat exch_rl_send_put_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_rl_send_put_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_rl_send_put_x.for
cat exch_rl_send_put_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_rl_send_put_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_rl_send_put_y.for
cat exch_rs_recv_get_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_rs_recv_get_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_rs_recv_get_x.for
cat exch_rs_recv_get_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_rs_recv_get_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_rs_recv_get_y.for
cat exch_rs_send_put_x.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_rs_send_put_x.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_rs_send_put_x.for
cat exch_rs_send_put_y.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_rs_send_put_y.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_rs_send_put_y.for
cat exch_s3d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_s3d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_s3d_r4.for
cat exch_s3d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_s3d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_s3d_r8.for
cat exch_s3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_s3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_s3d_rl.for
cat exch_s3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_s3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_s3d_rs.for
cat exch_sm_3d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_sm_3d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_sm_3d_r4.for
cat exch_sm_3d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_sm_3d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_sm_3d_r8.for
cat exch_sm_3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_sm_3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_sm_3d_rl.for
cat exch_sm_3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_sm_3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_sm_3d_rs.for
cat exch_uv_3d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_3d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_3d_r4.for
cat exch_uv_3d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_3d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_3d_r8.for
cat exch_uv_3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_3d_rl.for
cat exch_uv_3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_3d_rs.for
cat exch_uv_agrid_3d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_agrid_3d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_agrid_3d_r4.for
cat exch_uv_agrid_3d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_agrid_3d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_agrid_3d_r8.for
cat exch_uv_agrid_3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_agrid_3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_agrid_3d_rl.for
cat exch_uv_agrid_3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_agrid_3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_agrid_3d_rs.for
cat exch_uv_bgrid_3d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_bgrid_3d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_bgrid_3d_r4.for
cat exch_uv_bgrid_3d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_bgrid_3d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_bgrid_3d_r8.for
cat exch_uv_bgrid_3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_bgrid_3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_bgrid_3d_rl.for
cat exch_uv_bgrid_3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_bgrid_3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_bgrid_3d_rs.for
cat exch_uv_dgrid_3d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_dgrid_3d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_dgrid_3d_r4.for
cat exch_uv_dgrid_3d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_dgrid_3d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_dgrid_3d_r8.for
cat exch_uv_dgrid_3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_dgrid_3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_dgrid_3d_rl.for
cat exch_uv_dgrid_3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_dgrid_3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_dgrid_3d_rs.for
cat exch_uv_xy_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_xy_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_xy_r4.for
cat exch_uv_xy_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_xy_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_xy_r8.for
cat exch_uv_xy_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_xy_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_xy_rl.for
cat exch_uv_xy_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_xy_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_xy_rs.for
cat exch_uv_xyz_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_xyz_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_xyz_r4.for
cat exch_uv_xyz_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_xyz_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_xyz_r8.for
cat exch_uv_xyz_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_xyz_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_xyz_rl.for
cat exch_uv_xyz_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_uv_xyz_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_uv_xyz_rs.for
cat exch_xy_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_xy_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_xy_r4.for
cat exch_xy_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_xy_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_xy_r8.for
cat exch_xy_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_xy_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_xy_rl.for
cat exch_xy_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_xy_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_xy_rs.for
cat exch_xyz_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_xyz_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_xyz_r4.for
cat exch_xyz_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_xyz_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_xyz_r8.for
cat exch_xyz_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_xyz_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_xyz_rl.for
cat exch_xyz_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_xyz_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_xyz_rs.for
cat exch_z_3d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_z_3d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_z_3d_r4.for
cat exch_z_3d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_z_3d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_z_3d_r8.for
cat exch_z_3d_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_z_3d_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_z_3d_rl.for
cat exch_z_3d_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > exch_z_3d_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c exch_z_3d_rs.for
cat fill_cs_corner_ag_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > fill_cs_corner_ag_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c fill_cs_corner_ag_rl.for
cat fill_cs_corner_tr_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > fill_cs_corner_tr_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c fill_cs_corner_tr_rl.for
cat fill_cs_corner_uv_rl.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > fill_cs_corner_uv_rl.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c fill_cs_corner_uv_rl.for
cat fill_cs_corner_uv_rs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > fill_cs_corner_uv_rs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c fill_cs_corner_uv_rs.for
cat fool_the_compiler.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > fool_the_compiler.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c fool_the_compiler.for
cat gather_2d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gather_2d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gather_2d_r4.for
cat gather_2d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gather_2d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gather_2d_r8.for
cat gather_2d_wh_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gather_2d_wh_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gather_2d_wh_r4.for
cat gather_2d_wh_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gather_2d_wh_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gather_2d_wh_r8.for
cat gather_vec_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gather_vec_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gather_vec_r4.for
cat gather_vec_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gather_vec_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gather_vec_r8.for
cat gather_xz.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gather_xz.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gather_xz.for
cat gather_yz.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gather_yz.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gather_yz.for
cat get_periodic_interval.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > get_periodic_interval.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c get_periodic_interval.for
cat global_max.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > global_max.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c global_max.for
cat global_sum.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > global_sum.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c global_sum.for
cat global_sum_singlecpu.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > global_sum_singlecpu.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c global_sum_singlecpu.for
global_sum_singlecpu.for:1079:0:

       phiGSR8(1,0) = sumAll
 
Warning: ‘sumall’ may be used uninitialized in this function [-Wmaybe-uninitialized]
cat global_sum_tile.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > global_sum_tile.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c global_sum_tile.for
cat global_vec_sum.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > global_vec_sum.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c global_vec_sum.for
cat gsum.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gsum.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gsum.for
cat ini_communication_patterns.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_communication_patterns.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_communication_patterns.for
cat ini_procs.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_procs.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_procs.for
cat ini_threading_environment.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_threading_environment.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_threading_environment.for
cat lef_zero.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > lef_zero.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c lef_zero.for
cat main.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > main.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c main.for
cat master_cpu_io.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > master_cpu_io.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c master_cpu_io.for
cat master_cpu_thread.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > master_cpu_thread.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c master_cpu_thread.for
cat mds_byteswapi4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mds_byteswapi4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mds_byteswapi4.for
cat mds_byteswapr4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mds_byteswapr4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mds_byteswapr4.for
cat mds_byteswapr8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mds_byteswapr8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mds_byteswapr8.for
cat mds_flush.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mds_flush.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mds_flush.for
cat mds_reclen.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mds_reclen.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mds_reclen.for
cat mdsfindunit.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > mdsfindunit.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c mdsfindunit.for
cat memsync.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > memsync.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c memsync.for
cat nml_change_syntax.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > nml_change_syntax.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c nml_change_syntax.for
cat nml_set_terminator.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > nml_set_terminator.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c nml_set_terminator.for
cat open_copy_data_file.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > open_copy_data_file.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c open_copy_data_file.for
cat print.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > print.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c print.for
print.for:3782:0:

      &             )+1
 
Warning: ‘val’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3721:0:

         DO K=pltMin,pltMax,pltStr
 
Warning: ‘pltstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3505:0:

       INTEGER     accStep, dwnStep, pltStep
 
Warning: ‘pltstep’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3509:0:

       INTEGER     accMin,  dwnMin,  pltMin
 
Warning: ‘pltmin’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3510:0:

       INTEGER     accMax,  dwnMax,  pltMax
 
Warning: ‘pltmax’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3720:0:

        DO bk=pltBlo, pltBhi, pltBstr
 
Warning: ‘pltbstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3506:0:

       INTEGER     accBlo,  dwnBlo,  pltBlo
 
Warning: ‘pltblo’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3720:0:

        DO bk=pltBlo, pltBhi, pltBstr
 
Warning: ‘pltbhi’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3504:0:

       INTEGER     accBase, dwnBase, pltBase
 
Warning: ‘pltbase’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3765:0:

           DO J=dwnMin, dwnMax, dwnStr
 
Warning: ‘dwnstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3505:0:

       INTEGER     accStep, dwnStep, pltStep
 
Warning: ‘dwnstep’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3509:0:

       INTEGER     accMin,  dwnMin,  pltMin
 
Warning: ‘dwnmin’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3510:0:

       INTEGER     accMax,  dwnMax,  pltMax
 
Warning: ‘dwnmax’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3508:0:

       INTEGER     accBstr, dwnBstr, pltBstr
 
Warning: ‘dwnbstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3506:0:

       INTEGER     accBlo,  dwnBlo,  pltBlo
 
Warning: ‘dwnblo’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3507:0:

       INTEGER     accBhi,  dwnBhi,  pltBhi
 
Warning: ‘dwnbhi’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3504:0:

       INTEGER     accBase, dwnBase, pltBase
 
Warning: ‘dwnbase’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3770:0:

             DO I=accMin,accMax,accStr
 
Warning: ‘accstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3505:0:

       INTEGER     accStep, dwnStep, pltStep
 
Warning: ‘accstep’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3509:0:

       INTEGER     accMin,  dwnMin,  pltMin
 
Warning: ‘accmin’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3510:0:

       INTEGER     accMax,  dwnMax,  pltMax
 
Warning: ‘accmax’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3508:0:

       INTEGER     accBstr, dwnBstr, pltBstr
 
Warning: ‘accbstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3506:0:

       INTEGER     accBlo,  dwnBlo,  pltBlo
 
Warning: ‘accblo’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3507:0:

       INTEGER     accBhi,  dwnBhi,  pltBhi
 
Warning: ‘accbhi’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:3504:0:

       INTEGER     accBase, dwnBase, pltBase
 
Warning: ‘accbase’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4547:0:

      &              )+1
 
Warning: ‘val’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4488:0:

         DO K=pltMin,pltMax,pltStr
 
Warning: ‘pltstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4271:0:

       INTEGER     accStep, dwnStep, pltStep
 
Warning: ‘pltstep’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4275:0:

       INTEGER     accMin,  dwnMin,  pltMin
 
Warning: ‘pltmin’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4276:0:

       INTEGER     accMax,  dwnMax,  pltMax
 
Warning: ‘pltmax’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4487:0:

        DO bk=pltBlo, pltBhi, pltBstr
 
Warning: ‘pltbstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4272:0:

       INTEGER     accBlo,  dwnBlo,  pltBlo
 
Warning: ‘pltblo’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4487:0:

        DO bk=pltBlo, pltBhi, pltBstr
 
Warning: ‘pltbhi’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4270:0:

       INTEGER     accBase, dwnBase, pltBase
 
Warning: ‘pltbase’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4530:0:

           DO J=dwnMin, dwnMax, dwnStr
 
Warning: ‘dwnstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4271:0:

       INTEGER     accStep, dwnStep, pltStep
 
Warning: ‘dwnstep’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4275:0:

       INTEGER     accMin,  dwnMin,  pltMin
 
Warning: ‘dwnmin’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4276:0:

       INTEGER     accMax,  dwnMax,  pltMax
 
Warning: ‘dwnmax’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4274:0:

       INTEGER     accBstr, dwnBstr, pltBstr
 
Warning: ‘dwnbstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4272:0:

       INTEGER     accBlo,  dwnBlo,  pltBlo
 
Warning: ‘dwnblo’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4273:0:

       INTEGER     accBhi,  dwnBhi,  pltBhi
 
Warning: ‘dwnbhi’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4270:0:

       INTEGER     accBase, dwnBase, pltBase
 
Warning: ‘dwnbase’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4535:0:

             DO I=accMin,accMax,accStr
 
Warning: ‘accstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4271:0:

       INTEGER     accStep, dwnStep, pltStep
 
Warning: ‘accstep’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4275:0:

       INTEGER     accMin,  dwnMin,  pltMin
 
Warning: ‘accmin’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4276:0:

       INTEGER     accMax,  dwnMax,  pltMax
 
Warning: ‘accmax’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4274:0:

       INTEGER     accBstr, dwnBstr, pltBstr
 
Warning: ‘accbstr’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4272:0:

       INTEGER     accBlo,  dwnBlo,  pltBlo
 
Warning: ‘accblo’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4273:0:

       INTEGER     accBhi,  dwnBhi,  pltBhi
 
Warning: ‘accbhi’ may be used uninitialized in this function [-Wmaybe-uninitialized]
print.for:4270:0:

       INTEGER     accBase, dwnBase, pltBase
 
Warning: ‘accbase’ may be used uninitialized in this function [-Wmaybe-uninitialized]
cat reset_halo.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > reset_halo.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c reset_halo.for
cat scatter_2d_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > scatter_2d_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c scatter_2d_r4.for
cat scatter_2d_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > scatter_2d_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c scatter_2d_r8.for
cat scatter_2d_wh_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > scatter_2d_wh_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c scatter_2d_wh_r4.for
cat scatter_2d_wh_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > scatter_2d_wh_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c scatter_2d_wh_r8.for
cat scatter_vec_r4.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > scatter_vec_r4.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c scatter_vec_r4.for
cat scatter_vec_r8.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > scatter_vec_r8.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c scatter_vec_r8.for
cat scatter_xz.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > scatter_xz.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c scatter_xz.for
cat scatter_yz.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > scatter_yz.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c scatter_yz.for
cat stop_if_error.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > stop_if_error.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c stop_if_error.for
cat timers.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > timers.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c timers.for
cat utils.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > utils.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c utils.for
cat write_utils.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_utils.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_utils.for
cat adams_bashforth2.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > adams_bashforth2.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c adams_bashforth2.for
cat adams_bashforth3.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > adams_bashforth3.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c adams_bashforth3.for
cat add_walls2masks.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > add_walls2masks.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c add_walls2masks.for
cat apply_forcing.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > apply_forcing.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c apply_forcing.for
cat calc_3d_diffusivity.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_3d_diffusivity.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_3d_diffusivity.for
cat calc_adv_flow.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_adv_flow.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_adv_flow.for
cat calc_div_ghat.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_div_ghat.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_div_ghat.for
cat calc_eddy_stress.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_eddy_stress.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_eddy_stress.for
cat calc_grad_phi_fv.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_grad_phi_fv.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_grad_phi_fv.for
cat calc_grad_phi_hyd.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_grad_phi_hyd.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_grad_phi_hyd.for
cat calc_grad_phi_surf.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_grad_phi_surf.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_grad_phi_surf.for
cat calc_grid_angles.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_grid_angles.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_grid_angles.for
cat calc_gw.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_gw.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_gw.for
cat calc_ivdc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_ivdc.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_ivdc.for
cat calc_oce_mxlayer.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_oce_mxlayer.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_oce_mxlayer.for
cat calc_phi_hyd.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_phi_hyd.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_phi_hyd.for
cat calc_r_star.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_r_star.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_r_star.for
cat calc_surf_dr.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_surf_dr.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_surf_dr.for
cat calc_viscosity.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_viscosity.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_viscosity.for
cat calc_wsurf_tr.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > calc_wsurf_tr.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c calc_wsurf_tr.for
cat cg2d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cg2d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cg2d.for
cg2d.for:2093:0:

       Real*8    rhsNorm
 
Warning: ‘rhsnorm’ may be used uninitialized in this function [-Wmaybe-uninitialized]
cat cg2d_ex0.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cg2d_ex0.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cg2d_ex0.for
cat cg2d_nsa.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cg2d_nsa.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cg2d_nsa.for
cat cg2d_sr.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cg2d_sr.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cg2d_sr.for
cg2d_sr.for:2107:0:

       Real*8    rhsNorm
 
Warning: ‘rhsnorm’ may be used uninitialized in this function [-Wmaybe-uninitialized]
cat cg3d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cg3d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cg3d.for
cat cg3d_ex0.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cg3d_ex0.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cg3d_ex0.for
cat check_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > check_pickup.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c check_pickup.for
cat config_check.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > config_check.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c config_check.for
cat config_summary.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > config_summary.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c config_summary.for
cat convective_adjustment.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > convective_adjustment.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c convective_adjustment.for
cat convective_adjustment_ini.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > convective_adjustment_ini.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c convective_adjustment_ini.for
cat convective_weights.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > convective_weights.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c convective_weights.for
cat convectively_mixtracer.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > convectively_mixtracer.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c convectively_mixtracer.for
cat correction_step.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > correction_step.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c correction_step.for
cat cycle_ab_tracer.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cycle_ab_tracer.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cycle_ab_tracer.for
cat cycle_tracer.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > cycle_tracer.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c cycle_tracer.for
cat diags_oceanic_surf_flux.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > diags_oceanic_surf_flux.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c diags_oceanic_surf_flux.for
cat diags_phi_hyd.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > diags_phi_hyd.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c diags_phi_hyd.for
cat diags_phi_rlow.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > diags_phi_rlow.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c diags_phi_rlow.for
cat diags_rho.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > diags_rho.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c diags_rho.for
cat diags_sound_speed.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > diags_sound_speed.for
<stdin>:19:27: warning: missing terminating '"' character [-Winvalid-pp-token]
C     | V. A. Del Grosso, "New equation for the speed of sound in
                          ^
<stdin>:20:62: warning: missing terminating '"' character [-Winvalid-pp-token]
C     | natural waters (with comparisons to other equations),"
                                                             ^
2 warnings generated.
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c diags_sound_speed.for
cat do_atmospheric_phys.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > do_atmospheric_phys.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c do_atmospheric_phys.for
cat do_fields_blocking_exchanges.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > do_fields_blocking_exchanges.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c do_fields_blocking_exchanges.for
cat do_oceanic_phys.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > do_oceanic_phys.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c do_oceanic_phys.for
cat do_stagger_fields_exchanges.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > do_stagger_fields_exchanges.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c do_stagger_fields_exchanges.for
cat do_statevars_diags.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > do_statevars_diags.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c do_statevars_diags.for
cat do_statevars_tave.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > do_statevars_tave.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c do_statevars_tave.for
cat do_the_model_io.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > do_the_model_io.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c do_the_model_io.for
cat do_write_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > do_write_pickup.for
<stdin>:17:28: warning: empty character constant [-Winvalid-pp-token]
C     Both ``rolling-pickup'' files and permanent pickup files
                           ^
1 warning generated.
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c do_write_pickup.for
cat dynamics.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > dynamics.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c dynamics.for
cat external_fields_load.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > external_fields_load.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c external_fields_load.for
cat external_forcing.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > external_forcing.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c external_forcing.for
cat external_forcing_surf.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > external_forcing_surf.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c external_forcing_surf.for
cat find_alpha.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > find_alpha.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c find_alpha.for
cat find_hyd_press_1d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > find_hyd_press_1d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c find_hyd_press_1d.for
cat find_rho.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > find_rho.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c find_rho.for
cat forcing_surf_relax.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > forcing_surf_relax.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c forcing_surf_relax.for
cat forward_step.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > forward_step.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c forward_step.for
cat freesurf_rescale_g.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > freesurf_rescale_g.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c freesurf_rescale_g.for
cat freeze_surface.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > freeze_surface.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c freeze_surface.for
cat grad_sigma.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > grad_sigma.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c grad_sigma.for
cat gsw_teos10.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > gsw_teos10.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c gsw_teos10.for
cat impldiff.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > impldiff.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c impldiff.for
cat ini_cartesian_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_cartesian_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_cartesian_grid.for
cat ini_cg2d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_cg2d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_cg2d.for
cat ini_cg3d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_cg3d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_cg3d.for
cat ini_cori.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_cori.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_cori.for
cat ini_curvilinear_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_curvilinear_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_curvilinear_grid.for
cat ini_cylinder_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_cylinder_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_cylinder_grid.for
cat ini_depths.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_depths.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_depths.for
cat ini_dynvars.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_dynvars.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_dynvars.for
cat ini_eos.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_eos.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_eos.for
cat ini_ffields.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_ffields.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_ffields.for
cat ini_fields.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_fields.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_fields.for
cat ini_forcing.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_forcing.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_forcing.for
cat ini_global_domain.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_global_domain.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_global_domain.for
cat ini_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_grid.for
cat ini_linear_phisurf.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_linear_phisurf.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_linear_phisurf.for
cat ini_local_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_local_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_local_grid.for
cat ini_masks_etc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_masks_etc.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_masks_etc.for
cat ini_mixing.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_mixing.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_mixing.for
cat ini_mnc_vars.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_mnc_vars.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_mnc_vars.for
cat ini_model_io.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_model_io.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_model_io.for
cat ini_nh_fields.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_nh_fields.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_nh_fields.for
cat ini_nh_vars.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_nh_vars.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_nh_vars.for
cat ini_nlfs_vars.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_nlfs_vars.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_nlfs_vars.for
cat ini_p_ground.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_p_ground.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_p_ground.for
ini_p_ground.for:3906:0:

              Pfld(i,j,bi,bj) = psNorm*atm_Po
 
Warning: ‘psnorm’ may be used uninitialized in this function [-Wmaybe-uninitialized]
cat ini_parms.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_parms.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_parms.for
cat ini_pressure.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_pressure.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_pressure.for
cat ini_psurf.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_psurf.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_psurf.for
cat ini_salt.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_salt.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_salt.for
cat ini_sigma_hfac.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_sigma_hfac.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_sigma_hfac.for
cat ini_spherical_polar_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_spherical_polar_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_spherical_polar_grid.for
cat ini_theta.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_theta.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_theta.for
cat ini_vel.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_vel.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_vel.for
cat ini_vertical_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > ini_vertical_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c ini_vertical_grid.for
cat initialise_fixed.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > initialise_fixed.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c initialise_fixed.for
cat initialise_varia.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > initialise_varia.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c initialise_varia.for
cat integr_continuity.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > integr_continuity.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c integr_continuity.for
cat integrate_for_w.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > integrate_for_w.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c integrate_for_w.for
cat load_fields_driver.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > load_fields_driver.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c load_fields_driver.for
cat load_grid_spacing.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > load_grid_spacing.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c load_grid_spacing.for
cat load_ref_files.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > load_ref_files.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c load_ref_files.for
cat main_do_loop.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > main_do_loop.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c main_do_loop.for
cat momentum_correction_step.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > momentum_correction_step.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c momentum_correction_step.for
cat packages_boot.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_boot.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_boot.for
cat packages_check.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_check.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_check.for
cat packages_error_msg.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_error_msg.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_error_msg.for
cat packages_init_fixed.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_init_fixed.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_init_fixed.for
cat packages_init_variables.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_init_variables.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_init_variables.for
cat packages_print_msg.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_print_msg.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_print_msg.for
cat packages_readparms.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_readparms.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_readparms.for
cat packages_unused_msg.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_unused_msg.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_unused_msg.for
cat packages_write_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > packages_write_pickup.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c packages_write_pickup.for
cat plot_field.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > plot_field.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c plot_field.for
cat port_rand.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > port_rand.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c port_rand.for
port_rand.for:170:0:

       port_rand_norm = t*x1
 
Warning: ‘x1’ may be used uninitialized in this function [-Wmaybe-uninitialized]
cat post_cg3d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > post_cg3d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c post_cg3d.for
cat pre_cg3d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > pre_cg3d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c pre_cg3d.for
cat pressure_for_eos.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > pressure_for_eos.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c pressure_for_eos.for
cat read_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > read_pickup.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c read_pickup.for
cat remove_mean.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > remove_mean.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c remove_mean.for
cat reset_nlfs_vars.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > reset_nlfs_vars.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c reset_nlfs_vars.for
cat rotate_spherical_polar_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > rotate_spherical_polar_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c rotate_spherical_polar_grid.for
cat rotate_uv2en.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > rotate_uv2en.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c rotate_uv2en.for
cat salt_integrate.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > salt_integrate.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c salt_integrate.for
cat seawater.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > seawater.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c seawater.for
cat set_defaults.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > set_defaults.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c set_defaults.for
cat set_grid_factors.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > set_grid_factors.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c set_grid_factors.for
cat set_parms.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > set_parms.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c set_parms.for
cat set_ref_state.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > set_ref_state.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c set_ref_state.for
cat solve_for_pressure.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > solve_for_pressure.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c solve_for_pressure.for
cat solve_pentadiagonal.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > solve_pentadiagonal.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c solve_pentadiagonal.for
cat solve_tridiagonal.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > solve_tridiagonal.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c solve_tridiagonal.for
cat solve_uv_tridiago.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > solve_uv_tridiago.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c solve_uv_tridiago.for
cat state_summary.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > state_summary.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c state_summary.for
cat swfrac.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > swfrac.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c swfrac.for
cat taueddy_init_varia.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > taueddy_init_varia.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c taueddy_init_varia.for
cat taueddy_tendency_apply.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > taueddy_tendency_apply.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c taueddy_tendency_apply.for
cat temp_integrate.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > temp_integrate.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c temp_integrate.for
cat the_main_loop.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > the_main_loop.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c the_main_loop.for
cat the_model_main.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > the_model_main.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c the_model_main.for
cat thermodynamics.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > thermodynamics.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c thermodynamics.for
cat timestep.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > timestep.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c timestep.for
cat timestep_tracer.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > timestep_tracer.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c timestep_tracer.for
cat timestep_wvel.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > timestep_wvel.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c timestep_wvel.for
cat tracers_correction_step.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > tracers_correction_step.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c tracers_correction_step.for
cat tracers_iigw_correction.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > tracers_iigw_correction.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c tracers_iigw_correction.for
cat turnoff_model_io.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > turnoff_model_io.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c turnoff_model_io.for
cat update_cg2d.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > update_cg2d.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c update_cg2d.for
cat update_etah.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > update_etah.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c update_etah.for
cat update_etaws.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > update_etaws.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c update_etaws.for
cat update_masks_etc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > update_masks_etc.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c update_masks_etc.for
cat update_r_star.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > update_r_star.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c update_r_star.for
cat update_sigma.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > update_sigma.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c update_sigma.for
cat update_surf_dr.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > update_surf_dr.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c update_surf_dr.for
cat write_grid.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_grid.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_grid.for
cat write_pickup.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_pickup.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_pickup.for
cat write_state.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   | ../../../tools/set64bitConst.sh  > write_state.for
gfortran -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  -c write_state.for
gcc  -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   -c gsl_ieee_env.c
gcc  -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   -c ptwrapper.c
gcc  -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   -c setdir.c
gcc  -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   -c setrlstk.c
gcc  -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   -c sigreg.c
gcc  -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   -c tim.c
gcc  -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -DHAVE_FLUSH   -c timer_stats.c
Creating mitgcmuv ...
gfortran  -o mitgcmuv -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops  cd_code_ini_vars.o cd_code_init_fixed.o cd_code_read_pickup.o cd_code_scheme.o cd_code_write_pickup.o chksum_tiled.o debug_call.o debug_cs_corner_uv.o debug_enter.o debug_fld_stats_rl.o debug_fld_stats_rs.o debug_leave.o debug_msg.o debug_stats_rl.o debug_stats_rs.o fill_in_corners_rl.o write_fullarray_rl.o write_fullarray_rs.o gad_advection.o gad_advscheme.o gad_biharm_r.o gad_biharm_x.o gad_biharm_y.o gad_c2_adv_r.o gad_c2_adv_x.o gad_c2_adv_y.o gad_c2_impl_r.o gad_c4_adv_r.o gad_c4_adv_x.o gad_c4_adv_y.o gad_calc_rhs.o gad_check.o gad_del2.o gad_diagnostics_init.o gad_diagnostics_state.o gad_diff_r.o gad_diff_x.o gad_diff_y.o gad_dst2u1_adv_r.o gad_dst2u1_adv_x.o gad_dst2u1_adv_y.o gad_dst2u1_impl_r.o gad_dst3_adv_r.o gad_dst3_adv_x.o gad_dst3_adv_y.o gad_dst3fl_adv_r.o gad_dst3fl_adv_x.o gad_dst3fl_adv_y.o gad_dst3fl_impl_r.o gad_exch_som.o gad_fluxlimit_adv_r.o gad_fluxlimit_adv_x.o gad_fluxlimit_adv_y.o gad_fluxlimit_impl_r.o gad_grad_x.o gad_grad_y.o gad_implicit_r.o gad_init_fixed.o gad_init_varia.o gad_os7mp_adv_r.o gad_os7mp_adv_x.o gad_os7mp_adv_y.o gad_osc_hat_r.o gad_osc_hat_x.o gad_osc_hat_y.o gad_osc_mul_r.o gad_osc_mul_x.o gad_osc_mul_y.o gad_plm_fun.o gad_ppm_adv_r.o gad_ppm_adv_x.o gad_ppm_adv_y.o gad_ppm_flx_r.o gad_ppm_flx_x.o gad_ppm_flx_y.o gad_ppm_fun.o gad_ppm_hat_r.o gad_ppm_hat_x.o gad_ppm_hat_y.o gad_ppm_p3e_r.o gad_ppm_p3e_x.o gad_ppm_p3e_y.o gad_pqm_adv_r.o gad_pqm_adv_x.o gad_pqm_adv_y.o gad_pqm_flx_r.o gad_pqm_flx_x.o gad_pqm_flx_y.o gad_pqm_fun.o gad_pqm_hat_r.o gad_pqm_hat_x.o gad_pqm_hat_y.o gad_pqm_p5e_r.o gad_pqm_p5e_x.o gad_pqm_p5e_y.o gad_read_pickup.o gad_som_adv_r.o gad_som_adv_x.o gad_som_adv_y.o gad_som_advect.o gad_som_exchanges.o gad_som_fill_cs_corner.o gad_som_lim_r.o gad_som_prep_cs_corner.o gad_u3_adv_r.o gad_u3_adv_x.o gad_u3_adv_y.o gad_u3c4_impl_r.o gad_write_pickup.o salt_fill.o mdsio_buffertorl.o mdsio_buffertors.o mdsio_check4file.o mdsio_facef_read.o mdsio_gl.o mdsio_gl_slice.o mdsio_pass_r4torl.o mdsio_pass_r4tors.o mdsio_pass_r8torl.o mdsio_pass_r8tors.o mdsio_rd_rec_rl.o mdsio_rd_rec_rs.o mdsio_read_field.o mdsio_read_meta.o mdsio_read_section.o mdsio_read_tape.o mdsio_read_whalos.o mdsio_readvec_loc.o mdsio_rw_field.o mdsio_rw_slice.o mdsio_seg4torl.o mdsio_seg4tors.o mdsio_seg8torl.o mdsio_seg8tors.o mdsio_segxtorx_2d.o mdsio_wr_metafiles.o mdsio_wr_rec_rl.o mdsio_wr_rec_rs.o mdsio_write_field.o mdsio_write_meta.o mdsio_write_section.o mdsio_write_tape.o mdsio_write_whalos.o mdsio_writelocal.o mdsio_writevec_loc.o mom_calc_3d_strain.o mom_calc_absvort3.o mom_calc_hdiv.o mom_calc_hfacz.o mom_calc_ke.o mom_calc_relvort3.o mom_calc_smag_3d.o mom_calc_strain.o mom_calc_tension.o mom_calc_visc.o mom_diagnostics_init.o mom_hdissip.o mom_init_fixed.o mom_quasihydrostatic.o mom_u_botdrag_coeff.o mom_u_coriolis_nh.o mom_u_implicit_r.o mom_u_metric_nh.o mom_u_rviscflux.o mom_u_sidedrag.o mom_uv_smag_3d.o mom_v_botdrag_coeff.o mom_v_coriolis_nh.o mom_v_implicit_r.o mom_v_metric_nh.o mom_v_rviscflux.o mom_v_sidedrag.o mom_visc_qgl_limit.o mom_visc_qgl_stretch.o mom_w_coriolis_nh.o mom_w_metric_nh.o mom_w_sidedrag.o mom_w_smag_3d.o mom_calc_rtrans.o mom_fluxform.o mom_u_adv_uu.o mom_u_adv_vu.o mom_u_adv_wu.o mom_u_coriolis.o mom_u_del2u.o mom_u_metric_cylinder.o mom_u_metric_sphere.o mom_u_xviscflux.o mom_u_yviscflux.o mom_uv_boundary.o mom_v_adv_uv.o mom_v_adv_vv.o mom_v_adv_wv.o mom_v_coriolis.o mom_v_del2v.o mom_v_metric_cylinder.o mom_v_metric_sphere.o mom_v_xviscflux.o mom_v_yviscflux.o mom_vecinv.o mom_vi_coriolis.o mom_vi_del2uv.o mom_vi_hdissip.o mom_vi_u_coriolis.o mom_vi_u_coriolis_c4.o mom_vi_u_grad_ke.o mom_vi_u_vertshear.o mom_vi_v_coriolis.o mom_vi_v_coriolis_c4.o mom_vi_v_grad_ke.o mom_vi_v_vertshear.o mon_advcfl.o mon_advcflw.o mon_advcflw2.o mon_calc_advcfl.o mon_calc_stats_rl.o mon_calc_stats_rs.o mon_init.o mon_ke.o mon_out.o mon_printstats_rl.o mon_printstats_rs.o mon_set_iounit.o mon_set_pref.o mon_solution.o mon_stats_latbnd_rl.o mon_stats_rl.o mon_stats_rs.o mon_surfcor.o mon_vort3.o mon_writestats_rl.o mon_writestats_rs.o monitor.o monitor_ad.o monitor_g.o get_write_global_fld.o read_fld_xy_rl.o read_fld_xy_rs.o read_fld_xyz_rl.o read_fld_xyz_rs.o read_glvec_rl.o read_glvec_rs.o read_mflds.o read_rec.o rw_get_suffix.o set_write_global_fld.o write_fld_3d_rl.o write_fld_3d_rs.o write_fld_s3d_rl.o write_fld_s3d_rs.o write_fld_xy_rl.o write_fld_xy_rs.o write_fld_xyz_rl.o write_fld_xyz_rs.o write_glvec_rl.o write_glvec_rs.o write_local_rl.o write_local_rs.o write_rec.o all_proc_die.o bar2.o bar_check.o barrier.o check_threads.o comm_stats.o cumulsum_z_tile.o diff_phase_multiple.o different_multiple.o eeboot.o eeboot_minimal.o eedata_example.o eedie.o eeintro_msg.o eeset_parms.o eewrite_eeenv.o exch0_r4.o exch0_r8.o exch0_rl.o exch0_rs.o exch1_bg_r4_cube.o exch1_bg_r8_cube.o exch1_bg_rl_cube.o exch1_bg_rs_cube.o exch1_r4.o exch1_r4_cube.o exch1_r8.o exch1_r8_cube.o exch1_rl.o exch1_rl_ad.o exch1_rl_cube.o exch1_rl_cube_ad.o exch1_rs.o exch1_rs_ad.o exch1_rs_cube.o exch1_rs_cube_ad.o exch1_uv_r4_cube.o exch1_uv_r8_cube.o exch1_uv_rl_cube.o exch1_uv_rs_cube.o exch1_z_r4_cube.o exch1_z_r8_cube.o exch1_z_rl_cube.o exch1_z_rs_cube.o exch_3d_r4.o exch_3d_r8.o exch_3d_rl.o exch_3d_rs.o exch_cycle_ebl.o exch_init.o exch_r4_recv_get_x.o exch_r4_recv_get_y.o exch_r4_send_put_x.o exch_r4_send_put_y.o exch_r8_recv_get_x.o exch_r8_recv_get_y.o exch_r8_send_put_x.o exch_r8_send_put_y.o exch_rl_recv_get_x.o exch_rl_recv_get_y.o exch_rl_send_put_x.o exch_rl_send_put_y.o exch_rs_recv_get_x.o exch_rs_recv_get_y.o exch_rs_send_put_x.o exch_rs_send_put_y.o exch_s3d_r4.o exch_s3d_r8.o exch_s3d_rl.o exch_s3d_rs.o exch_sm_3d_r4.o exch_sm_3d_r8.o exch_sm_3d_rl.o exch_sm_3d_rs.o exch_uv_3d_r4.o exch_uv_3d_r8.o exch_uv_3d_rl.o exch_uv_3d_rs.o exch_uv_agrid_3d_r4.o exch_uv_agrid_3d_r8.o exch_uv_agrid_3d_rl.o exch_uv_agrid_3d_rs.o exch_uv_bgrid_3d_r4.o exch_uv_bgrid_3d_r8.o exch_uv_bgrid_3d_rl.o exch_uv_bgrid_3d_rs.o exch_uv_dgrid_3d_r4.o exch_uv_dgrid_3d_r8.o exch_uv_dgrid_3d_rl.o exch_uv_dgrid_3d_rs.o exch_uv_xy_r4.o exch_uv_xy_r8.o exch_uv_xy_rl.o exch_uv_xy_rs.o exch_uv_xyz_r4.o exch_uv_xyz_r8.o exch_uv_xyz_rl.o exch_uv_xyz_rs.o exch_xy_r4.o exch_xy_r8.o exch_xy_rl.o exch_xy_rs.o exch_xyz_r4.o exch_xyz_r8.o exch_xyz_rl.o exch_xyz_rs.o exch_z_3d_r4.o exch_z_3d_r8.o exch_z_3d_rl.o exch_z_3d_rs.o fill_cs_corner_ag_rl.o fill_cs_corner_tr_rl.o fill_cs_corner_uv_rl.o fill_cs_corner_uv_rs.o fool_the_compiler.o gather_2d_r4.o gather_2d_r8.o gather_2d_wh_r4.o gather_2d_wh_r8.o gather_vec_r4.o gather_vec_r8.o gather_xz.o gather_yz.o get_periodic_interval.o global_max.o global_sum.o global_sum_singlecpu.o global_sum_tile.o global_vec_sum.o gsum.o ini_communication_patterns.o ini_procs.o ini_threading_environment.o lef_zero.o main.o master_cpu_io.o master_cpu_thread.o mds_byteswapi4.o mds_byteswapr4.o mds_byteswapr8.o mds_flush.o mds_reclen.o mdsfindunit.o memsync.o nml_change_syntax.o nml_set_terminator.o open_copy_data_file.o print.o reset_halo.o scatter_2d_r4.o scatter_2d_r8.o scatter_2d_wh_r4.o scatter_2d_wh_r8.o scatter_vec_r4.o scatter_vec_r8.o scatter_xz.o scatter_yz.o stop_if_error.o timers.o utils.o write_utils.o adams_bashforth2.o adams_bashforth3.o add_walls2masks.o apply_forcing.o calc_3d_diffusivity.o calc_adv_flow.o calc_div_ghat.o calc_eddy_stress.o calc_grad_phi_fv.o calc_grad_phi_hyd.o calc_grad_phi_surf.o calc_grid_angles.o calc_gw.o calc_ivdc.o calc_oce_mxlayer.o calc_phi_hyd.o calc_r_star.o calc_surf_dr.o calc_viscosity.o calc_wsurf_tr.o cg2d.o cg2d_ex0.o cg2d_nsa.o cg2d_sr.o cg3d.o cg3d_ex0.o check_pickup.o config_check.o config_summary.o convective_adjustment.o convective_adjustment_ini.o convective_weights.o convectively_mixtracer.o correction_step.o cycle_ab_tracer.o cycle_tracer.o diags_oceanic_surf_flux.o diags_phi_hyd.o diags_phi_rlow.o diags_rho.o diags_sound_speed.o do_atmospheric_phys.o do_fields_blocking_exchanges.o do_oceanic_phys.o do_stagger_fields_exchanges.o do_statevars_diags.o do_statevars_tave.o do_the_model_io.o do_write_pickup.o dynamics.o external_fields_load.o external_forcing.o external_forcing_surf.o find_alpha.o find_hyd_press_1d.o find_rho.o forcing_surf_relax.o forward_step.o freesurf_rescale_g.o freeze_surface.o grad_sigma.o gsw_teos10.o impldiff.o ini_cartesian_grid.o ini_cg2d.o ini_cg3d.o ini_cori.o ini_curvilinear_grid.o ini_cylinder_grid.o ini_depths.o ini_dynvars.o ini_eos.o ini_ffields.o ini_fields.o ini_forcing.o ini_global_domain.o ini_grid.o ini_linear_phisurf.o ini_local_grid.o ini_masks_etc.o ini_mixing.o ini_mnc_vars.o ini_model_io.o ini_nh_fields.o ini_nh_vars.o ini_nlfs_vars.o ini_p_ground.o ini_parms.o ini_pressure.o ini_psurf.o ini_salt.o ini_sigma_hfac.o ini_spherical_polar_grid.o ini_theta.o ini_vel.o ini_vertical_grid.o initialise_fixed.o initialise_varia.o integr_continuity.o integrate_for_w.o load_fields_driver.o load_grid_spacing.o load_ref_files.o main_do_loop.o momentum_correction_step.o packages_boot.o packages_check.o packages_error_msg.o packages_init_fixed.o packages_init_variables.o packages_print_msg.o packages_readparms.o packages_unused_msg.o packages_write_pickup.o plot_field.o port_rand.o post_cg3d.o pre_cg3d.o pressure_for_eos.o read_pickup.o remove_mean.o reset_nlfs_vars.o rotate_spherical_polar_grid.o rotate_uv2en.o salt_integrate.o seawater.o set_defaults.o set_grid_factors.o set_parms.o set_ref_state.o solve_for_pressure.o solve_pentadiagonal.o solve_tridiagonal.o solve_uv_tridiago.o state_summary.o swfrac.o taueddy_init_varia.o taueddy_tendency_apply.o temp_integrate.o the_main_loop.o the_model_main.o thermodynamics.o timestep.o timestep_tracer.o timestep_wvel.o tracers_correction_step.o tracers_iigw_correction.o turnoff_model_io.o update_cg2d.o update_etah.o update_etaws.o update_masks_etc.o update_r_star.o update_sigma.o update_surf_dr.o write_grid.o write_pickup.o write_state.o gsl_ieee_env.o ptwrapper.o setdir.o setrlstk.o sigreg.o tim.o timer_stats.o  
(MITgcm) Macs-MacBook-Pro:build mac$ % cd ../run
-bash: fg: %: no such job
(MITgcm) Macs-MacBook-Pro:build mac$ % ln -s ../input/* .
-bash: fg: %: no such job
(MITgcm) Macs-MacBook-Pro:build mac$ % cp ../build/mitgcmuv .
-bash: fg: %: no such job
(MITgcm) Macs-MacBook-Pro:build mac$ % cd ../run
-bash: fg: %: no such job
(MITgcm) Macs-MacBook-Pro:build mac$ cd ../run
(MITgcm) Macs-MacBook-Pro:run mac$ ln -s ../input/* .
(MITgcm) Macs-MacBook-Pro:run mac$  cp ../build/mitgcmuv .
(MITgcm) Macs-MacBook-Pro:run mac$ ./mitgcmuv
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint68i
(PID.TID 0000.0001) // Build user:        mac
(PID.TID 0000.0001) // Build host:        Macs-MacBook-Pro.local
(PID.TID 0000.0001) // Build date:        Wed Jun  1 13:37:35 CDT 2022
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > nTx=1,
(PID.TID 0000.0001) > nTy=1,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the
(PID.TID 0000.0001) ># namelist terminator. Other systems
(PID.TID 0000.0001) ># use a / character (as shown here).
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    1 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    2 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    2 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =   45 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =   20 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    2 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    2 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =   20 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =   90 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =   40 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    4 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    1 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    F ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=   F ; /* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) useNest2W_parent =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) useNest2W_child  =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   2,   1:   2)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //       NORTH: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) // Tile number: 000002 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //       NORTH: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) // Tile number: 000003 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //        EAST: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) // Tile number: 000004 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //        EAST: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //       SOUTH: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) ># | Model parameters |
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > tRef= 16.0 , 15.2 , 14.5 , 13.9 , 13.3 ,
(PID.TID 0000.0001) >       12.4 , 11.3 ,  9.9 ,  8.4 ,  6.7 ,
(PID.TID 0000.0001) >        5.2 ,  3.8 ,  2.9 ,  2.3 ,  1.8 ,
(PID.TID 0000.0001) >        1.5 ,  1.1 ,  0.8 ,  0.66,  0.63,
(PID.TID 0000.0001) > sRef= 34.65, 34.75, 34.82, 34.87, 34.90,
(PID.TID 0000.0001) >       34.90, 34.86, 34.78, 34.69, 34.60,
(PID.TID 0000.0001) >       34.58, 34.62, 34.68, 34.72, 34.73,
(PID.TID 0000.0001) >       34.74, 34.73, 34.73, 34.72, 34.72,
(PID.TID 0000.0001) > viscAz=1.E-3,
(PID.TID 0000.0001) > viscAh=5.E5,
(PID.TID 0000.0001) > no_slip_sides=.FALSE.,
(PID.TID 0000.0001) > no_slip_bottom=.TRUE.,
(PID.TID 0000.0001) > diffKhT=1.E3,
(PID.TID 0000.0001) > diffKzT=3.E-5,
(PID.TID 0000.0001) > diffKhS=1.E3,
(PID.TID 0000.0001) > diffKzS=3.E-5,
(PID.TID 0000.0001) > tAlpha=2.E-4,
(PID.TID 0000.0001) > sBeta =7.4E-4,
(PID.TID 0000.0001) > rotationPeriod=86400.,
(PID.TID 0000.0001) > gravity=9.81,
(PID.TID 0000.0001) > rigidLid=.FALSE.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) > useCDscheme=.TRUE.,
(PID.TID 0000.0001) > useNHMTerms=.TRUE.,
(PID.TID 0000.0001) > eosType='LINEAR',
(PID.TID 0000.0001) > readBinaryPrec=32,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dMaxIters=1000,
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-13,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) > startTime=0,
(PID.TID 0000.0001) >#endTime=3110400000,
(PID.TID 0000.0001) > endTime=2808000.,
(PID.TID 0000.0001) > deltaTmom=2400.0,
(PID.TID 0000.0001) > tauCD=321428.,
(PID.TID 0000.0001) > deltaTtracer=108000.0,
(PID.TID 0000.0001) > deltaTClock =108000.0,
(PID.TID 0000.0001) > cAdjFreq=-1.,
(PID.TID 0000.0001) > abEps=0.1,
(PID.TID 0000.0001) > pChkptFreq=0.0,
(PID.TID 0000.0001) > chkptFreq=0.0,
(PID.TID 0000.0001) > dumpFreq=2592000.0,
(PID.TID 0000.0001) > tauThetaClimRelax=2592000.0,
(PID.TID 0000.0001) > tauSaltClimRelax=2592000.0,
(PID.TID 0000.0001) > monitorSelect=2,
(PID.TID 0000.0001) > monitorFreq=1.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingSphericalPolarGrid=.TRUE.,
(PID.TID 0000.0001) > delZ= 5.000000e+01, 5.000000e+01, 5.500000e+01, 6.000000e+01,
(PID.TID 0000.0001) >       6.500000e+01, 7.000000e+01, 8.000000e+01, 9.500000e+01,
(PID.TID 0000.0001) >       1.200000e+02, 1.550000e+02, 2.000000e+02, 2.600000e+02,
(PID.TID 0000.0001) >       3.200000e+02, 4.000000e+02, 4.800000e+02, 5.700000e+02,
(PID.TID 0000.0001) >       6.550000e+02, 7.250000e+02, 7.750000e+02, 8.150000e+02,
(PID.TID 0000.0001) > ygOrigin=-80.,
(PID.TID 0000.0001) > delY=40*4.,
(PID.TID 0000.0001) > delX=90*4.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Input datasets
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > hydrogThetaFile='theta.bin',
(PID.TID 0000.0001) > hydrogSaltFile='salt.bin',
(PID.TID 0000.0001) > bathyFile='topog.bin',
(PID.TID 0000.0001) > zonalWindFile='windx.bin',
(PID.TID 0000.0001) > meridWindFile='windy.bin',
(PID.TID 0000.0001) > thetaClimFile='SST.bin'
(PID.TID 0000.0001) > saltClimFile='SSS.bin'
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled but not used ( +vectorInvariantMomentum = F )
 pkg/mom_fluxform         compiled   and   used ( & not vectorInvariantMom = T )
 pkg/cd_code              compiled   and   used ( useCDscheme              = T )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SET_PARMS: done
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) %MON XC_max                       =   3.5800000000000E+02
(PID.TID 0000.0001) %MON XC_min                       =   2.0000000000000E+00
(PID.TID 0000.0001) %MON XC_mean                      =   1.8000000000000E+02
(PID.TID 0000.0001) %MON XC_sd                        =   1.0391663325314E+02
(PID.TID 0000.0001) %MON XG_max                       =   3.5600000000000E+02
(PID.TID 0000.0001) %MON XG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON XG_mean                      =   1.7800000000000E+02
(PID.TID 0000.0001) %MON XG_sd                        =   1.0391663325314E+02
(PID.TID 0000.0001) %MON DXC_max                      =   4.4443898815675E+05
(PID.TID 0000.0001) %MON DXC_min                      =   9.2460385861875E+04
(PID.TID 0000.0001) %MON DXC_mean                     =   3.1372497618153E+05
(PID.TID 0000.0001) %MON DXC_sd                       =   1.1216447457560E+05
(PID.TID 0000.0001) %MON DXF_max                      =   4.4443898815675E+05
(PID.TID 0000.0001) %MON DXF_min                      =   9.2460385861875E+04
(PID.TID 0000.0001) %MON DXF_mean                     =   3.1372497618153E+05
(PID.TID 0000.0001) %MON DXF_sd                       =   1.1216447457560E+05
(PID.TID 0000.0001) %MON DXG_max                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DXG_min                      =   7.7223062580781E+04
(PID.TID 0000.0001) %MON DXG_mean                     =   3.1353386340261E+05
(PID.TID 0000.0001) %MON DXG_sd                       =   1.1256651772502E+05
(PID.TID 0000.0001) %MON DXV_max                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DXV_min                      =   7.7223062580781E+04
(PID.TID 0000.0001) %MON DXV_mean                     =   3.1353386340261E+05
(PID.TID 0000.0001) %MON DXV_sd                       =   1.1256651772502E+05
(PID.TID 0000.0001) %MON YC_max                       =   7.8000000000000E+01
(PID.TID 0000.0001) %MON YC_min                       =  -7.8000000000000E+01
(PID.TID 0000.0001) %MON YC_mean                      =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YC_sd                        =   4.6173585522461E+01
(PID.TID 0000.0001) %MON YG_max                       =   7.6000000000000E+01
(PID.TID 0000.0001) %MON YG_min                       =  -8.0000000000000E+01
(PID.TID 0000.0001) %MON YG_mean                      =  -2.0000000000000E+00
(PID.TID 0000.0001) %MON YG_sd                        =   4.6173585522461E+01
(PID.TID 0000.0001) %MON DYC_max                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYC_min                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYC_mean                     =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYC_sd                       =   5.2968971431255E-09
(PID.TID 0000.0001) %MON DYF_max                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYF_min                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYF_mean                     =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYF_sd                       =   5.2968971431255E-09
(PID.TID 0000.0001) %MON DYG_max                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYG_min                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYG_mean                     =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYG_sd                       =   5.2968971431255E-09
(PID.TID 0000.0001) %MON DYU_max                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYU_min                      =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYU_mean                     =   4.4470989340816E+05
(PID.TID 0000.0001) %MON DYU_sd                       =   5.2968971431255E-09
(PID.TID 0000.0001) %MON RA_max                       =   1.9760627980089E+11
(PID.TID 0000.0001) %MON RA_min                       =   4.1109698667290E+10
(PID.TID 0000.0001) %MON RA_mean                      =   1.3948826965196E+11
(PID.TID 0000.0001) %MON RA_sd                        =   4.9870522472902E+10
(PID.TID 0000.0001) %MON RAW_max                      =   1.9760627980089E+11
(PID.TID 0000.0001) %MON RAW_min                      =   4.1109698667290E+10
(PID.TID 0000.0001) %MON RAW_mean                     =   1.3948826965196E+11
(PID.TID 0000.0001) %MON RAW_sd                       =   4.9870522472902E+10
(PID.TID 0000.0001) %MON RAS_max                      =   1.9772672958215E+11
(PID.TID 0000.0001) %MON RAS_min                      =   3.4334886267983E+10
(PID.TID 0000.0001) %MON RAS_mean                     =   1.3940329716694E+11
(PID.TID 0000.0001) %MON RAS_sd                       =   5.0049278732353E+10
(PID.TID 0000.0001) %MON RAZ_max                      =   1.9772672958215E+11
(PID.TID 0000.0001) %MON RAZ_min                      =   3.4334886267983E+10
(PID.TID 0000.0001) %MON RAZ_mean                     =   1.3940329716694E+11
(PID.TID 0000.0001) %MON RAZ_sd                       =   5.0049278732353E+10
(PID.TID 0000.0001) %MON AngleCS_max                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_min                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_mean                 =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_max                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_min                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_mean                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: topog.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model R_low (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =         -6.000000000000000E+03
(PID.TID 0000.0001) // CMAX =         -5.000000000000000E+01
(PID.TID 0000.0001) // CINT =          2.203703703703704E+02
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -1:    92:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    42:    -1:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) K =   1
(PID.TID 0000.0001) //                I=8       I=18      I=28      I=38      I=44      I=54      I=64      I=74      I=84
(PID.TID 0000.0001) // |--J--|101234567|901234567|901234567|901234567|901234567|567890123|567890123|567890123|567890123|56789012
(PID.TID 0000.0001) //     42 .............................................yyxwyyxwrpmm...........................xwtt..........
(PID.TID 0000.0001) //     41 ..................................................................................................
(PID.TID 0000.0001) //     40 ..................................................................................................
(PID.TID 0000.0001) //     39 pmmmprxz.......................................................................rtw.........wrppmmm
(PID.TID 0000.0001) //     38 mmmmmr..........................................................................vw........wwtrmmmm
(PID.TID 0000.0001) //     37 mmpw............................................................................xrr...rprv..tvmmpw
(PID.TID 0000.0001) //     36 xxz..........................................mmprmmprz..........................vpmm.mmprrpprtxxz.
(PID.TID 0000.0001) //     35 ..++.................................ywxz.kgmmmmmmmmmmvr.ggkkmr..................pkkkkmpmmprpr..++
(PID.TID 0000.0001) //     34 ......................................wwwd-gd----------d-ggkkkmp..................xmkkkkkkkgmw....
(PID.TID 0000.0001) //     33 g.....................................mm---------------ddddggkkpr...............zz.tmkgkkkggggg...
(PID.TID 0000.0001) //     32 ......................................k---d------------dddddgkkkp...............pkgkgdgkmmkgdg....
(PID.TID 0000.0001) //     31 ......................................-----d----------dddddd-dggg.............kgdd-dd-gkpkgdd.....
(PID.TID 0000.0001) //     30 .....................................----d--d-gdd-gddd----dd-dddg............gdddd---dkmkddddd....
(PID.TID 0000.0001) //     29 .................................zvgk----d---ddd-ddd-------ddddgkkm.........pd-dd---gkkgk-dgkk....
(PID.TID 0000.0001) //     28 ................................yrggd----------dd--dddd----ddgggkkk......pm.gddd----ggd--ddkm.....
(PID.TID 0000.0001) //     27 .................................---dd---------dd--dddgggdddddggkkkkm...kkmrrd-----dkg---dgk......
(PID.TID 0000.0001) //     26 .................kmm....t.....mkg---dg----ddddgdddgdddddgdddddddgkkkmk..m.kggk-----gkg--ddgm......
(PID.TID 0000.0001) //     25 ...............kkkkk..mmpp...rkk.d--dg----dddddd-ddd-dd-dd---dddggkkkkk....kkkgdd-dgkd---dkk......
(PID.TID 0000.0001) //     24 ..............pkkkkkt.kkmp...kkk.---------dggd---d---dd-dd--dddgggkkkkmkgk.mkk.dpgddgg---dgk......
(PID.TID 0000.0001) //     23 ...............dgkggmpkkkk.++ppkk----kggddddkd---d----dgdddddgggggkkkkmkkkm......mkggkkdddggg.....
(PID.TID 0000.0001) //     22 gggk..........ddgkkkmkkkkk..++..d--dggdgkkggkgdd-gdd--ddkgddggkkkkkkkkmmkkmm.......mkkgkkkgddggggk
(PID.TID 0000.0001) //     21 ddgk.........gddggkkggggggg.....ppkkgkgdkpkkkgd--gd----ddgggkkkkggkkkkkmmmmm........kkkkgkgdddddgk
(PID.TID 0000.0001) //     20 dgggk.......kddgkgkggddggdd.......d...rrmrkkkdd--dd----dddggggggggkkkkkkkkk............kdd-dggdggg
(PID.TID 0000.0001) //     19 gdddg.......kggkkkkmddddddd--.kkkg-t...-dkkkddgd-dgd--ggddddkkgggkkkkkkkkkkd...........gd-dgkkgddd
(PID.TID 0000.0001) //     22 gggk..........ddgkkkmkkkkk..++..d--dggdgkkggkgdd-gdd--ddkgddggkkkkkkkkmmkkmm.......mkkgkkkgddggggk
(PID.TID 0000.0001) //     21 ddgk.........gddggkkggggggg.....ppkkgkgdkpkkkgd--gd----ddgggkkkkggkkkkkmmmmm........kkkkgkgdddddgk
(PID.TID 0000.0001) //     20 dgggk.......kddgkgkggddggdd.......d...rrmrkkkdd--dd----dddggggggggkkkkkkkkk............kdd-dggdggg
(PID.TID 0000.0001) //     19 gdddg.......kggkkkkmddddddd--.kkkg-t...-dkkkddgd-dgd--ggddddkkgggkkkkkkkkkkd...........gd-dgkkgddd
(PID.TID 0000.0001) //     18 ddddg.......mkkkkkkkdddgd-------mv....mkkmd-kkkkgkkkgddkddgggkkkkkkkkkkkkkggg..........gd-dgkkdddd
(PID.TID 0000.0001) //     17 gd-dg.......m..gkkkggddg--------t......ggkggkmmp-mmp--ddgggkkkkkkkkmkkkkkgggk..........gd--gkkgd-d
(PID.TID 0000.0001) //     16 gdddg......mp.ddkkmkggdg------k........wmmmgdkkp-kkp-ddggggggkkkkkkmkkkkkgkkgd........kgd--gkkgddd
(PID.TID 0000.0001) //     15 -ddkg......kk.dddgkkkggggd---g..........ggpmggkr-gkr--ddgggggkkkkkmmkkkkkkkkgk.......pkgdddgkg-ddk
(PID.TID 0000.0001) //     14 gdddgk....rggkdd-ggkkkkgggddd-...........gpkkgk--gk--ddddgggkkkkkkmmmkkkkkkkkd......mkkgd-gkkkgddd
(PID.TID 0000.0001) //     13 gkdddk...kmdgkggkggggkkkkkgddd..........-gtkkkk--kk-----dgddggkkkkkmmkkkkkkkkg.....mkkkggggkmkgkdd
(PID.TID 0000.0001) //     12 kgdddgkgkkdddmkggdggkmkkkkkdddd.d---....dddprtm--tm-----dd-ddggggkkkmkkkkkkkkg....pddddgkkkmkkkgdd
(PID.TID 0000.0001) //     11 kgddggddkgddgmkgddgkkmkkkkkggggd----ddxkgddkw.mgd.mgdgddgddddddggkkkkkkgkkkkk....pdddddddkkmmkkgdd
(PID.TID 0000.0001) //     10 kkgggddddddkmmmgddkkkmmmmkkkkkggggggggkkdddk.tpmdtpmddddgddddddggkkkkkkgggkkk...+gd-ddddggkkmkkkgg
(PID.TID 0000.0001) //      9 kkkkgdddddggkkkkgkmpmmkkkkmkmkkkkkkkgkkgddgkwtpddtpddddddddggggggkkmkkkkgggkk...xg------ddgkkmkkkk
(PID.TID 0000.0001) //      8 pmkkkkkkdddgkkgggggkrpkgkkkkkkkkkkkkkkkkgggkwgd--gd---ddddggkkkkkkmkkggddgggk..zxrpmmkggggkkkkpmkk
(PID.TID 0000.0001) //      7 kkgddddgd----ddddgggkmgddkkkkkkggggkkkkkkkgddddddddddddgggkkkkkkmmkkdddddddggkkkkkgkkkkg---gkkkkgd
(PID.TID 0000.0001) //      6 dddddddd--d--dddddgggkpkggkkkkkgggggkkkkkmdddddggddgggggkmmkkggddddddddddddddggkkkkkkkkkk-dgdddddd
(PID.TID 0000.0001) //      5 dddddddddddddgddgkgkkmmmmkk.kkkkkkkkkkkkmmpkkkkkkkkkkmmmkkkkkggddddddgdddggggkkk.xpkkgggggddd-dddd
(PID.TID 0000.0001) //      4 gkkkkkgggk.k..............................rpmmmkkmmkkkkkkkkkkkkgggggggggkgkkkm...xmkkkkggggggggkkk
(PID.TID 0000.0001) //      3 .............................................ppmkppmkkkkkkkkkkkkmmpmmmm..........wpmkkkkkkkk......
(PID.TID 0000.0001) //      2 .............................................yyxwyyxwrpmm...........................xwtt..........
(PID.TID 0000.0001) //      1 ..................................................................................................
(PID.TID 0000.0001) //      0 ..................................................................................................
(PID.TID 0000.0001) //     -1 pmmmprxz.......................................................................rtw.........wrppmmm
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model Ro_surf (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+32
(PID.TID 0000.0001) // CMAX =         -1.000000000000000E+32
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -1:    92:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    42:    -1:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacC at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -1:    92:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    42:    -1:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacW at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -1:    92:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    42:    -1:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacS at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -1:    92:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    42:    -1:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  1  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) %MON fCori_max                    =   1.4226580169407E-04
(PID.TID 0000.0001) %MON fCori_min                    =  -1.4226580169407E-04
(PID.TID 0000.0001) %MON fCori_mean                   =  -1.9274705288631E-19
(PID.TID 0000.0001) %MON fCori_sd                     =   9.6335367303779E-05
(PID.TID 0000.0001) %MON fCoriG_max                   =   1.4112379284621E-04
(PID.TID 0000.0001) %MON fCoriG_min                   =  -1.4323448157692E-04
(PID.TID 0000.0001) %MON fCoriG_mean                  =  -3.5808620394228E-06
(PID.TID 0000.0001) %MON fCoriG_sd                    =   9.6285194120965E-05
(PID.TID 0000.0001) %MON fCoriCos_max                 =   1.4535550371427E-04
(PID.TID 0000.0001) %MON fCoriCos_min                 =   3.0239529651320E-05
(PID.TID 0000.0001) %MON fCoriCos_mean                =   1.0260497651149E-04
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   3.6683828681187E-05
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  8.8319877372200804E-05
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)                 1.600000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                 1.520000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                 1.450000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                 1.390000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                 1.330000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                 1.240000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                 1.130000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                 9.900000000000000E+00,      /* K =  8 */
(PID.TID 0000.0001)                 8.400000000000000E+00,      /* K =  9 */
(PID.TID 0000.0001)                 6.700000000000000E+00,      /* K = 10 */
(PID.TID 0000.0001)                 5.200000000000000E+00,      /* K = 11 */
(PID.TID 0000.0001)                 3.800000000000000E+00,      /* K = 12 */
(PID.TID 0000.0001)                 2.900000000000000E+00,      /* K = 13 */
(PID.TID 0000.0001)                 2.300000000000000E+00,      /* K = 14 */
(PID.TID 0000.0001)                 1.800000000000000E+00,      /* K = 15 */
(PID.TID 0000.0001)                 1.500000000000000E+00,      /* K = 16 */
(PID.TID 0000.0001)                 1.100000000000000E+00,      /* K = 17 */
(PID.TID 0000.0001)                 8.000000000000000E-01,      /* K = 18 */
(PID.TID 0000.0001)                 6.600000000000000E-01,      /* K = 19 */
(PID.TID 0000.0001)                 6.300000000000000E-01       /* K = 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( g/kg ) */
(PID.TID 0000.0001)                 3.465000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                 3.475000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                 3.482000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                 3.487000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)     2 @  3.490000000000000E+01,             /* K =  5:  6 */
(PID.TID 0000.0001)                 3.486000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                 3.478000000000000E+01,      /* K =  8 */
(PID.TID 0000.0001)                 3.469000000000000E+01,      /* K =  9 */
(PID.TID 0000.0001)                 3.460000000000000E+01,      /* K = 10 */
(PID.TID 0000.0001)                 3.458000000000000E+01,      /* K = 11 */
(PID.TID 0000.0001)                 3.462000000000000E+01,      /* K = 12 */
(PID.TID 0000.0001)                 3.468000000000000E+01,      /* K = 13 */
(PID.TID 0000.0001)                 3.472000000000000E+01,      /* K = 14 */
(PID.TID 0000.0001)                 3.473000000000000E+01,      /* K = 15 */
(PID.TID 0000.0001)                 3.474000000000000E+01,      /* K = 16 */
(PID.TID 0000.0001)     2 @  3.473000000000000E+01,             /* K = 17: 18 */
(PID.TID 0000.0001)     2 @  3.472000000000000E+01              /* K = 19: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 5.000000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)    20 @  1.000000000000000E-03              /* K =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0000.0001)                      -1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)    20 @  3.000000000000000E-05              /* K =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)    20 @  3.000000000000000E-05              /* K =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'LINEAR'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tAlpha = /* Linear EOS thermal expansion coefficient ( 1/oC ) */
(PID.TID 0000.0001)                 2.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sBeta  = /* Linear EOS haline contraction coefficient ( 1/(g/kg) ) */
(PID.TID 0000.0001)                 7.400000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoNil    = /* Reference density for Linear EOS ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) surf_pRef = /* Surface reference pressure ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.994000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)    20 @  1.000000000000000E+00              /* K =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)    21 @  1.000000000000000E+00              /* K =  1: 21 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0000.0001)    20 @  1.000000000000000E+00              /* K =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0000.0001)    21 @  1.000000000000000E+00              /* K =  1: 21 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.640000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.272205216643040E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 9.999999999999999E-12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sIceLoadFac =  /* scale factor for sIceLoad (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(g/kg)*/
(PID.TID 0000.0001)                 3.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriScheme= /* Scheme selector for Coriolis-Term */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : original discretization (simple averaging, no hFac)
(PID.TID 0000.0001)    = 1 : Wet-point averaging (Jamar & Ozer 1986)
(PID.TID 0000.0001)    = 2 : energy conserving scheme (no hFac weight)
(PID.TID 0000.0001)    = 3 : energy conserving scheme using Wet-point averaging
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momTidalForcing = /* Momentum Tidal forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0000.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0000.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                    1000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dMinItersNSA =   /* Minimum number of iterations of 2d con. grad solver  */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNSACGSolver =  /* use not-self-adjoint CG solver */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 2.400000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 2.400000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)    20 @  1.080000000000000E+05              /* K =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 1.080000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 1.080000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauCD =   /* CD coupling time-scale ( s ) */
(PID.TID 0000.0001)                 3.214280000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rCD =   /* Normalised CD coupling parameter */
(PID.TID 0000.0001)                 9.925333200592357E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) epsAB_CD = /* AB-2 stabilizing weight for CD-scheme*/
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                      26
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                      26
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 2.808000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 2.592000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 2.592000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 2.592000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 1.800000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interViscAr_pCell = /* account for partial-cell in interior vert. viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interDiffKr_pCell = /* account for partial-cell in interior vert. diffusion */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pCellMix_select = /* option to enhance mixing near surface & bottom */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 1.000200040008002E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 2.500000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                 5.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                 5.250000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                 5.750000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                 6.250000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                 6.750000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                 7.500000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                 8.750000000000000E+01,      /* K =  8 */
(PID.TID 0000.0001)                 1.075000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                 1.375000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                 1.775000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                 2.300000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                 2.900000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                 3.600000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                 4.400000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                 5.250000000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                 6.125000000000000E+02,      /* K = 17 */
(PID.TID 0000.0001)                 6.900000000000000E+02,      /* K = 18 */
(PID.TID 0000.0001)                 7.500000000000000E+02,      /* K = 19 */
(PID.TID 0000.0001)                 7.950000000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                 4.075000000000000E+02       /* K = 21 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)     2 @  5.000000000000000E+01,             /* K =  1:  2 */
(PID.TID 0000.0001)                 5.500000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                 6.000000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                 6.500000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                 7.000000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                 8.000000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                 9.500000000000000E+01,      /* K =  8 */
(PID.TID 0000.0001)                 1.200000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                 1.550000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                 2.000000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                 2.600000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                 3.200000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                 4.000000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                 4.800000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                 5.700000000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                 6.550000000000000E+02,      /* K = 17 */
(PID.TID 0000.0001)                 7.250000000000000E+02,      /* K = 18 */
(PID.TID 0000.0001)                 7.750000000000000E+02,      /* K = 19 */
(PID.TID 0000.0001)                 8.150000000000000E+02       /* K = 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    90 @  4.000000000000000E+00              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    40 @  4.000000000000000E+00              /* J =  1: 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                -8.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 2.000000000000000E+00,      /* I =  1 */
(PID.TID 0000.0001)                 6.000000000000000E+00,      /* I =  2 */
(PID.TID 0000.0001)                 1.000000000000000E+01,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.200000000000000E+01,      /* I = 21 */
(PID.TID 0000.0001)                 8.600000000000000E+01,      /* I = 22 */
(PID.TID 0000.0001)                 9.000000000000000E+01,      /* I = 23 */
(PID.TID 0000.0001)                 9.400000000000000E+01,      /* I = 24 */
(PID.TID 0000.0001)                 9.800000000000000E+01,      /* I = 25 */
(PID.TID 0000.0001)                 1.020000000000000E+02,      /* I = 26 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.700000000000000E+02,      /* I = 43 */
(PID.TID 0000.0001)                 1.740000000000000E+02,      /* I = 44 */
(PID.TID 0000.0001)                 1.780000000000000E+02,      /* I = 45 */
(PID.TID 0000.0001)                 1.820000000000000E+02,      /* I = 46 */
(PID.TID 0000.0001)                 1.860000000000000E+02,      /* I = 47 */
(PID.TID 0000.0001)                 1.900000000000000E+02,      /* I = 48 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 2.580000000000000E+02,      /* I = 65 */
(PID.TID 0000.0001)                 2.620000000000000E+02,      /* I = 66 */
(PID.TID 0000.0001)                 2.660000000000000E+02,      /* I = 67 */
(PID.TID 0000.0001)                 2.700000000000000E+02,      /* I = 68 */
(PID.TID 0000.0001)                 2.740000000000000E+02,      /* I = 69 */
(PID.TID 0000.0001)                 2.780000000000000E+02,      /* I = 70 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 3.500000000000000E+02,      /* I = 88 */
(PID.TID 0000.0001)                 3.540000000000000E+02,      /* I = 89 */
(PID.TID 0000.0001)                 3.580000000000000E+02       /* I = 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                -7.800000000000000E+01,      /* J =  1 */
(PID.TID 0000.0001)                -7.400000000000000E+01,      /* J =  2 */
(PID.TID 0000.0001)                -7.000000000000000E+01,      /* J =  3 */
(PID.TID 0000.0001)                -6.600000000000000E+01,      /* J =  4 */
(PID.TID 0000.0001)                -6.200000000000000E+01,      /* J =  5 */
(PID.TID 0000.0001)                -5.800000000000000E+01,      /* J =  6 */
(PID.TID 0000.0001)                -5.400000000000000E+01,      /* J =  7 */
(PID.TID 0000.0001)                -5.000000000000000E+01,      /* J =  8 */
(PID.TID 0000.0001)                -4.600000000000000E+01,      /* J =  9 */
(PID.TID 0000.0001)                -4.200000000000000E+01,      /* J = 10 */
(PID.TID 0000.0001)                -3.800000000000000E+01,      /* J = 11 */
(PID.TID 0000.0001)                -3.400000000000000E+01,      /* J = 12 */
(PID.TID 0000.0001)                -3.000000000000000E+01,      /* J = 13 */
(PID.TID 0000.0001)                -2.600000000000000E+01,      /* J = 14 */
(PID.TID 0000.0001)                -2.200000000000000E+01,      /* J = 15 */
(PID.TID 0000.0001)                -1.800000000000000E+01,      /* J = 16 */
(PID.TID 0000.0001)                -1.400000000000000E+01,      /* J = 17 */
(PID.TID 0000.0001)                -1.000000000000000E+01,      /* J = 18 */
(PID.TID 0000.0001)                -6.000000000000000E+00,      /* J = 19 */
(PID.TID 0000.0001)                -2.000000000000000E+00,      /* J = 20 */
(PID.TID 0000.0001)                 2.000000000000000E+00,      /* J = 21 */
(PID.TID 0000.0001)                 6.000000000000000E+00,      /* J = 22 */
(PID.TID 0000.0001)                 1.000000000000000E+01,      /* J = 23 */
(PID.TID 0000.0001)                 1.400000000000000E+01,      /* J = 24 */
(PID.TID 0000.0001)                 1.800000000000000E+01,      /* J = 25 */
(PID.TID 0000.0001)                 2.200000000000000E+01,      /* J = 26 */
(PID.TID 0000.0001)                 2.600000000000000E+01,      /* J = 27 */
(PID.TID 0000.0001)                 3.000000000000000E+01,      /* J = 28 */
(PID.TID 0000.0001)                 3.400000000000000E+01,      /* J = 29 */
(PID.TID 0000.0001)                 3.800000000000000E+01,      /* J = 30 */
(PID.TID 0000.0001)                 4.200000000000000E+01,      /* J = 31 */
(PID.TID 0000.0001)                 4.600000000000000E+01,      /* J = 32 */
(PID.TID 0000.0001)                 5.000000000000000E+01,      /* J = 33 */
(PID.TID 0000.0001)                 5.400000000000000E+01,      /* J = 34 */
(PID.TID 0000.0001)                 5.800000000000000E+01,      /* J = 35 */
(PID.TID 0000.0001)                 6.200000000000000E+01,      /* J = 36 */
(PID.TID 0000.0001)                 6.600000000000000E+01,      /* J = 37 */
(PID.TID 0000.0001)                 7.000000000000000E+01,      /* J = 38 */
(PID.TID 0000.0001)                 7.400000000000000E+01,      /* J = 39 */
(PID.TID 0000.0001)                 7.800000000000000E+01       /* J = 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -2.500000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                -7.500000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -1.275000000000000E+02,      /* K =  3 */
(PID.TID 0000.0001)                -1.850000000000000E+02,      /* K =  4 */
(PID.TID 0000.0001)                -2.475000000000000E+02,      /* K =  5 */
(PID.TID 0000.0001)                -3.150000000000000E+02,      /* K =  6 */
(PID.TID 0000.0001)                -3.900000000000000E+02,      /* K =  7 */
(PID.TID 0000.0001)                -4.775000000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -5.850000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -7.225000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -9.000000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -1.130000000000000E+03,      /* K = 12 */
(PID.TID 0000.0001)                -1.420000000000000E+03,      /* K = 13 */
(PID.TID 0000.0001)                -1.780000000000000E+03,      /* K = 14 */
(PID.TID 0000.0001)                -2.220000000000000E+03,      /* K = 15 */
(PID.TID 0000.0001)                -2.745000000000000E+03,      /* K = 16 */
(PID.TID 0000.0001)                -3.357500000000000E+03,      /* K = 17 */
(PID.TID 0000.0001)                -4.047500000000000E+03,      /* K = 18 */
(PID.TID 0000.0001)                -4.797500000000000E+03,      /* K = 19 */
(PID.TID 0000.0001)                -5.592500000000000E+03       /* K = 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -5.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -1.000000000000000E+02,      /* K =  3 */
(PID.TID 0000.0001)                -1.550000000000000E+02,      /* K =  4 */
(PID.TID 0000.0001)                -2.150000000000000E+02,      /* K =  5 */
(PID.TID 0000.0001)                -2.800000000000000E+02,      /* K =  6 */
(PID.TID 0000.0001)                -3.500000000000000E+02,      /* K =  7 */
(PID.TID 0000.0001)                -4.300000000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -5.250000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -6.450000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -8.000000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -1.000000000000000E+03,      /* K = 12 */
(PID.TID 0000.0001)                -1.260000000000000E+03,      /* K = 13 */
(PID.TID 0000.0001)                -1.580000000000000E+03,      /* K = 14 */
(PID.TID 0000.0001)                -1.980000000000000E+03,      /* K = 15 */
(PID.TID 0000.0001)                -2.460000000000000E+03,      /* K = 16 */
(PID.TID 0000.0001)                -3.030000000000000E+03,      /* K = 17 */
(PID.TID 0000.0001)                -3.685000000000000E+03,      /* K = 18 */
(PID.TID 0000.0001)                -4.410000000000000E+03,      /* K = 19 */
(PID.TID 0000.0001)                -5.185000000000000E+03,      /* K = 20 */
(PID.TID 0000.0001)                -6.000000000000000E+03       /* K = 21 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)    20 @  1.000000000000000E+00              /* K =  1: 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)    21 @  1.000000000000000E+00              /* K =  1: 21 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0000.0001)    21 @  1.000000000000000E+00              /* K =  1: 21 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0000.0001)    21 @  1.000000000000000E+00              /* K =  1: 21 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                 4.591080000000024E-05,      /* K =  2 */
(PID.TID 0000.0001)                 3.583920000000001E-05,      /* K =  3 */
(PID.TID 0000.0001)                 2.678556521739093E-05,      /* K =  4 */
(PID.TID 0000.0001)                 2.231971200000012E-05,      /* K =  5 */
(PID.TID 0000.0001)                 2.616000000000001E-05,      /* K =  6 */
(PID.TID 0000.0001)                 2.490432000000007E-05,      /* K =  7 */
(PID.TID 0000.0001)                 2.475483428571444E-05,      /* K =  8 */
(PID.TID 0000.0001)                 2.129910697674396E-05,      /* K =  9 */
(PID.TID 0000.0001)                 1.950584727272747E-05,      /* K = 10 */
(PID.TID 0000.0001)                 1.576232112676044E-05,      /* K = 11 */
(PID.TID 0000.0001)                 1.320511304347824E-05,      /* K = 12 */
(PID.TID 0000.0001)                 7.590910344827643E-06,      /* K = 13 */
(PID.TID 0000.0001)                 4.076599999999984E-06,      /* K = 14 */
(PID.TID 0000.0001)                 2.394531818181785E-06,      /* K = 15 */
(PID.TID 0000.0001)                 1.259417142857214E-06,      /* K = 16 */
(PID.TID 0000.0001)                 1.162785306122388E-06,      /* K = 17 */
(PID.TID 0000.0001)                 8.530434782608699E-07,      /* K = 18 */
(PID.TID 0000.0001)                 2.694480000000193E-07,      /* K = 19 */
(PID.TID 0000.0001)                 7.403773584905668E-08       /* K = 20 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    90 @  9.246038586187513E+04              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 9.246038586187513E+04,      /* J =  1 */
(PID.TID 0000.0001)                 1.225786591246834E+05,      /* J =  2 */
(PID.TID 0000.0001)                 1.520997414818001E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.808798091874299E+05,      /* J =  4 */
(PID.TID 0000.0001)                 2.087786486446736E+05,      /* J =  5 */
(PID.TID 0000.0001)                 2.356603395120765E+05,      /* J =  6 */
(PID.TID 0000.0001)                 2.613939168938714E+05,      /* J =  7 */
(PID.TID 0000.0001)                 2.858540093877838E+05,      /* J =  8 */
(PID.TID 0000.0001)                 3.089214498819035E+05,      /* J =  9 */
(PID.TID 0000.0001)                 3.304838561248741E+05,      /* J = 10 */
(PID.TID 0000.0001)                 3.504361782409254E+05,      /* J = 11 */
(PID.TID 0000.0001)                 3.686812105223082E+05,      /* J = 12 */
(PID.TID 0000.0001)                 3.851300650057323E+05,      /* J = 13 */
(PID.TID 0000.0001)                 3.997026045255871E+05,      /* J = 14 */
(PID.TID 0000.0001)                 4.123278331341585E+05,      /* J = 15 */
(PID.TID 0000.0001)                 4.229442419867491E+05,      /* J = 16 */
(PID.TID 0000.0001)                 4.315001090065870E+05,      /* J = 17 */
(PID.TID 0000.0001)                 4.379537508695838E+05,      /* J = 18 */
(PID.TID 0000.0001)                 4.422737260813012E+05,      /* J = 19 */
(PID.TID 0000.0001)     2 @  4.444389881567502E+05,             /* J = 20: 21 */
(PID.TID 0000.0001)                 4.422737260813012E+05,      /* J = 22 */
(PID.TID 0000.0001)                 4.379537508695838E+05,      /* J = 23 */
(PID.TID 0000.0001)                 4.315001090065870E+05,      /* J = 24 */
(PID.TID 0000.0001)                 4.229442419867491E+05,      /* J = 25 */
(PID.TID 0000.0001)                 4.123278331341585E+05,      /* J = 26 */
(PID.TID 0000.0001)                 3.997026045255871E+05,      /* J = 27 */
(PID.TID 0000.0001)                 3.851300650057323E+05,      /* J = 28 */
(PID.TID 0000.0001)                 3.686812105223082E+05,      /* J = 29 */
(PID.TID 0000.0001)                 3.504361782409254E+05,      /* J = 30 */
(PID.TID 0000.0001)                 3.304838561248741E+05,      /* J = 31 */
(PID.TID 0000.0001)                 3.089214498819035E+05,      /* J = 32 */
(PID.TID 0000.0001)                 2.858540093877838E+05,      /* J = 33 */
(PID.TID 0000.0001)                 2.613939168938714E+05,      /* J = 34 */
(PID.TID 0000.0001)                 2.356603395120765E+05,      /* J = 35 */
(PID.TID 0000.0001)                 2.087786486446736E+05,      /* J = 36 */
(PID.TID 0000.0001)                 1.808798091874299E+05,      /* J = 37 */
(PID.TID 0000.0001)                 1.520997414818001E+05,      /* J = 38 */
(PID.TID 0000.0001)                 1.225786591246834E+05,      /* J = 39 */
(PID.TID 0000.0001)                 9.246038586187513E+04       /* J = 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    90 @  4.447098934081552E+05              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    40 @  4.447098934081552E+05              /* J =  1: 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    90 @  7.722306258078101E+04              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 7.722306258078101E+04,      /* J =  1 */
(PID.TID 0000.0001)                 1.075850604052271E+05,      /* J =  2 */
(PID.TID 0000.0001)                 1.374229146297914E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.665912582279823E+05,      /* J =  4 */
(PID.TID 0000.0001)                 1.949479859617814E+05,      /* J =  5 */
(PID.TID 0000.0001)                 2.223549467040777E+05,      /* J =  6 */
(PID.TID 0000.0001)                 2.486786164970727E+05,      /* J =  7 */
(PID.TID 0000.0001)                 2.737907490675810E+05,      /* J =  8 */
(PID.TID 0000.0001)                 2.975690006299821E+05,      /* J =  9 */
(PID.TID 0000.0001)                 3.198975259328452E+05,      /* J = 10 */
(PID.TID 0000.0001)                 3.406675426453503E+05,      /* J = 11 */
(PID.TID 0000.0001)                 3.597778613338690E+05,      /* J = 12 */
(PID.TID 0000.0001)                 3.771353784467131E+05,      /* J = 13 */
(PID.TID 0000.0001)                 3.926555299052806E+05,      /* J = 14 */
(PID.TID 0000.0001)                 4.062627030917454E+05,      /* J = 15 */
(PID.TID 0000.0001)                 4.178906052261313E+05,      /* J = 16 */
(PID.TID 0000.0001)                 4.274825863380723E+05,      /* J = 17 */
(PID.TID 0000.0001)                 4.349919152597734E+05,      /* J = 18 */
(PID.TID 0000.0001)                 4.403820072955634E+05,      /* J = 19 */
(PID.TID 0000.0001)                 4.436266024588540E+05,      /* J = 20 */
(PID.TID 0000.0001)                 4.447098934081552E+05,      /* J = 21 */
(PID.TID 0000.0001)                 4.436266024588540E+05,      /* J = 22 */
(PID.TID 0000.0001)                 4.403820072955634E+05,      /* J = 23 */
(PID.TID 0000.0001)                 4.349919152597734E+05,      /* J = 24 */
(PID.TID 0000.0001)                 4.274825863380723E+05,      /* J = 25 */
(PID.TID 0000.0001)                 4.178906052261313E+05,      /* J = 26 */
(PID.TID 0000.0001)                 4.062627030917454E+05,      /* J = 27 */
(PID.TID 0000.0001)                 3.926555299052806E+05,      /* J = 28 */
(PID.TID 0000.0001)                 3.771353784467131E+05,      /* J = 29 */
(PID.TID 0000.0001)                 3.597778613338690E+05,      /* J = 30 */
(PID.TID 0000.0001)                 3.406675426453503E+05,      /* J = 31 */
(PID.TID 0000.0001)                 3.198975259328452E+05,      /* J = 32 */
(PID.TID 0000.0001)                 2.975690006299821E+05,      /* J = 33 */
(PID.TID 0000.0001)                 2.737907490675810E+05,      /* J = 34 */
(PID.TID 0000.0001)                 2.486786164970727E+05,      /* J = 35 */
(PID.TID 0000.0001)                 2.223549467040777E+05,      /* J = 36 */
(PID.TID 0000.0001)                 1.949479859617814E+05,      /* J = 37 */
(PID.TID 0000.0001)                 1.665912582279823E+05,      /* J = 38 */
(PID.TID 0000.0001)                 1.374229146297914E+05,      /* J = 39 */
(PID.TID 0000.0001)                 1.075850604052271E+05       /* J = 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    90 @  4.447098934081552E+05              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    40 @  4.447098934081552E+05              /* J =  1: 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    90 @  9.246038586187513E+04              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 9.246038586187513E+04,      /* J =  1 */
(PID.TID 0000.0001)                 1.225786591246834E+05,      /* J =  2 */
(PID.TID 0000.0001)                 1.520997414818001E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.808798091874299E+05,      /* J =  4 */
(PID.TID 0000.0001)                 2.087786486446736E+05,      /* J =  5 */
(PID.TID 0000.0001)                 2.356603395120765E+05,      /* J =  6 */
(PID.TID 0000.0001)                 2.613939168938714E+05,      /* J =  7 */
(PID.TID 0000.0001)                 2.858540093877838E+05,      /* J =  8 */
(PID.TID 0000.0001)                 3.089214498819035E+05,      /* J =  9 */
(PID.TID 0000.0001)                 3.304838561248741E+05,      /* J = 10 */
(PID.TID 0000.0001)                 3.504361782409254E+05,      /* J = 11 */
(PID.TID 0000.0001)                 3.686812105223082E+05,      /* J = 12 */
(PID.TID 0000.0001)                 3.851300650057323E+05,      /* J = 13 */
(PID.TID 0000.0001)                 3.997026045255871E+05,      /* J = 14 */
(PID.TID 0000.0001)                 4.123278331341585E+05,      /* J = 15 */
(PID.TID 0000.0001)                 4.229442419867491E+05,      /* J = 16 */
(PID.TID 0000.0001)                 4.315001090065870E+05,      /* J = 17 */
(PID.TID 0000.0001)                 4.379537508695838E+05,      /* J = 18 */
(PID.TID 0000.0001)                 4.422737260813012E+05,      /* J = 19 */
(PID.TID 0000.0001)     2 @  4.444389881567502E+05,             /* J = 20: 21 */
(PID.TID 0000.0001)                 4.422737260813012E+05,      /* J = 22 */
(PID.TID 0000.0001)                 4.379537508695838E+05,      /* J = 23 */
(PID.TID 0000.0001)                 4.315001090065870E+05,      /* J = 24 */
(PID.TID 0000.0001)                 4.229442419867491E+05,      /* J = 25 */
(PID.TID 0000.0001)                 4.123278331341585E+05,      /* J = 26 */
(PID.TID 0000.0001)                 3.997026045255871E+05,      /* J = 27 */
(PID.TID 0000.0001)                 3.851300650057323E+05,      /* J = 28 */
(PID.TID 0000.0001)                 3.686812105223082E+05,      /* J = 29 */
(PID.TID 0000.0001)                 3.504361782409254E+05,      /* J = 30 */
(PID.TID 0000.0001)                 3.304838561248741E+05,      /* J = 31 */
(PID.TID 0000.0001)                 3.089214498819035E+05,      /* J = 32 */
(PID.TID 0000.0001)                 2.858540093877838E+05,      /* J = 33 */
(PID.TID 0000.0001)                 2.613939168938714E+05,      /* J = 34 */
(PID.TID 0000.0001)                 2.356603395120765E+05,      /* J = 35 */
(PID.TID 0000.0001)                 2.087786486446736E+05,      /* J = 36 */
(PID.TID 0000.0001)                 1.808798091874299E+05,      /* J = 37 */
(PID.TID 0000.0001)                 1.520997414818001E+05,      /* J = 38 */
(PID.TID 0000.0001)                 1.225786591246834E+05,      /* J = 39 */
(PID.TID 0000.0001)                 9.246038586187513E+04       /* J = 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    90 @  4.447098934081552E+05              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    40 @  4.447098934081552E+05              /* J =  1: 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    90 @  7.722306258078101E+04              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 7.722306258078101E+04,      /* J =  1 */
(PID.TID 0000.0001)                 1.075850604052271E+05,      /* J =  2 */
(PID.TID 0000.0001)                 1.374229146297914E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.665912582279823E+05,      /* J =  4 */
(PID.TID 0000.0001)                 1.949479859617814E+05,      /* J =  5 */
(PID.TID 0000.0001)                 2.223549467040777E+05,      /* J =  6 */
(PID.TID 0000.0001)                 2.486786164970727E+05,      /* J =  7 */
(PID.TID 0000.0001)                 2.737907490675810E+05,      /* J =  8 */
(PID.TID 0000.0001)                 2.975690006299821E+05,      /* J =  9 */
(PID.TID 0000.0001)                 3.198975259328452E+05,      /* J = 10 */
(PID.TID 0000.0001)                 3.406675426453503E+05,      /* J = 11 */
(PID.TID 0000.0001)                 3.597778613338690E+05,      /* J = 12 */
(PID.TID 0000.0001)                 3.771353784467131E+05,      /* J = 13 */
(PID.TID 0000.0001)                 3.926555299052806E+05,      /* J = 14 */
(PID.TID 0000.0001)                 4.062627030917454E+05,      /* J = 15 */
(PID.TID 0000.0001)                 4.178906052261313E+05,      /* J = 16 */
(PID.TID 0000.0001)                 4.274825863380723E+05,      /* J = 17 */
(PID.TID 0000.0001)                 4.349919152597734E+05,      /* J = 18 */
(PID.TID 0000.0001)                 4.403820072955634E+05,      /* J = 19 */
(PID.TID 0000.0001)                 4.436266024588540E+05,      /* J = 20 */
(PID.TID 0000.0001)                 4.447098934081552E+05,      /* J = 21 */
(PID.TID 0000.0001)                 4.436266024588540E+05,      /* J = 22 */
(PID.TID 0000.0001)                 4.403820072955634E+05,      /* J = 23 */
(PID.TID 0000.0001)                 4.349919152597734E+05,      /* J = 24 */
(PID.TID 0000.0001)                 4.274825863380723E+05,      /* J = 25 */
(PID.TID 0000.0001)                 4.178906052261313E+05,      /* J = 26 */
(PID.TID 0000.0001)                 4.062627030917454E+05,      /* J = 27 */
(PID.TID 0000.0001)                 3.926555299052806E+05,      /* J = 28 */
(PID.TID 0000.0001)                 3.771353784467131E+05,      /* J = 29 */
(PID.TID 0000.0001)                 3.597778613338690E+05,      /* J = 30 */
(PID.TID 0000.0001)                 3.406675426453503E+05,      /* J = 31 */
(PID.TID 0000.0001)                 3.198975259328452E+05,      /* J = 32 */
(PID.TID 0000.0001)                 2.975690006299821E+05,      /* J = 33 */
(PID.TID 0000.0001)                 2.737907490675810E+05,      /* J = 34 */
(PID.TID 0000.0001)                 2.486786164970727E+05,      /* J = 35 */
(PID.TID 0000.0001)                 2.223549467040777E+05,      /* J = 36 */
(PID.TID 0000.0001)                 1.949479859617814E+05,      /* J = 37 */
(PID.TID 0000.0001)                 1.665912582279823E+05,      /* J = 38 */
(PID.TID 0000.0001)                 1.374229146297914E+05,      /* J = 39 */
(PID.TID 0000.0001)                 1.075850604052271E+05       /* J = 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    90 @  4.447098934081552E+05              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    40 @  4.447098934081552E+05              /* J =  1: 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    90 @  4.110969866729047E+10              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 4.110969866729047E+10,      /* J =  1 */
(PID.TID 0000.0001)                 5.450087291636665E+10,      /* J =  2 */
(PID.TID 0000.0001)                 6.762652439100235E+10,      /* J =  3 */
(PID.TID 0000.0001)                 8.042270623659998E+10,      /* J =  4 */
(PID.TID 0000.0001)                 9.282707674147523E+10,      /* J =  5 */
(PID.TID 0000.0001)                 1.047792030594106E+11,      /* J =  6 */
(PID.TID 0000.0001)                 1.162208556324093E+11,      /* J =  7 */
(PID.TID 0000.0001)                 1.270962918792465E+11,      /* J =  8 */
(PID.TID 0000.0001)                 1.373525277677229E+11,      /* J =  9 */
(PID.TID 0000.0001)                 1.469395959475426E+11,      /* J = 10 */
(PID.TID 0000.0001)                 1.558107891862220E+11,      /* J = 11 */
(PID.TID 0000.0001)                 1.639228879220326E+11,      /* J = 12 */
(PID.TID 0000.0001)                 1.712363708253573E+11,      /* J = 13 */
(PID.TID 0000.0001)                 1.777156073426415E+11,      /* J = 14 */
(PID.TID 0000.0001)                 1.833290312848623E+11,      /* J = 15 */
(PID.TID 0000.0001)                 1.880492946148330E+11,      /* J = 16 */
(PID.TID 0000.0001)                 1.918534006840893E+11,      /* J = 17 */
(PID.TID 0000.0001)                 1.947228162702492E+11,      /* J = 18 */
(PID.TID 0000.0001)                 1.966435618690094E+11,      /* J = 19 */
(PID.TID 0000.0001)     2 @  1.976062798008856E+11,             /* J = 20: 21 */
(PID.TID 0000.0001)                 1.966435618690094E+11,      /* J = 22 */
(PID.TID 0000.0001)                 1.947228162702492E+11,      /* J = 23 */
(PID.TID 0000.0001)                 1.918534006840893E+11,      /* J = 24 */
(PID.TID 0000.0001)                 1.880492946148330E+11,      /* J = 25 */
(PID.TID 0000.0001)                 1.833290312848623E+11,      /* J = 26 */
(PID.TID 0000.0001)                 1.777156073426415E+11,      /* J = 27 */
(PID.TID 0000.0001)                 1.712363708253573E+11,      /* J = 28 */
(PID.TID 0000.0001)                 1.639228879220326E+11,      /* J = 29 */
(PID.TID 0000.0001)                 1.558107891862220E+11,      /* J = 30 */
(PID.TID 0000.0001)                 1.469395959475426E+11,      /* J = 31 */
(PID.TID 0000.0001)                 1.373525277677229E+11,      /* J = 32 */
(PID.TID 0000.0001)                 1.270962918792465E+11,      /* J = 33 */
(PID.TID 0000.0001)                 1.162208556324093E+11,      /* J = 34 */
(PID.TID 0000.0001)                 1.047792030594106E+11,      /* J = 35 */
(PID.TID 0000.0001)                 9.282707674147523E+10,      /* J = 36 */
(PID.TID 0000.0001)                 8.042270623659998E+10,      /* J = 37 */
(PID.TID 0000.0001)                 6.762652439100235E+10,      /* J = 38 */
(PID.TID 0000.0001)                 5.450087291636665E+10,      /* J = 39 */
(PID.TID 0000.0001)                 4.110969866729047E+10       /* J = 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    90 @  4.110969866729047E+10              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 4.110969866729047E+10,      /* J =  1 */
(PID.TID 0000.0001)                 5.450087291636665E+10,      /* J =  2 */
(PID.TID 0000.0001)                 6.762652439100235E+10,      /* J =  3 */
(PID.TID 0000.0001)                 8.042270623659998E+10,      /* J =  4 */
(PID.TID 0000.0001)                 9.282707674147523E+10,      /* J =  5 */
(PID.TID 0000.0001)                 1.047792030594106E+11,      /* J =  6 */
(PID.TID 0000.0001)                 1.162208556324093E+11,      /* J =  7 */
(PID.TID 0000.0001)                 1.270962918792465E+11,      /* J =  8 */
(PID.TID 0000.0001)                 1.373525277677229E+11,      /* J =  9 */
(PID.TID 0000.0001)                 1.469395959475426E+11,      /* J = 10 */
(PID.TID 0000.0001)                 1.558107891862220E+11,      /* J = 11 */
(PID.TID 0000.0001)                 1.639228879220326E+11,      /* J = 12 */
(PID.TID 0000.0001)                 1.712363708253573E+11,      /* J = 13 */
(PID.TID 0000.0001)                 1.777156073426415E+11,      /* J = 14 */
(PID.TID 0000.0001)                 1.833290312848623E+11,      /* J = 15 */
(PID.TID 0000.0001)                 1.880492946148330E+11,      /* J = 16 */
(PID.TID 0000.0001)                 1.918534006840893E+11,      /* J = 17 */
(PID.TID 0000.0001)                 1.947228162702492E+11,      /* J = 18 */
(PID.TID 0000.0001)                 1.966435618690094E+11,      /* J = 19 */
(PID.TID 0000.0001)     2 @  1.976062798008856E+11,             /* J = 20: 21 */
(PID.TID 0000.0001)                 1.966435618690094E+11,      /* J = 22 */
(PID.TID 0000.0001)                 1.947228162702492E+11,      /* J = 23 */
(PID.TID 0000.0001)                 1.918534006840893E+11,      /* J = 24 */
(PID.TID 0000.0001)                 1.880492946148330E+11,      /* J = 25 */
(PID.TID 0000.0001)                 1.833290312848623E+11,      /* J = 26 */
(PID.TID 0000.0001)                 1.777156073426415E+11,      /* J = 27 */
(PID.TID 0000.0001)                 1.712363708253573E+11,      /* J = 28 */
(PID.TID 0000.0001)                 1.639228879220326E+11,      /* J = 29 */
(PID.TID 0000.0001)                 1.558107891862220E+11,      /* J = 30 */
(PID.TID 0000.0001)                 1.469395959475426E+11,      /* J = 31 */
(PID.TID 0000.0001)                 1.373525277677229E+11,      /* J = 32 */
(PID.TID 0000.0001)                 1.270962918792465E+11,      /* J = 33 */
(PID.TID 0000.0001)                 1.162208556324093E+11,      /* J = 34 */
(PID.TID 0000.0001)                 1.047792030594106E+11,      /* J = 35 */
(PID.TID 0000.0001)                 9.282707674147523E+10,      /* J = 36 */
(PID.TID 0000.0001)                 8.042270623659998E+10,      /* J = 37 */
(PID.TID 0000.0001)                 6.762652439100235E+10,      /* J = 38 */
(PID.TID 0000.0001)                 5.450087291636665E+10,      /* J = 39 */
(PID.TID 0000.0001)                 4.110969866729047E+10       /* J = 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    90 @  3.433488626798250E+10              /* I =  1: 90 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 3.433488626798250E+10,      /* J =  1 */
(PID.TID 0000.0001)                 4.783442523123625E+10,      /* J =  2 */
(PID.TID 0000.0001)                 6.110091968306414E+10,      /* J =  3 */
(PID.TID 0000.0001)                 7.406973659603818E+10,      /* J =  4 */
(PID.TID 0000.0001)                 8.667769319778079E+10,      /* J =  5 */
(PID.TID 0000.0001)                 9.886336479107463E+10,      /* J =  6 */
(PID.TID 0000.0001)                 1.105673840088176E+11,      /* J =  7 */
(PID.TID 0000.0001)                 1.217327300458635E+11,      /* J =  8 */
(PID.TID 0000.0001)                 1.323050064586578E+11,      /* J =  9 */
(PID.TID 0000.0001)                 1.422327061792377E+11,      /* J = 10 */
(PID.TID 0000.0001)                 1.514674624524945E+11,      /* J = 11 */
(PID.TID 0000.0001)                 1.599642844741385E+11,      /* J = 12 */
(PID.TID 0000.0001)                 1.676817765813788E+11,      /* J = 13 */
(PID.TID 0000.0001)                 1.745823399284268E+11,      /* J = 14 */
(PID.TID 0000.0001)                 1.806323556642996E+11,      /* J = 15 */
(PID.TID 0000.0001)                 1.858023487204767E+11,      /* J = 16 */
(PID.TID 0000.0001)                 1.900671314104743E+11,      /* J = 17 */
(PID.TID 0000.0001)                 1.934059261417216E+11,      /* J = 18 */
(PID.TID 0000.0001)                 1.958024666419019E+11,      /* J = 19 */
(PID.TID 0000.0001)                 1.972450772065981E+11,      /* J = 20 */
(PID.TID 0000.0001)                 1.977267295821495E+11,      /* J = 21 */
(PID.TID 0000.0001)                 1.972450772065981E+11,      /* J = 22 */
(PID.TID 0000.0001)                 1.958024666419019E+11,      /* J = 23 */
(PID.TID 0000.0001)                 1.934059261417216E+11,      /* J = 24 */
(PID.TID 0000.0001)                 1.900671314104743E+11,      /* J = 25 */
(PID.TID 0000.0001)                 1.858023487204767E+11,      /* J = 26 */
(PID.TID 0000.0001)                 1.806323556642996E+11,      /* J = 27 */
(PID.TID 0000.0001)                 1.745823399284268E+11,      /* J = 28 */
(PID.TID 0000.0001)                 1.676817765813788E+11,      /* J = 29 */
(PID.TID 0000.0001)                 1.599642844741385E+11,      /* J = 30 */
(PID.TID 0000.0001)                 1.514674624524945E+11,      /* J = 31 */
(PID.TID 0000.0001)                 1.422327061792377E+11,      /* J = 32 */
(PID.TID 0000.0001)                 1.323050064586578E+11,      /* J = 33 */
(PID.TID 0000.0001)                 1.217327300458635E+11,      /* J = 34 */
(PID.TID 0000.0001)                 1.105673840088176E+11,      /* J = 35 */
(PID.TID 0000.0001)                 9.886336479107463E+10,      /* J = 36 */
(PID.TID 0000.0001)                 8.667769319778079E+10,      /* J = 37 */
(PID.TID 0000.0001)                 7.406973659603818E+10,      /* J = 38 */
(PID.TID 0000.0001)                 6.110091968306414E+10,      /* J = 39 */
(PID.TID 0000.0001)                 4.783442523123625E+10       /* J = 40 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 3.335490855875281E+14
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: theta.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: salt.bin
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: windx.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: windy.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: SST.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: SSS.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     0
(PID.TID 0000.0001) %MON time_secondsf                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_max             =  -0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9329580307007E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -1.8496928215027E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4434668483202E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.2513626348502E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   5.1755281830340E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7439460754395E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1028352737427E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4718545511620E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8229416934120E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.2249504761060E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_max                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_mean                      =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_r_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076123E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617712056034E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080171E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9829079474587E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   8.96505092384814E-15  8.55254915209884E+00
(PID.TID 0000.0001)      cg2d_init_res =   3.25964330325846E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      41
(PID.TID 0000.0001)      cg2d_last_res =   6.20895253930217E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     1
(PID.TID 0000.0001) %MON time_secondsf                =   1.0800000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   8.7083955129949E-01
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -3.5440825352850E-01
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   4.0637759435389E-17
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   8.6484951585563E-02
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.5693297072714E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   5.8154043988326E-02
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -1.2347638632761E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.3225551674631E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   3.4087712578893E-03
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   2.9571647129535E-05
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   1.0896886551677E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -1.5259193897367E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   2.8407768050158E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   8.8491808719141E-03
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   3.5970900310725E-05
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   6.2344383699975E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -3.5235485113750E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.7189512494358E-22
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   3.5353471781544E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   3.6231855297389E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9327944623998E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -1.8486819133684E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4434668483202E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.2510689869085E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   5.1744510335405E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7438877520977E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1030845979640E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4718545511620E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8221263008079E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.2548025161335E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   4.7678539165638E-02
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   3.7057708077636E-02
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.5675111923391E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   8.3983959831601E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   8.4542791959270E-06
(PID.TID 0000.0001) %MON ke_max                       =   7.3538831536440E-03
(PID.TID 0000.0001) %MON ke_mean                      =   4.5101845615489E-05
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -3.6111908324818E-07
(PID.TID 0000.0001) %MON vort_r_max                   =   3.6028004333527E-07
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617441775445E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9828547564071E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.1943001355698E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.0447378176801E-05
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -2.45914399954472E-14  1.40324358577480E+01
(PID.TID 0000.0001)      cg2d_init_res =   1.26358070636351E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      40
(PID.TID 0000.0001)      cg2d_last_res =   7.64641358413059E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     2
(PID.TID 0000.0001) %MON time_secondsf                =   2.1600000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.5145960735900E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -7.1467786680678E-01
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -9.0878678160986E-17
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   1.8742169637650E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.7568250749665E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   1.3130065745613E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -2.1320345131110E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -3.4705265403171E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   7.1339567639778E-03
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   6.2846750960778E-05
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   1.9260510941939E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -2.6801987718031E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   5.1288231745534E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.5372534195820E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   7.7112001077145E-05
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.0222931967696E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -5.9493001468520E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   6.8758049977432E-22
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.1691287700572E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   4.4919083746569E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9321594799546E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -1.8475996845170E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4387131219970E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.2431620132568E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.9544068899910E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7437937031270E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1023358035893E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4718129374741E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8245136608871E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.2784078986597E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   4.7688223017945E-02
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   3.7365175865914E-02
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   8.1186181055183E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   8.1453358066288E-02
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   6.5089954517622E-02
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.1587617401229E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   7.6970268930094E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.9704087704103E-05
(PID.TID 0000.0001) %MON ke_max                       =   2.2632567327693E-02
(PID.TID 0000.0001) %MON ke_mean                      =   1.4734312941364E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -6.2819368199996E-07
(PID.TID 0000.0001) %MON vort_r_max                   =   6.3440268032946E-07
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617031955603E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827709721231E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.9631746088868E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.7403603565474E-05
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   3.61932706027801E-14  1.18718018220213E+01
(PID.TID 0000.0001)      cg2d_init_res =   1.44537622065911E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      40
(PID.TID 0000.0001)      cg2d_last_res =   8.44479135511683E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     3
(PID.TID 0000.0001) %MON time_secondsf                =   3.2400000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.4351452700309E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -9.9663759383308E-01
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -3.4290305367960E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   2.8033596090622E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.2989488675047E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.0443475172593E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -2.7984170177566E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -6.0199460058577E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.1221290231683E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   8.9645044456215E-05
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   2.6080652425892E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -3.6271304644085E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   6.6680925518724E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.9617812107821E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.0857343287785E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.3085547816447E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -8.0010797345012E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.3751609995486E-22
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.9668983771923E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   5.0232971460715E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9320762184712E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -1.8482361913416E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4326821940771E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.2323151801876E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.8850313300384E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7435804336658E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1005921675483E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4717593640648E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8268072366362E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.2753722252282E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   8.1469901825875E-02
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   6.5630005842780E-02
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   6.9929094478004E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0759302322610E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   8.8086659631966E-02
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   7.5064465790718E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   5.9320702857512E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   8.8828661103657E-05
(PID.TID 0000.0001) %MON ke_max                       =   4.0559527424521E-02
(PID.TID 0000.0001) %MON ke_mean                      =   2.6803779160694E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -8.3391034095183E-07
(PID.TID 0000.0001) %MON vort_r_max                   =   8.7078611215124E-07
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3616553928820E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9826718135306E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.3673180484048E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   2.0230564659027E-05
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   2.15827355987130E-13  9.73218868095096E+00
(PID.TID 0000.0001)      cg2d_init_res =   1.35951482575456E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      40
(PID.TID 0000.0001)      cg2d_last_res =   8.25083553654838E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     4
(PID.TID 0000.0001) %MON time_secondsf                =   4.3200000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.2814847467224E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.2851090794281E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -4.4033998696560E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   3.6636790546445E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.8919826804445E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.6196162921619E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -3.5377892679542E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -8.5520425562443E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.5361659377931E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0877849042989E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   3.3890613040185E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -4.7150551352289E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   7.4141732642707E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.2097973574450E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.2715465610334E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.7005067883302E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.0948464387007E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.1918061996088E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   6.8800262616822E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   6.2014777307951E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9320700399301E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -1.8594192904521E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4262000874935E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.2195291110537E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.8349477578367E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7433152259929E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0982908441669E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4717049868476E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8279915547623E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.2189377282894E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.0761487613863E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   8.8817514609751E-02
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   4.7743692159014E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.2566636348522E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.1450744904777E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   7.0764916929076E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   7.3885463189840E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   1.5171563388120E-04
(PID.TID 0000.0001) %MON ke_max                       =   6.6724695497647E-02
(PID.TID 0000.0001) %MON ke_mean                      =   3.8682141036935E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.0603827213073E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.1317096800414E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3616077181746E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9825726894044E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.4754284091759E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   2.0300091795254E-05
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   2.54463117244086E-13  9.93602092752593E+00
(PID.TID 0000.0001)      cg2d_init_res =   1.05900961313997E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      40
(PID.TID 0000.0001)      cg2d_last_res =   6.94354569013957E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     5
(PID.TID 0000.0001) %MON time_secondsf                =   5.4000000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.4725741097302E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.4662557097210E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -4.1129628569766E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   4.3825345071766E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.7609095911025E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.0622247114398E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.2816778324342E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.0704913261702E-02
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.9219846700163E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.2430344704738E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   4.1809846844876E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -5.8228869088488E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   7.4492755049060E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3306812048675E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3710710627575E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.1170044924874E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.3688677857180E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -2.0169027993380E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   7.6764495189237E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   7.1557594347464E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9310787653686E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.0266660262382E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4198983751013E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.2058032947077E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.8074724168040E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7431100785303E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0963242714671E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4716545735447E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8281995761612E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.1604907441007E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.2569188722243E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.1545751730418E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   5.8573061083410E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.3288126237724E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.4141169231387E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   8.7457827773019E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   9.8965436690521E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   2.1709318053703E-04
(PID.TID 0000.0001) %MON ke_max                       =   9.9797723537981E-02
(PID.TID 0000.0001) %MON ke_mean                      =   4.9197945630859E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.2943542072658E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.3969718497915E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3615663992292E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9824910069823E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.3588199843550E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.8300116727848E-05
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   2.66453525910038E-13  9.36001437754309E+00
(PID.TID 0000.0001)      cg2d_init_res =   1.13425175778827E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      40
(PID.TID 0000.0001)      cg2d_last_res =   7.49618354715717E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     6
(PID.TID 0000.0001) %MON time_secondsf                =   6.4800000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.5243916411320E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.6296585426935E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -3.7382054212612E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   4.9018705023404E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.6028488200022E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.4300438162468E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.8882780782612E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.2226036331600E-02
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.2544565299563E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.3746737653306E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   4.8521605961952E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -6.7555537639181E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   6.9606763878340E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3756702410974E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3976736207762E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.4692758125246E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.5213220050794E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -2.6586445991274E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   8.0688150633565E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   7.3653802590354E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9293059992581E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.3701423069087E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4142287997746E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1918744794036E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7940802088451E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7430085585274E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0954121841547E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4716121801536E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8273517212107E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.1196816214223E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.3290825151202E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.4258498506530E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   8.0488378096894E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.2896464080978E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.6406196878411E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.0125459718483E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.1457757049862E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   2.7159336779880E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.3305484267874E-01
(PID.TID 0000.0001) %MON ke_mean                      =   5.7798923140415E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.4974430954304E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.6333085602281E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3615360148040E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9824379625432E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.0821999596107E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.4803275708529E-05
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   3.03757019537443E-13  7.82398849047193E+00
(PID.TID 0000.0001)      cg2d_init_res =   1.41184219916535E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      40
(PID.TID 0000.0001)      cg2d_last_res =   7.16977589616615E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     7
(PID.TID 0000.0001) %MON time_secondsf                =   7.5600000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.5572314487390E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.7454979245427E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -3.5789335110821E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.2138338987354E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.4664449019864E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.7152560749164E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.3571012546138E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.2995409352941E-02
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.5199549697173E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.4754308704690E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   5.4166036172148E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -7.5210302271482E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   6.1901214874974E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3889381290845E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3574284555267E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.7644602133661E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.6125358057113E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -2.7503219990973E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   8.3028623750501E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   7.3686317006639E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9269945527499E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.6562750926746E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4094919013026E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1784260260128E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7536342552215E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7429818330742E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0958139212842E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715806234505E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8255174161456E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0901934684911E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.2899083445070E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.6542319086986E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   9.2950482947178E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.3210685702532E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.8265194378900E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.1124188641691E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.2587897673492E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.0726272332870E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.6424228862473E-01
(PID.TID 0000.0001) %MON ke_mean                      =   6.4326493634545E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.6592338099214E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.8420731010765E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3615190284025E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9824156259950E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.7064041130928E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.0504961443643E-05
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   3.40172334745148E-13  8.74743688360553E+00
(PID.TID 0000.0001)      cg2d_init_res =   9.92419898122322E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   7.77629406137877E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     8
(PID.TID 0000.0001) %MON time_secondsf                =   8.6400000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.5293479902848E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.7382081426029E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -4.0848560492979E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.3496942486126E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.3610364156361E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.9036794276826E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.7123609142396E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.3011316308849E-02
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.7175759718217E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.5525275537602E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   5.9058770271760E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -8.1361300435016E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   5.3701371776679E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3933626136527E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.2807853423676E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   3.0100071242633E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.6750750516251E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   5.7298374981193E-22
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   8.5180376395920E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   7.3623433126617E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9235600266756E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.8691935292421E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4058433758873E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1662335562022E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7119436848464E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7429714770740E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0973947568055E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715608349860E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8230840381798E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0822673076378E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.3213368887282E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.8416740688952E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.0141793687810E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.4086760931101E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.9758994745181E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.2178022961674E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.3780394403999E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.2348445507159E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.9277494414474E-01
(PID.TID 0000.0001) %MON ke_mean                      =   6.8757428765902E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.7813682511618E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.0267683731396E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3615159618582E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9824211811686E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.2856369040288E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   6.1050827009352E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   9.59232693276135E-14  9.97897095235675E+00
(PID.TID 0000.0001)      cg2d_init_res =   8.47464886797540E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   4.82286118244536E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     9
(PID.TID 0000.0001) %MON time_secondsf                =   9.7200000000000E+05
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.4482197519502E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.6513594625197E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -6.6144687403769E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.3612514168713E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.3092117983053E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   4.0205953553864E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.9256991388215E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.2360863482179E-02
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.8532801214980E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.6151122328028E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   6.2916644212256E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -8.5294035423064E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   4.6781627520947E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3894768951815E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.2095747985833E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   3.1744144191626E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.6748268374076E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -2.2919349992477E-23
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   8.5842684384702E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   7.1315815555082E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9194367377273E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.0077318000936E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4033134617948E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1559560867232E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6868026722156E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7429365285050E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0998347820407E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715520052747E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8205273434285E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0849087420804E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.4089622052996E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.9922935116241E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.1112914248821E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.4612855940199E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   2.0714078913545E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.2832786286699E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.4521310798106E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.2488363879716E-04
(PID.TID 0000.0001) %MON ke_max                       =   2.1533788602739E-01
(PID.TID 0000.0001) %MON ke_mean                      =   7.1068525341067E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.8601004536385E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.1774948649197E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3615257782302E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9824491912736E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   8.7090885025293E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   2.1447998694691E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   2.93987056920741E-13  1.19122233186640E+01
(PID.TID 0000.0001)      cg2d_init_res =   7.52938095241486E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   9.16263752316168E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    10
(PID.TID 0000.0001) %MON time_secondsf                =   1.0800000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.4887320186189E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.5494940371142E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -4.6095164592995E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.3026100347805E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.3504003592444E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   4.0778923494008E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.9839110844621E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.1192470704494E-02
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.9332753241201E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.6597234593903E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   6.5538338758155E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -8.6582488592363E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   4.2208340820203E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3726640410576E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.1800476788936E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   3.2444919517741E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.5956443940467E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -5.5006439981945E-22
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   8.4794046807733E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   6.7329728583954E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9163296812038E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.0773581843385E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4018109644654E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1480179626217E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6552508527498E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7428728505256E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1027628967341E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715522303090E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8181832486576E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0898898265253E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.5200831843837E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   2.0885943617548E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.1695941695574E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.4756407402350E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   2.1026986146658E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.2898111788200E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.4595231760332E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.1781535165335E-04
(PID.TID 0000.0001) %MON ke_max                       =   2.2954711201581E-01
(PID.TID 0000.0001) %MON ke_mean                      =   7.1383980463802E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.8915651428595E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.2888144848565E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3615462135997E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9824916479197E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   5.0513397650647E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -9.9691517309234E-07
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   1.72528658026749E-13  1.23481016238544E+01
(PID.TID 0000.0001)      cg2d_init_res =   6.89327909054659E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   9.18303817418262E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    11
(PID.TID 0000.0001) %MON time_secondsf                =   1.1880000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.7069374673921E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.5104921787542E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -1.4990297428616E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.2157699145342E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.3825347988901E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   4.0534783766807E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.9111037334184E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -9.6878876774620E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.9618423629899E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.6788677958800E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   6.7084691907271E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -8.5482088006939E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   4.0380414367056E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3465780109210E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.2099348459073E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   3.2364941656245E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.4468756217816E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -6.6007727978334E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   8.2941292338651E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   6.3507124185779E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9143233464892E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.0868831317137E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4011503453734E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1425921541091E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6279223147728E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7427938197466E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1057750093734E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715589232313E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8162885348267E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0919294353171E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.5989387797177E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   2.1201447041842E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.1686549063637E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.4576863468839E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   2.0759748414853E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.2581207099370E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.4236629086129E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.0749095305059E-04
(PID.TID 0000.0001) %MON ke_max                       =   2.3576107393594E-01
(PID.TID 0000.0001) %MON ke_mean                      =   7.0092318643515E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.8777534634804E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.3632569576407E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3615741879792E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9825400276704E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.1817431962220E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -3.1084717434657E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   5.73430192218893E-14  1.33385535525677E+01
(PID.TID 0000.0001)      cg2d_init_res =   6.16599789253260E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   8.96198609871002E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    12
(PID.TID 0000.0001) %MON time_secondsf                =   1.2960000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.8518746528126E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.4632170397109E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   4.1598075364410E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.1288775612430E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.3802623610437E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.9551940935597E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.7292554557539E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -8.0334571618786E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.9422190423381E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.6707147778137E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   6.7693238635631E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -8.2293607556514E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   4.1122605678511E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3213729579800E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.2884352392477E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   3.1634088191053E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.2434260048812E-03
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   3.4837411988565E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   8.0612144104257E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   6.0148439216313E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9138830711170E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.0481538242494E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4010911630299E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1395616311529E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6155760180022E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7427037844987E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1084399479391E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715692324429E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8149005589042E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0940467265926E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.6292780899791E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   2.0931992038688E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.1337130088405E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.4128423103874E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.9985410146804E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.1960886188990E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.3534687003330E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   2.9733097552190E-04
(PID.TID 0000.0001) %MON ke_max                       =   2.3461690967925E-01
(PID.TID 0000.0001) %MON ke_mean                      =   6.7713857971671E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.8244000695607E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.4015819165785E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3616063139542E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9825877890670E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.3880401742410E-06
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -4.1424819246377E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -6.48370246381091E-14  1.37961804284876E+01
(PID.TID 0000.0001)      cg2d_init_res =   5.50779474635110E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   8.19785216416014E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    13
(PID.TID 0000.0001) %MON time_secondsf                =   1.4040000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.9446109493363E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.4463285634414E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   5.9492742919820E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.0609878140958E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.4202079081563E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.7943563110289E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.4552068062835E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -6.3973035798337E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.8776374733241E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.6369626816498E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   6.7383846425227E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -7.7210584835859E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   4.3809446250046E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3057697302627E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3875532003300E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   3.0258756882498E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -9.8906778212568E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   5.8673535980742E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   7.7878141268510E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   5.7319064195542E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9149822509991E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.9764319132603E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4013821400250E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1385808671411E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6161765235052E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7425923681277E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1103490189495E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715804422151E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8139550145329E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0960703404210E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.6113820860083E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   2.0151229086356E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.0733268113406E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.3452615348283E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.8750972905879E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.1016108261726E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.2465596190901E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   2.8951167094305E-04
(PID.TID 0000.0001) %MON ke_max                       =   2.2659213788693E-01
(PID.TID 0000.0001) %MON ke_mean                      =   6.4686074750686E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.7363283021366E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.4025098042519E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3616393401324E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9826306030711E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -8.0132767093077E-06
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -4.2059719521317E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.86517468137026E-13  1.39260166900719E+01
(PID.TID 0000.0001)      cg2d_init_res =   5.45144109352755E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      38
(PID.TID 0000.0001)      cg2d_last_res =   9.89283751601747E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    14
(PID.TID 0000.0001) %MON time_secondsf                =   1.5120000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.9956064260553E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.4254411915727E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -1.2235830276108E-15
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.0250305263050E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.4965861256173E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.5866056079296E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.1155220562168E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -4.9153714267858E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.7729732247564E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.5780489628837E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   6.6251043049295E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -7.0568923175126E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   4.7541880778743E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3015300091831E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.4773257863574E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.8263407985085E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.8762941017797E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   7.3341919975927E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   7.4798326060113E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   5.4641004483865E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9173352878276E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.8897850085834E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4018022283823E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1391617503286E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6397245197420E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7424447698762E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1111927026099E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715903447709E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8132353869882E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0962941549183E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.5528327089077E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.8906549720165E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   9.8685969844631E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.2614948061854E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.7138012479337E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   9.7773591870186E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.1134475067983E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   2.8541244202040E-04
(PID.TID 0000.0001) %MON ke_max                       =   2.1304816612431E-01
(PID.TID 0000.0001) %MON ke_mean                      =   6.1272561070576E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.6169984165968E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.3680302630799E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3616704528743E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9826657050056E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -1.0742017720345E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -3.5282221737296E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   4.52082815627364E-13  1.34465204075176E+01
(PID.TID 0000.0001)      cg2d_init_res =   6.19386015921378E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   4.98540453942683E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    15
(PID.TID 0000.0001) %MON time_secondsf                =   1.6200000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.9867082572892E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.4157507264446E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -6.5207793814480E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.0289411685045E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.5937378015249E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.3461044891358E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.7353528779805E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -3.6842232071254E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.6372861596791E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.4950088533297E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   6.4482515383130E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -6.2829964421423E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   5.1334228584287E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.3026265132338E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.5338093448862E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.5786081015508E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.9227942170756E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -6.9674823977131E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   7.1324668624262E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   5.1506960012297E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9202238392522E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.8069090746597E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4021807362097E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1407377549632E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6745397931227E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7422524962569E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1108377787452E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715974825449E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8125501261032E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0977824514415E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.4603402738490E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.7280206561644E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   8.7588842717041E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.1677445616265E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.5659898204662E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   8.3998588060706E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   9.6248382152892E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   2.8585684937066E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.9585651353438E-01
(PID.TID 0000.0001) %MON ke_mean                      =   5.7614438320551E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.4716082973550E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.3042032796188E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3616974718736E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9826918819633E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -7.8611961462112E-06
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -2.3917494562244E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   3.78364006792253E-13  1.23834039965191E+01
(PID.TID 0000.0001)      cg2d_init_res =   6.71813916685781E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   6.97417826126779E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    16
(PID.TID 0000.0001) %MON time_secondsf                =   1.7280000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.9161159785227E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.4285801202504E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -8.7693239957405E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.0740499793351E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.7182920701997E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.0906985504152E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.3305432071182E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -2.7586255534260E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.4849881259664E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.3947483197904E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   6.2242443632587E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -5.4410609281133E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   5.4258823105262E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.2986932534410E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.5465735629132E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.3036366488110E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -8.1793250230936E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   7.5175467975325E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   6.7551458653807E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   4.8121791833889E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9228809153915E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.7451014405005E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4024089184839E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1427699074989E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7027747189620E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7420194178308E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1093750845545E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4716011780246E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8117283742822E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0984553434302E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.3412249014059E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.5596083814384E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   7.4643168953658E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0679179375450E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.5115885686289E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   7.0703061623610E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   8.0995275189228E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   2.9100803076480E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.7664058652553E-01
(PID.TID 0000.0001) %MON ke_mean                      =   5.3823075893308E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.3523405792143E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.2180151709729E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617189656867E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827094463566E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -1.6912717648486E-06
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -1.0728978744356E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   3.28626015289046E-13  1.09899905529959E+01
(PID.TID 0000.0001)      cg2d_init_res =   6.97751696345009E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   7.21693606435415E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    17
(PID.TID 0000.0001) %MON time_secondsf                =   1.8360000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.7991715124605E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.4712445268936E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -9.8935963028867E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.1536195992852E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.8530177202790E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.8294047572682E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -3.9148609873169E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -2.1536163939556E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.3339960030784E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.2896520202628E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   5.9664427233237E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -4.5614899658563E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   5.5549661967398E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.2801506168399E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.5194915141746E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.0162701323873E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -8.2336230075054E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -7.3341919975927E-22
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   6.3621933309285E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   4.4634604313075E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9249651237976E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.7181909527830E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4024393831122E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1448211709454E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7291854786476E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7417632324144E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1071119785070E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4716014211143E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8106700332855E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.1003600038994E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.2127002519356E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.5054288157621E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   6.3395336267232E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   9.6541012787473E-02
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.4489801636312E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   5.9251956027550E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   6.7138113608806E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.0020658271479E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.5670155181471E-01
(PID.TID 0000.0001) %MON ke_mean                      =   5.0032581850007E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.2638474355298E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   2.1151281230179E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617342767789E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827197267626E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   5.7563547363160E-06
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.9414321986077E-07
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   4.06785716222657E-13  1.29779381453879E+01
(PID.TID 0000.0001)      cg2d_init_res =   5.60034718416902E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   5.35747124726624E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    18
(PID.TID 0000.0001) %MON time_secondsf                =   1.9440000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.6765854890139E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.5426346694826E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -9.9685477900298E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.2551167202833E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.9852393851173E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.6200466305794E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -3.9668284964918E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.8508150336981E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.2019077343821E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.1920879180348E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   5.6877463072933E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -3.6638776261339E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   5.4682983454613E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.2419891402629E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.4649575812236E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.7225888267361E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -8.0404663725827E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   3.3003863989167E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.9682106403221E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   4.1097729061279E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9264164963010E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.7346710777300E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4022699000084E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1465628891431E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7511565495889E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7415116282729E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1045059092108E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715987060878E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8093844924851E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0963931644753E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.0964014891153E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.4430755412346E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   5.3697085149967E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   9.6867042366963E-02
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.3812973587792E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   6.0449151042043E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   6.6116258952235E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.1214776211455E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.3703698333921E-01
(PID.TID 0000.0001) %MON ke_mean                      =   4.6409047243494E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.1681616646698E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.9998223739831E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617434487583E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827245775970E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.2953755724300E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.2462526080235E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   3.94351218346856E-13  1.46602976692410E+01
(PID.TID 0000.0001)      cg2d_init_res =   4.68562521238081E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      38
(PID.TID 0000.0001)      cg2d_last_res =   9.10327268823131E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    19
(PID.TID 0000.0001) %MON time_secondsf                =   2.0520000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.6855572819345E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.6333003458273E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -7.1953427657358E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.3644448858757E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.0993393671214E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.4760877054857E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.0906567457253E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.8069080283643E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.1021820910401E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.1120463561451E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   5.3988163303649E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -3.2154599855506E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   5.1425111829503E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.1855109063081E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.4005510183637E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.4258304143697E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -7.5155124083945E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -2.3836123992176E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.6061588000167E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   3.8234316162495E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9272178837318E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.7964640504096E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4019289176017E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1477798162724E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7562632423133E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7412941297802E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1020609837130E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715938168893E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8079310429073E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0859607572278E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   9.9345928758581E-02
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.3756685451310E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   5.5676849643987E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   9.9890837389947E-02
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.3111292829824E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   6.2706364226761E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   6.9239087941446E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.2527079274643E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.1832647603066E-01
(PID.TID 0000.0001) %MON ke_mean                      =   4.3150043023347E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.1523281421374E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.8760081119204E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617470955765E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827261372071E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.8802574317776E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.9980737045861E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-13  1.54238475621586E+01
(PID.TID 0000.0001)      cg2d_init_res =   4.12321737493121E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      38
(PID.TID 0000.0001)      cg2d_last_res =   7.99121997922299E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    20
(PID.TID 0000.0001) %MON time_secondsf                =   2.1600000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.6590096641777E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.7583968458461E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -1.0942917122890E-15
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.4696154372622E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.1700421378139E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.3181503883470E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.1857460441160E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -1.9627914222625E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.0404887770202E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0554243013776E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   5.1071199849206E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -3.2437920806146E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   4.5834153865947E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.1179456635292E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3455552863412E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.1315013840937E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -6.7078631190332E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -2.7503219990973E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.3158550528425E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   3.6797640016839E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9274100626770E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -2.8986527232889E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4014654839219E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1483843304626E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7442459982198E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7411330065972E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1002216642917E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715876193266E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8064209193947E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0691900393770E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   9.9911125933452E-02
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.4214078273987E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   5.7755861787806E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0221284831228E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.2402893808913E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   6.2949578734554E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   7.0091014370896E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.3814975566908E-04
(PID.TID 0000.0001) %MON ke_max                       =   1.0102796812640E-01
(PID.TID 0000.0001) %MON ke_mean                      =   4.0448238335577E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.1857014946531E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.7475057829617E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617462372499E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827265603327E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.2657502214073E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   2.4303218249725E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   2.75335310107039E-13  1.52671216373005E+01
(PID.TID 0000.0001)      cg2d_init_res =   3.98605748375077E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      38
(PID.TID 0000.0001)      cg2d_last_res =   8.08790909917483E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    21
(PID.TID 0000.0001) %MON time_secondsf                =   2.2680000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.5991022831393E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.8705393413115E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -5.6213615357311E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.5627467608177E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.1942444078277E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.3109735203364E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.2547473939246E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -2.2524016804087E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.0134427048941E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0224002396035E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   4.8182104720374E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -3.8256658401905E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   3.8226178467614E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.0508012660501E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3141068444436E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.1910210533998E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -5.6819328412006E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   2.2002575992778E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.1203521399012E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   3.6867960817430E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9285644484792E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.0303800789684E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4009378986618E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1483961267656E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.7199567580613E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7410368549018E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0992938400377E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715809216739E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8049843822907E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0466113537105E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.0223360847281E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.4834873684354E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   5.7979875150247E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0389781066474E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.1701262748892E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   6.1435621336142E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   6.8880812085704E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.4976316622065E-04
(PID.TID 0000.0001) %MON ke_max                       =   8.5450303860793E-02
(PID.TID 0000.0001) %MON ke_mean                      =   3.8450121713394E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.2142949590919E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.6177706446855E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617421213387E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827277198782E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.4312280250966E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   2.5706185256245E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   2.80664380625240E-13  1.44569157299371E+01
(PID.TID 0000.0001)      cg2d_init_res =   4.15053251400324E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      38
(PID.TID 0000.0001)      cg2d_last_res =   8.60140994643057E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    22
(PID.TID 0000.0001) %MON time_secondsf                =   2.3760000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.5122825662502E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.9494202314919E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -7.0454397914496E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.6397544015862E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.1838111051381E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.3512023011541E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.3012113932222E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -2.6104203985692E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.0114284222469E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0089069373198E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   4.5360941357023E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -4.3157751770398E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   2.9121074589505E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.9972004743851E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3096738801436E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.2116603686738E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -5.6353918834252E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.2834835995787E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.0191172249502E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   3.7988878332451E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9291282395360E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.1768115735334E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.4004029099015E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1479113894579E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6849085811705E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7409991631456E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0994077218327E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715743845814E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8037464065772E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   8.0188035424109E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.0391891305318E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.5021967196028E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   5.6585440704341E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0503242744802E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.1016129254543E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   5.8339836779628E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   6.5824101760254E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.5951405737853E-04
(PID.TID 0000.0001) %MON ke_max                       =   7.1729918947696E-02
(PID.TID 0000.0001) %MON ke_mean                      =   3.7237075353450E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.2374122391124E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.4894573039998E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617360525507E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827310320827E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.3930890361062E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   2.4804188312920E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   1.88293824976427E-13  1.29955108780385E+01
(PID.TID 0000.0001)      cg2d_init_res =   4.64772293010334E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      38
(PID.TID 0000.0001)      cg2d_last_res =   9.81067564332971E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    23
(PID.TID 0000.0001) %MON time_secondsf                =   2.4840000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.4061020016633E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -2.0290570877470E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -8.3196150728820E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.6989678540059E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.1449770969569E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.3889742894041E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.3309861812135E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -2.9782348995159E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.0238134022408E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0096194465601E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   4.2633935954715E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -4.7060533507806E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   1.9170844694825E-03
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.9683965713395E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3253973624458E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.2083914026488E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -5.6694792851559E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.0084513996690E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   4.9898289528435E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   3.9431857949184E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9303073795208E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.3217497455760E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.3999076580018E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1470663312556E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.6417355861741E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7410020570081E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1005188506043E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715684643418E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8028027383368E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   7.9888406956915E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.0505376028524E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.4792708900858E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   5.3734060191762E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0575950593210E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.1428883625439E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   5.4126779151296E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   6.1248723776467E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.6710297770250E-04
(PID.TID 0000.0001) %MON ke_max                       =   6.3529724676730E-02
(PID.TID 0000.0001) %MON ke_mean                      =   3.6828167893522E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.2542049856262E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.3644601939889E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617292504118E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827373770211E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.1944001530304E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   2.2367765855740E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   5.22248910783674E-13  1.09125688303257E+01
(PID.TID 0000.0001)      cg2d_init_res =   5.58047197752775E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   5.12738245057969E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    24
(PID.TID 0000.0001) %MON time_secondsf                =   2.5920000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.2880993646229E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -2.0803751968076E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -9.3689358928851E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.7402010374252E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.0864731379594E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.4209789029880E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.3486511438812E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -3.3077847824717E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.0432670847578E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0203007519340E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   4.0014996354563E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -4.9913659839098E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   9.0763803285034E-04
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.9701167596538E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3494712604592E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.2053351277536E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -5.9203944999458E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.0084513996690E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   4.9996493436260E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   4.0584948789657E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.9481767517502E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.4507014459314E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.3994845008429E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1460040927059E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.5963782266860E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7410230812537E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1024339771848E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715634007759E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8022204589113E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   7.9561314793993E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.0578098644416E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.4173511849725E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   4.9698753073485E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0619087136387E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.2121779484845E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   4.9030572567275E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   5.5481963694548E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.7243432323503E-04
(PID.TID 0000.0001) %MON ke_max                       =   7.1234233425368E-02
(PID.TID 0000.0001) %MON ke_mean                      =   3.7187682446546E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.2640690715868E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.3347364192786E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617227492613E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827470832827E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.8913288855032E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.9205645322610E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   6.28830321147689E-13  8.53982590734805E+00
(PID.TID 0000.0001)      cg2d_init_res =   6.99279095335682E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   4.89562011673323E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    25
(PID.TID 0000.0001) %MON time_secondsf                =   2.7000000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.1662488047390E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -2.0995908673860E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -6.1460219457326E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.7644293492285E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.0234869630381E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.4446717309182E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.3545181637573E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -3.5634428621769E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.0675164283664E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0387825344235E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   3.7511606162920E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -5.1688236873416E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =  -4.9205544556465E-05
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.0004140669574E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3714639551231E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.1763480095865E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -6.3170646996774E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.1001287996389E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.0186386675680E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   4.1165579473935E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   3.0057105110052E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.5526776725557E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.3991501129898E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1448561799785E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.5562993000159E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7410419246920E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1048504058094E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715592348944E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8020339323074E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   7.9232943700354E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.0621243948933E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.3198977857956E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   4.9749072416248E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0633413968600E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.2552744306063E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   5.1673299194771E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   5.5463629281733E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.7558490907894E-04
(PID.TID 0000.0001) %MON ke_max                       =   7.6081193412887E-02
(PID.TID 0000.0001) %MON ke_mean                      =   3.8230830462213E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.2666740340514E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.3520174630852E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617173416505E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827599729614E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.5378538500228E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.5983609121174E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-13  8.28140259113399E+00
(PID.TID 0000.0001)      cg2d_init_res =   7.00866141795472E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      39
(PID.TID 0000.0001)      cg2d_last_res =   4.95741856603843E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    26
(PID.TID 0000.0001) %MON time_secondsf                =   2.8080000000000E+06
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.0692997728291E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -2.0873199308388E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -5.9961189714465E-16
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.7737406502546E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   2.9675130043459E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   2.4587308984053E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -4.3505946553029E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -3.7222722756252E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.0986049501671E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0638402560053E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   3.5129799249615E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -5.2376981403976E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =  -8.9591634331190E-04
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.0503346413030E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.3854626351949E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.1341242378707E-03
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -6.5308432295237E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.8793866993831E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.0244023357439E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   4.1094264926118E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   3.0468862997982E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -3.6205042582064E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   3.3989079838930E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.1437316345876E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   4.5280716614454E-03
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.7410449689352E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.1074036746348E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4715558639949E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   2.8022325670815E-01
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   7.8917569906963E-04
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.0635573691029E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.2656894420271E-01
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   5.5463629281733E-01
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.0623833048729E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.2720009326254E-01
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   5.4790997011496E-01
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   5.9927652981324E-01
(PID.TID 0000.0001) %MON pe_b_mean                    =   3.7679925604845E-04
(PID.TID 0000.0001) %MON ke_max                       =   7.7651073690389E-02
(PID.TID 0000.0001) %MON ke_mean                      =   3.9826041804288E-04
(PID.TID 0000.0001) %MON ke_vol                       =   1.4474490094807E+18
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.2617310549196E-06
(PID.TID 0000.0001) %MON vort_r_max                   =   1.3527245702732E-06
(PID.TID 0000.0001) %MON vort_a_mean                  =  -1.8569334076122E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   7.3617135604939E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -2.1757776080170E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   9.9827754575152E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   1.1803041421789E-05
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.3156894974345E-06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %CHECKPOINT        26 ckptA
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   2.1264610025100410
(PID.TID 0000.0001)         System time:  0.19299900112673640
(PID.TID 0000.0001)     Wall clock time:   2.9636211395263672
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   5.5627999361604452E-002
(PID.TID 0000.0001)         System time:   4.9549000803381205E-002
(PID.TID 0000.0001)     Wall clock time:  0.22169399261474609
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   2.0707969442009926
(PID.TID 0000.0001)         System time:  0.14343200251460075
(PID.TID 0000.0001)     Wall clock time:   2.7418870925903320
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   5.2444003522396088E-002
(PID.TID 0000.0001)         System time:   3.5684000700712204E-002
(PID.TID 0000.0001)     Wall clock time:  0.16435503959655762
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   2.0183238834142685
(PID.TID 0000.0001)         System time:  0.10774400085210800
(PID.TID 0000.0001)     Wall clock time:   2.5775010585784912
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   2.0180709958076477
(PID.TID 0000.0001)         System time:  0.10772499442100525
(PID.TID 0000.0001)     Wall clock time:   2.5772135257720947
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0000.0001)           User time:   2.0175660997629166
(PID.TID 0000.0001)         System time:  0.10767599940299988
(PID.TID 0000.0001)     Wall clock time:   2.5766150951385498
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   7.4511021375656128E-004
(PID.TID 0000.0001)         System time:   6.3978135585784912E-005
(PID.TID 0000.0001)     Wall clock time:   8.6426734924316406E-004
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   2.4890899658203125E-004
(PID.TID 0000.0001)         System time:   2.8990209102630615E-005
(PID.TID 0000.0001)     Wall clock time:   2.8300285339355469E-004
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.5106966495513916E-004
(PID.TID 0000.0001)         System time:   2.2977590560913086E-005
(PID.TID 0000.0001)     Wall clock time:   2.6607513427734375E-004
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.6086082458496094E-002
(PID.TID 0000.0001)         System time:   9.2302262783050537E-004
(PID.TID 0000.0001)     Wall clock time:   3.9135217666625977E-002
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.52045600116252899
(PID.TID 0000.0001)         System time:   7.7899992465972900E-003
(PID.TID 0000.0001)     Wall clock time:  0.69804811477661133
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.76557180285453796
(PID.TID 0000.0001)         System time:   8.2050040364265442E-003
(PID.TID 0000.0001)     Wall clock time:  0.87944388389587402
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.11010015010833740
(PID.TID 0000.0001)         System time:   2.6200190186500549E-003
(PID.TID 0000.0001)     Wall clock time:  0.12073564529418945
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.5339018106460571E-002
(PID.TID 0000.0001)         System time:   6.1900168657302856E-004
(PID.TID 0000.0001)     Wall clock time:   6.9297075271606445E-002
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.0211841464042664E-002
(PID.TID 0000.0001)         System time:   4.1302293539047241E-004
(PID.TID 0000.0001)     Wall clock time:   4.3893098831176758E-002
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.8546180129051208E-002
(PID.TID 0000.0001)         System time:   5.3000450134277344E-004
(PID.TID 0000.0001)     Wall clock time:   5.0683498382568359E-002
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   5.8818727731704712E-002
(PID.TID 0000.0001)         System time:   6.2401592731475830E-004
(PID.TID 0000.0001)     Wall clock time:   6.2255144119262695E-002
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.30474609136581421
(PID.TID 0000.0001)         System time:   1.3437002897262573E-002
(PID.TID 0000.0001)     Wall clock time:  0.41207981109619141
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.2009770870208740E-002
(PID.TID 0000.0001)         System time:   4.1225999593734741E-002
(PID.TID 0000.0001)     Wall clock time:  0.11867451667785645
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.0766730904579163E-002
(PID.TID 0000.0001)         System time:   2.9982008039951324E-002
(PID.TID 0000.0001)     Wall clock time:   7.6308012008666992E-002
(PID.TID 0000.0001)          No. starts:          26
(PID.TID 0000.0001)           No. stops:          26
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000002
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000003
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000004
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =          10634
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =          10634
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
STOP NORMAL END
(MITgcm) Macs-MacBook-Pro:run mac$ ./mitgcmuv > output.txt
STOP NORMAL END
(MITgcm) Macs-MacBook-Pro:run mac$ output.txt
-bash: output.txt: command not found
(MITgcm) Macs-MacBook-Pro:run mac$ less output.txt
(MITgcm) Macs-MacBook-Pro:run mac$ ls
DRC.data			Eta.0000000000.001.001.data	RAW.001.001.data		U.0000000000.001.002.meta	XC.002.002.meta
DRC.meta			Eta.0000000000.001.001.meta	RAW.001.001.meta		U.0000000000.002.001.data	XG.001.001.data
DRF.data			Eta.0000000000.001.002.data	RAW.001.002.data		U.0000000000.002.001.meta	XG.001.001.meta
DRF.meta			Eta.0000000000.001.002.meta	RAW.001.002.meta		U.0000000000.002.002.data	XG.001.002.data
DXC.001.001.data		Eta.0000000000.002.001.data	RAW.002.001.data		U.0000000000.002.002.meta	XG.001.002.meta
DXC.001.001.meta		Eta.0000000000.002.001.meta	RAW.002.001.meta		U.0000000024.001.001.data	XG.002.001.data
DXC.001.002.data		Eta.0000000000.002.002.data	RAW.002.002.data		U.0000000024.001.001.meta	XG.002.001.meta
DXC.001.002.meta		Eta.0000000000.002.002.meta	RAW.002.002.meta		U.0000000024.001.002.data	XG.002.002.data
DXC.002.001.data		Eta.0000000024.001.001.data	RAZ.001.001.data		U.0000000024.001.002.meta	XG.002.002.meta
DXC.002.001.meta		Eta.0000000024.001.001.meta	RAZ.001.001.meta		U.0000000024.002.001.data	YC.001.001.data
DXC.002.002.data		Eta.0000000024.001.002.data	RAZ.001.002.data		U.0000000024.002.001.meta	YC.001.001.meta
DXC.002.002.meta		Eta.0000000024.001.002.meta	RAZ.001.002.meta		U.0000000024.002.002.data	YC.001.002.data
DXF.001.001.data		Eta.0000000024.002.001.data	RAZ.002.001.data		U.0000000024.002.002.meta	YC.001.002.meta
DXF.001.001.meta		Eta.0000000024.002.001.meta	RAZ.002.001.meta		U.0000000026.001.001.data	YC.002.001.data
DXF.001.002.data		Eta.0000000024.002.002.data	RAZ.002.002.data		U.0000000026.001.001.meta	YC.002.001.meta
DXF.001.002.meta		Eta.0000000024.002.002.meta	RAZ.002.002.meta		U.0000000026.001.002.data	YC.002.002.data
DXF.002.001.data		Eta.0000000026.001.001.data	RC.data				U.0000000026.001.002.meta	YC.002.002.meta
DXF.002.001.meta		Eta.0000000026.001.001.meta	RC.meta				U.0000000026.002.001.data	YG.001.001.data
DXF.002.002.data		Eta.0000000026.001.002.data	RF.data				U.0000000026.002.001.meta	YG.001.001.meta
DXF.002.002.meta		Eta.0000000026.001.002.meta	RF.meta				U.0000000026.002.002.data	YG.001.002.data
DXG.001.001.data		Eta.0000000026.002.001.data	RhoRef.data			U.0000000026.002.002.meta	YG.001.002.meta
DXG.001.001.meta		Eta.0000000026.002.001.meta	RhoRef.meta			V.0000000000.001.001.data	YG.002.001.data
DXG.001.002.data		Eta.0000000026.002.002.data	S.0000000000.001.001.data	V.0000000000.001.001.meta	YG.002.001.meta
DXG.001.002.meta		Eta.0000000026.002.002.meta	S.0000000000.001.001.meta	V.0000000000.001.002.data	YG.002.002.data
DXG.002.001.data		PH.0000000024.001.001.data	S.0000000000.001.002.data	V.0000000000.001.002.meta	YG.002.002.meta
DXG.002.001.meta		PH.0000000024.001.001.meta	S.0000000000.001.002.meta	V.0000000000.002.001.data	data
DXG.002.002.data		PH.0000000024.001.002.data	S.0000000000.002.001.data	V.0000000000.002.001.meta	data.pkg
DXG.002.002.meta		PH.0000000024.001.002.meta	S.0000000000.002.001.meta	V.0000000000.002.002.data	eedata
DXV.001.001.data		PH.0000000024.002.001.data	S.0000000000.002.002.data	V.0000000000.002.002.meta	eedata.mth
DXV.001.001.meta		PH.0000000024.002.001.meta	S.0000000000.002.002.meta	V.0000000024.001.001.data	hFacC.001.001.data
DXV.001.002.data		PH.0000000024.002.002.data	S.0000000024.001.001.data	V.0000000024.001.001.meta	hFacC.001.001.meta
DXV.001.002.meta		PH.0000000024.002.002.meta	S.0000000024.001.001.meta	V.0000000024.001.002.data	hFacC.001.002.data
DXV.002.001.data		PH.0000000026.001.001.data	S.0000000024.001.002.data	V.0000000024.001.002.meta	hFacC.001.002.meta
DXV.002.001.meta		PH.0000000026.001.001.meta	S.0000000024.001.002.meta	V.0000000024.002.001.data	hFacC.002.001.data
DXV.002.002.data		PH.0000000026.001.002.data	S.0000000024.002.001.data	V.0000000024.002.001.meta	hFacC.002.001.meta
DXV.002.002.meta		PH.0000000026.001.002.meta	S.0000000024.002.001.meta	V.0000000024.002.002.data	hFacC.002.002.data
DYC.001.001.data		PH.0000000026.002.001.data	S.0000000024.002.002.data	V.0000000024.002.002.meta	hFacC.002.002.meta
DYC.001.001.meta		PH.0000000026.002.001.meta	S.0000000024.002.002.meta	V.0000000026.001.001.data	hFacS.001.001.data
DYC.001.002.data		PH.0000000026.002.002.data	S.0000000026.001.001.data	V.0000000026.001.001.meta	hFacS.001.001.meta
DYC.001.002.meta		PH.0000000026.002.002.meta	S.0000000026.001.001.meta	V.0000000026.001.002.data	hFacS.001.002.data
DYC.002.001.data		PHL.0000000024.001.001.data	S.0000000026.001.002.data	V.0000000026.001.002.meta	hFacS.001.002.meta
DYC.002.001.meta		PHL.0000000024.001.001.meta	S.0000000026.001.002.meta	V.0000000026.002.001.data	hFacS.002.001.data
DYC.002.002.data		PHL.0000000024.001.002.data	S.0000000026.002.001.data	V.0000000026.002.001.meta	hFacS.002.001.meta
DYC.002.002.meta		PHL.0000000024.001.002.meta	S.0000000026.002.001.meta	V.0000000026.002.002.data	hFacS.002.002.data
DYF.001.001.data		PHL.0000000024.002.001.data	S.0000000026.002.002.data	V.0000000026.002.002.meta	hFacS.002.002.meta
DYF.001.001.meta		PHL.0000000024.002.001.meta	S.0000000026.002.002.meta	W.0000000000.001.001.data	hFacW.001.001.data
DYF.001.002.data		PHL.0000000024.002.002.data	SSS.bin				W.0000000000.001.001.meta	hFacW.001.001.meta
DYF.001.002.meta		PHL.0000000024.002.002.meta	SST.bin				W.0000000000.001.002.data	hFacW.001.002.data
DYF.002.001.data		PHL.0000000026.001.001.data	STDERR.0000			W.0000000000.001.002.meta	hFacW.001.002.meta
DYF.002.001.meta		PHL.0000000026.001.001.meta	T.0000000000.001.001.data	W.0000000000.002.001.data	hFacW.002.001.data
DYF.002.002.data		PHL.0000000026.001.002.data	T.0000000000.001.001.meta	W.0000000000.002.001.meta	hFacW.002.001.meta
DYF.002.002.meta		PHL.0000000026.001.002.meta	T.0000000000.001.002.data	W.0000000000.002.002.data	hFacW.002.002.data
DYG.001.001.data		PHL.0000000026.002.001.data	T.0000000000.001.002.meta	W.0000000000.002.002.meta	hFacW.002.002.meta
DYG.001.001.meta		PHL.0000000026.002.001.meta	T.0000000000.002.001.data	W.0000000024.001.001.data	mitgcmuv
DYG.001.002.data		PHL.0000000026.002.002.data	T.0000000000.002.001.meta	W.0000000024.001.001.meta	output.txt
DYG.001.002.meta		PHL.0000000026.002.002.meta	T.0000000000.002.002.data	W.0000000024.001.002.data	pickup.ckptA.001.001.data
DYG.002.001.data		PHrefC.data			T.0000000000.002.002.meta	W.0000000024.001.002.meta	pickup.ckptA.001.001.meta
DYG.002.001.meta		PHrefC.meta			T.0000000024.001.001.data	W.0000000024.002.001.data	pickup.ckptA.001.002.data
DYG.002.002.data		PHrefF.data			T.0000000024.001.001.meta	W.0000000024.002.001.meta	pickup.ckptA.001.002.meta
DYG.002.002.meta		PHrefF.meta			T.0000000024.001.002.data	W.0000000024.002.002.data	pickup.ckptA.002.001.data
DYU.001.001.data		RAC.001.001.data		T.0000000024.001.002.meta	W.0000000024.002.002.meta	pickup.ckptA.002.001.meta
DYU.001.001.meta		RAC.001.001.meta		T.0000000024.002.001.data	W.0000000026.001.001.data	pickup.ckptA.002.002.data
DYU.001.002.data		RAC.001.002.data		T.0000000024.002.001.meta	W.0000000026.001.001.meta	pickup.ckptA.002.002.meta
DYU.001.002.meta		RAC.001.002.meta		T.0000000024.002.002.data	W.0000000026.001.002.data	pickup_cd.ckptA.001.001.data
DYU.002.001.data		RAC.002.001.data		T.0000000024.002.002.meta	W.0000000026.001.002.meta	pickup_cd.ckptA.001.001.meta
DYU.002.001.meta		RAC.002.001.meta		T.0000000026.001.001.data	W.0000000026.002.001.data	pickup_cd.ckptA.001.002.data
DYU.002.002.data		RAC.002.002.data		T.0000000026.001.001.meta	W.0000000026.002.001.meta	pickup_cd.ckptA.001.002.meta
DYU.002.002.meta		RAC.002.002.meta		T.0000000026.001.002.data	W.0000000026.002.002.data	pickup_cd.ckptA.002.001.data
Depth.001.001.data		RAS.001.001.data		T.0000000026.001.002.meta	W.0000000026.002.002.meta	pickup_cd.ckptA.002.001.meta
Depth.001.001.meta		RAS.001.001.meta		T.0000000026.002.001.data	XC.001.001.data			pickup_cd.ckptA.002.002.data
Depth.001.002.data		RAS.001.002.data		T.0000000026.002.001.meta	XC.001.001.meta			pickup_cd.ckptA.002.002.meta
Depth.001.002.meta		RAS.001.002.meta		T.0000000026.002.002.data	XC.001.002.data			salt.bin
Depth.002.001.data		RAS.002.001.data		T.0000000026.002.002.meta	XC.001.002.meta			theta.bin
Depth.002.001.meta		RAS.002.001.meta		U.0000000000.001.001.data	XC.002.001.data			topog.bin
Depth.002.002.data		RAS.002.002.data		U.0000000000.001.001.meta	XC.002.001.meta			windx.bin
Depth.002.002.meta		RAS.002.002.meta		U.0000000000.001.002.data	XC.002.002.data			windy.bin
(MITgcm) Macs-MacBook-Pro:run mac$ pwd
/Users/mac/MITgcm/verification/exp2/run
(MITgcm) Macs-MacBook-Pro:run mac$ pip install --user MITgcmutils
-bash: pip: command not found
(MITgcm) Macs-MacBook-Pro:run mac$ conda install --user MITgcmutils
usage: conda [-h] [-V] command ...
conda: error: unrecognized arguments: --user
(MITgcm) Macs-MacBook-Pro:run mac$ which python
/usr/bin/python
(MITgcm) Macs-MacBook-Pro:run mac$ python -v
# installing zipimport hook
import zipimport # builtin
# installed zipimport hook
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site.py
import site # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.py
import os # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc
import errno # builtin
import posix # builtin
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/posixpath.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/posixpath.py
import posixpath # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/posixpath.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/stat.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/stat.py
import stat # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/stat.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/genericpath.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/genericpath.py
import genericpath # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/genericpath.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/warnings.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/warnings.py
import warnings # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/warnings.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/linecache.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/linecache.py
import linecache # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/linecache.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/types.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/types.py
import types # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/types.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py
import UserDict # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_abcoll.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_abcoll.py
import _abcoll # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_abcoll.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/abc.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/abc.py
import abc # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/abc.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_weakrefset.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_weakrefset.py
import _weakrefset # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_weakrefset.pyc
import _weakref # builtin
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/copy_reg.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/copy_reg.py
import copy_reg # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/copy_reg.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/traceback.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/traceback.py
import traceback # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/traceback.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sysconfig.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sysconfig.py
import sysconfig # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sysconfig.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/re.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/re.py
import re # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/re.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_compile.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_compile.py
import sre_compile # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_compile.pyc
import _sre # builtin
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_parse.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_parse.py
import sre_parse # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_parse.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_constants.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_constants.py
import sre_constants # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/sre_constants.pyc
dlopen("/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_locale.so", 2);
import _locale # dynamically loaded from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_locale.so
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_sysconfigdata.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_sysconfigdata.py
import _sysconfigdata # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_sysconfigdata.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_osx_support.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_osx_support.py
import _osx_support # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_osx_support.pyc
import encodings # directory /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/__init__.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/__init__.py
import encodings # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/__init__.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/codecs.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/codecs.py
import codecs # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/codecs.pyc
import _codecs # builtin
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/aliases.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/aliases.py
import encodings.aliases # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/aliases.pyc
# /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/utf_8.pyc matches /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/utf_8.py
import encodings.utf_8 # precompiled from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/utf_8.pyc
Python 2.7.10 (default, Oct 23 2015, 19:19:21) 
[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
dlopen("/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/readline.so", 2);
import readline # dynamically loaded from /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/readline.so
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()
# clear __builtin__._
# clear sys.path
# clear sys.argv
# clear sys.ps1
# clear sys.ps2
# clear sys.exitfunc
# clear sys.exc_type
# clear sys.exc_value
# clear sys.exc_traceback
# clear sys.last_type
# clear sys.last_value
# clear sys.last_traceback
# clear sys.path_hooks
# clear sys.path_importer_cache
# clear sys.meta_path
# clear sys.flags
# clear sys.float_info
# restore sys.stdin
# restore sys.stdout
# restore sys.stderr
# cleanup __main__
# cleanup[1] encodings
# cleanup[1] site
# cleanup[1] sysconfig
# cleanup[1] abc
# cleanup[1] _weakrefset
# cleanup[1] sre_constants
# cleanup[1] _codecs
# cleanup[1] _warnings
# cleanup[1] zipimport
# cleanup[1] _sysconfigdata
# cleanup[1] mpl_toolkits
# cleanup[1] encodings.utf_8
# cleanup[1] _osx_support
# cleanup[1] codecs
# cleanup[1] readline
# cleanup[1] signal
# cleanup[1] traceback
# cleanup[1] posix
# cleanup[1] encodings.aliases
# cleanup[1] exceptions
# cleanup[1] _weakref
# cleanup[1] re
# cleanup[1] _locale
# cleanup[1] sre_compile
# cleanup[1] _sre
# cleanup[1] sre_parse
# cleanup[2] copy_reg
# cleanup[2] posixpath
# cleanup[2] errno
# cleanup[2] _abcoll
# cleanup[2] types
# cleanup[2] genericpath
# cleanup[2] stat
# cleanup[2] warnings
# cleanup[2] UserDict
# cleanup[2] os.path
# cleanup[2] linecache
# cleanup[2] os
# cleanup sys
# cleanup __builtin__
# cleanup ints: 20 unfreed ints
# cleanup floats
(MITgcm) Macs-MacBook-Pro:run mac$ conda update python

PackageNotInstalledError: Package is not installed in prefix.
  prefix: /opt/anaconda3/envs/MITgcm
  package name: python


(MITgcm) Macs-MacBook-Pro:run mac$ conda deactivate
(base) Macs-MacBook-Pro:run mac$ cd
(base) Macs-MacBook-Pro:~ mac$ conda activate T_Mod_Num
(T_Mod_Num) Macs-MacBook-Pro:~ mac$ python
Python 3.6.13 |Anaconda, Inc.| (default, Feb 23 2021, 12:58:59) 
[GCC Clang 10.0.0 ] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()
(T_Mod_Num) Macs-MacBook-Pro:~ mac$ pip install --user MITgcmutils
Collecting MITgcmutils
  Downloading MITgcmutils-0.1.2-py3-none-any.whl (49 kB)
     |████████████████████████████████| 49 kB 690 kB/s 
Requirement already satisfied: numpy in /opt/anaconda3/envs/T_Mod_Num/lib/python3.6/site-packages (from MITgcmutils) (1.19.2)
Installing collected packages: MITgcmutils
Successfully installed MITgcmutils-0.1.2
(T_Mod_Num) Macs-MacBook-Pro:~ mac$ conda deactivate
(base) Macs-MacBook-Pro:~ mac$ conda activate MITgcm/
Not a conda environment: /Users/mac/MITgcm
(base) Macs-MacBook-Pro:~ mac$ conda activate MITgcm
(MITgcm) Macs-MacBook-Pro:~ mac$ conda deactivate
(base) Macs-MacBook-Pro:~ mac$ 
